<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="17:BuzzerAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b56c5bcf150"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b56c59bf680"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b56c59bf680"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b56c59bca00"/></to>
    </wire>
    <wire loc="18:BuzzerAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b56c5bd19f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b56c5b959a0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b56c5b959a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b56c5b91400"/></to>
    </wire>
    <wire loc="20:BuzzerAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b56c5c2c7a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b56c6c8bc30"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b56c6c8bc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b56c73e9590"/></to>
    </wire>
    <wire loc="21:BuzzerAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b56c5c357e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b56c6c8a8b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b56c6c8a8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b56c73e7270"/></to>
    </wire>
    <wire loc="22:BuzzerAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2b56c5c3ba50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b56c6199c20"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b56c6199c20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b56c61f1020"/></to>
    </wire>
    <wire loc="23:BuzzerAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b56c5c428f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b56c6c8b020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b56c6c8b020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b56c73ea850"/></to>
    </wire>
    <wire loc="24:BuzzerAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b56c5c3d180"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b56c6cd9910"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b56c6cd9910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b56c61c2020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:BuzzerAppC.nc">
      <from><interface-ref name="Sounder" scoped="" ref="0x2b56c5c50cb0"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x2b56c6cd5630"/></to>
    </wire>
    <wire loc="9:/opt/tinyos-2.1.2/tos/interfaces/SounderC.nc">
      <from><interface-ref name="Mts300Sounder" scoped="" ref="0x2b56c6cd5630"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x2b56c6cd2630"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b56c59beb50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c6b2edd0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b56c59beb50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c6abfb70"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b56c59beb50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c6a8c750"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b56c59beb50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c6a54080"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b56c59beb50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c692d800"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b56c59beb50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c6853450"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b56c59beb50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c63637e0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b56c59beb50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c729dd70"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b56c59beb50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c663c020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b56c59beb50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c62aad60"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b56c59beb50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c718a060"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b56c59beb50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c5f74e60"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b56c59beb50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c7075020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b56c5b800c0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b56c58be460"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b56c58be460"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b56c5981230"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b56c5b80ae0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c59c1c80"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b56c59c1c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c59cf0c0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b56c5b7f210"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b56c59beb50"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b56c59cad50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c6426e80"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b56c59ca020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b56c5b61020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b56c59ce020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c5b62910"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b56c59cf7a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c5bc5920"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b56c59cf7a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b56c59d29e0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b56c59d29e0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b56c59d5530"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b56c59d8110"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b56c59cad50"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b56c59dcad0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b56c59ec060"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b56c59ec060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b56c5a72da0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b56c59d3cd0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b56c59d8110"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b56c5a25cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c5b13120"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b56c5a014e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b56c5aa02b0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b56c5aa02b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6e38e20"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b56c5a15350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b56c5ab38f0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b56c5ab38f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6ee93f0"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b56c5a1bcb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b56c5ac88f0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b56c5ac88f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6f453f0"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b56c59ea670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b56c5a6f2b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b56c5a6f2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6d34e20"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b56c5a1e670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b56c5ab85d0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b56c5ab85d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6f4ce20"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b56c59e8cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b56c5a79a20"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b56c5a79a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6d96c90"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b56c59fbcb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b56c5a8b020"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b56c5a8b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6de00a0"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b56c5a0ee40"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b56c5a9d760"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b56c5a9d760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6e2d6d0"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b56c5a12cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b56c5ab0da0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b56c5ab0da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6edfe20"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b56c59e2800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b56c5a758f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b56c5a758f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6ce0e20"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b56c59f3670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b56c5a87020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b56c5a87020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6d8b3f0"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b56c5a06670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b56c5a995d0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b56c5a995d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6dd69b0"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b56c5a0a670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b56c5aacc10"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b56c5aacc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6e830a0"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b56c5a17670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b56c5ac4da0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b56c5ac4da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6f3be20"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b56c5a21b20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c5b18120"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b56c5a08cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b56c5ab55d0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b56c5ab55d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6e8ee20"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b56c5a72da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6d3a6d0"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b56c59ef020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b56c5a835d0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b56c5a835d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6d82e20"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b56c5a234e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c5b0e6d0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b56c59fd670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b56c5a8ed30"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b56c5a8ed30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6de7c90"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b56c5a00800"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b56c5a9f440"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b56c5a9f440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6e340a0"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b56c5a14670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b56c5ab2a80"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b56c5ab2a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6ee56d0"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b56c5a19020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b56c5ac7a80"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b56c5ac7a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6f416d0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b56c59e9990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b56c5a80440"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b56c5a80440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6d300a0"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b56c59f5020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b56c5a78c10"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b56c5a78c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6d93e20"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b56c59f8020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b56c5a9b2b0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b56c5a9b2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6ddc3f0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b56c5a0c060"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b56c5a9c8f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b56c5a9c8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6e8a9b0"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b56c5a10020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b56c5aae020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b56c5aae020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6edb0a0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b56c59e1b20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b56c5a74a80"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b56c5a74a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6d400a0"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b56c59f2990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b56c5a862b0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b56c5a862b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6d886d0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b56c5a05990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b56c5a98760"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b56c5a98760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6dd3e20"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b56c5a26990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b56c5ac2020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b56c5ac2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6f370a0"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b56c5a02020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b56c5aa1020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b56c5aa1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6e3bc90"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b56c5a16020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b56c5ab4760"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b56c5ab4760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6eec0a0"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b56c5a1c990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b56c5ab7760"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b56c5ab7760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6f480a0"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b56c5a20e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c5b276d0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b56c59eb350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b56c5a70020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b56c5a70020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6d379b0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b56c59fe350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b56c5a82760"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b56c5a82760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6d7e0a0"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b56c5a0f350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b56c5ab9460"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b56c5ab9460"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6f4fc90"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b56c59fc990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b56c5a8de60"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b56c5a8de60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6de4e20"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b56c59ffb20"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b56c5a9e5d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b56c5a9e5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6e303f0"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b56c5a13990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b56c5ab1c10"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b56c5ab1c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6ee29b0"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b56c5a18350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b56c5ac6c10"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b56c5ac6c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6f3e9b0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b56c59d6580"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b56c5a766b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b56c5a766b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6ce3c90"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b56c59f4350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b56c5a89da0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b56c5a89da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6d8e0a0"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b56c59f7350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b56c5a9a440"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b56c5a9a440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6dd96d0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b56c5a0b350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b56c5aada80"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b56c5aada80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6e87e20"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b56c5a22800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c5b1ec90"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b56c5a09990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b56c5ab63f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b56c5ab63f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6e91c90"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b56c5a04cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b56c5a978f0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b56c5a978f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6dcf0a0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b56c59eee40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b56c5a73c10"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b56c5a73c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6d3d3f0"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b56c59f1cb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b56c5a85440"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b56c5a85440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b56c6d859b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b56c597f1d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b56c598a740"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b56c598d250"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b56c59a3690"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b56c603ba70"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b56c5bc5920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c5b89dc0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b56c5b90b90"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b56c5bb3020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b56c5bb3020"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b56c59e1b20"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b56c5ba5e30"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b56c5bb2380"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b56c5bb2380"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b56c59e2800"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b56c5ba3020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b56c5bc66a0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b56c5bc66a0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b56c59d6580"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicSetting" scoped="" ref="0x2b56c5c6ba60"/></from>
      <to><interface-ref name="MicSetting" scoped="" ref="0x2b56c5c800c0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/mts300/MicDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b56c5c71900"/></from>
      <to><interface-ref name="MicAtm128AdcConfig" scoped="" ref="0x2b56c5c7f450"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/lib/mts300/MicDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b56c5c75b90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c617ee70"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b56c617ee70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c7188970"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/mts300/MicDeviceP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b56c61a5b60"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b56c617c400"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b56c617c400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b56c7185020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/mts300/MicDeviceP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c61a48b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c617b060"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c617b060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c7185c30"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/mts300/MicDeviceP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b56c6177a10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b56c5c70540"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/mts300/MicDeviceP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b56c5c8d960"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b56c6131140"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b56c6131140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b56c5f78050"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/lib/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicPower" scoped="" ref="0x2b56c5c8acd0"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x2b56c5cc5330"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x2b56c5cc5330"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x2b56c59f8020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicMuxSel" scoped="" ref="0x2b56c5c88020"/></from>
      <to><interface-ref name="PW6" scoped="" ref="0x2b56c5cdc980"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x2b56c5cdc980"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x2b56c5a05990"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/mts300/MicDeviceP.nc">
      <from><interface-ref name="InterruptPin" scoped="" ref="0x2b56c5c873d0"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x2b56c5cd6980"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2b56c5cd6980"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x2b56c5a10020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicAdc" scoped="" ref="0x2b56c5c9d4c0"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x2b56c5ce7740"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x2b56c5ce7740"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x2b56c5ce0d80"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/mts300/MicDeviceP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b56c5c93d80"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b56c5f64880"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b56c5f64880"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b56c5db7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/mts300/MicDeviceP.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x2b56c5caacb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c5da49f0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b56c5da49f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c5d999b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/mts300/MicDeviceP.nc">
      <from><interface-ref name="AlertInterrupt" scoped="" ref="0x2b56c5ca8170"/></from>
      <to><interface-ref name="Int3_Interrupt" scoped="" ref="0x2b56c5cd23d0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0x2b56c5cd23d0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b56c5d7ab50"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0x2b56c5cd4a70"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b56c5d81680"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x2b56c5ce89b0"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x2b56c5ce0020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x2b56c5ce7df0"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x2b56c5cdf4b0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x2b56c5ce6ba0"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x2b56c5cf9350"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2b56c5cd8340"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x2b56c5a13990"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0x2b56c5ce96a0"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x2b56c59ffb20"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x2b56c5cc8c90"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x2b56c59fc990"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x2b56c5cde4d0"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x2b56c59f7350"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x2b56c5ce7090"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x2b56c5ce06d0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0x2b56c5cea380"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x2b56c5a00800"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x2b56c5cdbc90"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x2b56c5a04cb0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0x2b56c5cd5d50"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b56c5d76b50"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x2b56c5ce44b0"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x2b56c5cf9a00"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2b56c5cd7660"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x2b56c5a12cb0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x2b56c5cc6020"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x2b56c59fbcb0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x2b56c5cdd7e0"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x2b56c5a06670"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x2b56c5ce64f0"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x2b56c5cdfb60"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2b56c5cd9020"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x2b56c5a14670"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0x2b56c5cd36f0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b56c5d7d120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0x2b56c5ceb020"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x2b56c5a0c060"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x2b56c5ce4b60"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x2b56c5cf80f0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x2b56c5ccc9c0"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x2b56c59fd670"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b56c5d847a0"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x2b56c5cffb70"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x2b56c5cffb70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b56c5d58020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b56c5d802f0"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x2b56c5cfeb70"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x2b56c5cfeb70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b56c5d54020"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b56c5d7dc20"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x2b56c5cfdb70"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x2b56c5cfdb70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b56c5d50020"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b56c5d797a0"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x2b56c5cfcb70"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x2b56c5cfcb70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b56c5d67020"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2b56c5d06d10"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b56c5d4a260"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2b56c5d05c30"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b56c5d450a0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2b56c5d02e20"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b56c5d293f0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2b56c5d00b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b56c5d41020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b56c5d4d2f0"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x2b56c5d13d80"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b56c5d49100"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x2b56c5d12580"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b56c5d44020"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x2b56c5d12d00"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b56c5d41e40"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x2b56c5d114a0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b56c5d58e40"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x2b56c5d11c20"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b56c5d54e40"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x2b56c5d10420"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b56c5d50e40"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x2b56c5d10ba0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b56c5d67e40"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x2b56c5d0e420"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b56c5d999b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c5e538b0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b56c5db7020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b56c5e7e820"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x2b56c5e796c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c5e2b210"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b56c5e2b210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c7072850"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b56c5e775a0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b56c5ef9e30"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x2b56c5e952a0"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x2b56c5ef4ba0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b56c5e45020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b56c5ef9570"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b56c5e45d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b56c5e2a7a0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b56c5e2a7a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b56c7071e40"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x2b56c5ef32f0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x2b56c5f0d500"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x2b56c5f0d500"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x2b56c5f06020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x2b56c5ef1c50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b56c5f36870"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x2b56c5eef2f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b56c5f36870"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b56c5e2a020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b56c70716c0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c5e29400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c7070a70"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b56c706f400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b56c5e29cd0"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b56c706fbc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b56c7075630"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b56c706dde0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x2b56c5f04b80"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x2b56c5a02020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x2b56c5f03e50"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x2b56c5a014e0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b56c5f78050"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b56c5f70c30"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b56c5f70c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b56c6125150"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b56c5f74e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c5f8dc40"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b56c5f8c500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b56c6117790"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b56c5f8dc40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c60a5c80"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b56c611f640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b56c60c9830"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b56c60c4cd0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b56c5f81960"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b56c5f81960"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b56c60a4530"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b56c6116a60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b56c5fa4020"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b56c5fa4020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b56c60a18d0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b56c60a18d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b56c711b8d0"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b56c60a5c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c7120b40"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b56c60a4530"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b56c711f4b0"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b56c7119bc0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b56c60068b0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b56c60068b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b56c601d190"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b56c7114e20"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b56c6027c10"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b56c6027c10"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b56c6040570"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b56c7112d40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b56c6026cf0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b56c6026cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b56c603e6b0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b56c710d020"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b56c6021130"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b56c6021130"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b56c6039230"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b56c60bf020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b56c611aa00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b56c617dc00"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b56c7187850"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b56c7184590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b56c617b930"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b56c7184d50"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b56c718a670"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b56c7181020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b56c71bb400"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b56c6177a10"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b56c71bbe80"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b56c61a5590"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b56c71ba470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b56c61a5b60"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c71b90e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c61a48b0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2b56c71b98c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x2b56c71b7100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b56c61f1020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b56c61f9d90"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b56c6196ca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b56c61f0050"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b56c61f0050"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b56c6b9a020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b56c61c2c00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b56c61eedf0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b56c61eedf0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b56c6b98df0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b56c61c12b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b56c61eca80"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b56c61eca80"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b56c6b96a80"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b56c61bd310"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b56c69d9550"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b56c69d9550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b56c69cba80"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b56c61cf130"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b56c61e0e70"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b56c61e0e70"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b56c6217b40"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b56c61c2020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b56c61ee210"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b56c61ee210"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b56c6b98210"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b56c61b6170"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b56c61eab20"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b56c61eab20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b56c6218990"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b56c61c0020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b56c61ed470"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b56c61ed470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b56c6b97470"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b56c61ad3f0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b56c69d5660"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b56c69d5660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b56c69c7af0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b56c61f9d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b56c6b76b80"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b56c61e0020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b56c6b948b0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b56c6205020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b56c6b95ce0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c61e3c20"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c621a9e0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c621a9e0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c6990670"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b56c6217b40"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b56c6b76080"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b56c6218990"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b56c69db6e0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b56c61fc0d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b56c6216790"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b56c6216790"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b56c6b61020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b56c61dfda0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b56c62174c0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b56c62174c0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b56c69daa70"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2b56c6b8b0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c61f6e60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b56c6b93860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b56c61f34e0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b56c61f34e0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b56c6ae5ca0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b56c6b91690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b56c621a390"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b56c621a390"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b56c6ae4a50"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b56c6b8d4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b56c680cb90"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c6b91ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c6990670"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c6990670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c69d0d20"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c6b90b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c69da0c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c69da0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c69cc640"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b56c6b8f610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b56c62ae550"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b56c62ae550"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b56c62a41a0"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b56c6b8c1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b56c620f020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b56c620f020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b56c620a4c0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b56c6b8bd30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b56c5b959a0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b56c6b76b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b56c6b73d90"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b56c69daa70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b56c69cb020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b56c6b61020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b56c6b5f410"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b56c6ae5ca0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b56c6ad9a20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b56c6b76080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b56c6b6f2d0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b56c61f4020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b56c6ae55f0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b56c6ae55f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2b56c6ad9370"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b56c69db6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b56c69cdc50"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b56c61f6e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c6ae7cb0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b56c6ae7cb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c6adb7b0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b56c6219240"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b56c6ae6960"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b56c6ae6960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b56c6ada4d0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b56c61f46e0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b56c6ae3170"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b56c6ae3170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b56c6ad7020"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b56c6ae4a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b56c6ad8840"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b56c6b73d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b56c6212020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b56c6212020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b56c620eb90"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b56c6ae26b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b56c6a91220"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b56c6a91220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b56c6a8fa20"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b56c6a90020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b56c6b64350"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b56c6b64350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b56c6b61d70"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b56c6b61d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b56c6b26cf0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b56c6b26cf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b56c6b74860"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b56c6b74860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b56c6212b10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b56c6212b10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b56c620b790"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b56c6ae2020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b56c6b77980"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b56c6b77980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b56c6b73690"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b56c6b73690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b56c6ac7aa0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b56c6ac7aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b56c6ac2e30"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b56c6ac3950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b56c6211940"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b56c6211940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b56c692f9a0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b56c692f9a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b56c6928080"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b56c6239320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c628a020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b56c628a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c62a5470"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b56c6231880"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b56c62884b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b56c62884b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b56c62a2020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b56c6237ba0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b56c68316c0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b56c6237ba0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b56c6932670"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b56c6932670"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b56c692de80"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b56c68316c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b56c6853ad0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b56c6229810"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2b56c682e020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b56c682e020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b56c68523b0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b56c6230700"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b56c682ecb0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b56c682ecb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b56c68510c0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c6227b00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c6990670"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c624c130"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c69da0c0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b56c6225b60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b56c6a59a20"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b56c6a59a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b56c6aa8a20"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2b56c6247850"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b56c6a5baa0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b56c6a5baa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b56c66011d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b56c6228470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b56c5b959a0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2b56c62422a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2b56c62432a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2b56c62452b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2b56c62a8890"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2b56c62a1500"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2b56c629e3a0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b56c6360220"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2b56c6360220"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b56c635a1d0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b56c62cb5c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b56c650f970"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b56c650f970"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b56c59e8cb0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b56c62ca830"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b56c650b020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b56c650b020"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b56c59ea670"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b56c62c9b50"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2b56c65454e0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b56c65454e0"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x2b56c59eb350"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b56c62c7020"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2b56c653a400"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b56c653a400"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b56c6553440"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b56c62e40d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c67a5250"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b56c67a5250"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c6589600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b56c62b5120"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2b56c67a2cc0"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b56c67a2cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b56c62b5830"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2b56c67a0060"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b56c67a0060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b56c62b4940"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2b56c67a2020"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b56c67a2020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b56c62b4020"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2b56c67a06b0"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b56c67a06b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b56c62b99b0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2b56c6797cd0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b56c6797cd0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b56c62c03c0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2b56c6795ce0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b56c6795ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b56c62c0c70"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2b56c6794500"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b56c6794500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b56c62bb570"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2b56c679b2f0"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b56c679b2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b56c62bbe40"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b56c679bad0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b56c679bad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b56c62c5200"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2b56c678fce0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b56c678fce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b56c62bd830"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2b56c678f500"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b56c678f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b56c62b8720"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2b56c67972f0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b56c67972f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b56c62b7020"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2b56c679a2f0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b56c679a2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b56c62b78d0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b56c67992f0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b56c67992f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2b56c62e3bd0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c67c69e0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b56c67c69e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c6589600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2b56c62e4e40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c67e9aa0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b56c67e9aa0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c6589600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b56c62c16b0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b56c680cb90"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b56c629c970"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b56c67f9020"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2b56c62d8820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2b56c62d9940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b56c63637e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c6513450"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b56c6513450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c651bda0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b56c635a1d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b56c71f47b0"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b56c71f47b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b56c71e73f0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b56c71e1b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b56c71ed0b0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b56c71ed0b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b56c72567a0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b56c71e3780"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b56c6480d00"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b56c6480d00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b56c64e9ad0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b56c7253a30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b56c637ae50"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b56c637ae50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b56c63881e0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b56c724edb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b56c6391ad0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b56c63678c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b56c6383580"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b56c63947f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b56c6382d00"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b56c6391ad0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b56c63b37e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b56c6391ad0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b56c63afd30"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b56c6391ad0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b56c63aa2a0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x2b56c63a6910"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b56c6027c10"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b56c6425610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b56c637ae50"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b56c64e5020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b56c647aca0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b56c647aca0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b56c64aca00"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b56c6499cb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b56c637ae50"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b56c650eb20"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b56c59fe350"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b56c650de40"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x2b56c5a12cb0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b56c6361790"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b56c5a0b350"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b56c6546330"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b56c5a0ee40"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b56c6536700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b56c6533020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b56c6539060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b56c65597a0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x2b56c6533c40"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b56c63947f0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b56c65582f0"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x2b56c5cfdb70"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x2b56c6552060"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b56c6361790"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x2b56c654fbc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b56c67a2670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b56c6796ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b56c6795500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b56c678bce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b56c678dce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b56c67a19c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b56c678ece0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b56c6792500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c67a3020"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c6588350"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c6588350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c65be660"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b56c679f370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b56c679f9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b56c679d160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b56c678d500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b56c679aad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b56c678b500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b56c678c500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b56c6792ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b56c678e500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b56c6794ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b56c67d1500"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b56c65862c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b56c67a3990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b56c679cae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b56c6799ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b56c6796500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b56c679d7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b56c679c490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b56c67a0d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b56c6790ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b56c678cce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b56c6790500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b56c67a1370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b56c6793ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b56c6793500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b56c679de00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b56c67d0610"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b56c65862c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2b56c65862c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b56c65bb890"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c65baba0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c65b9a30"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b56c6589600"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c65bc510"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65b88b0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2b56c65aab40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b56c6606770"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b56c6606770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b56c66011d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b56c65b6060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c67839e0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b56c67839e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c674e3b0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b56c65b3c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b56c6781760"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b56c6781760"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b56c6620bc0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b56c65aa2e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b56c6781d70"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b56c6781d70"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b56c665b310"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b56c65b4a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b56c5b959a0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2b56c65a6bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b56c66011d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b56c663cb70"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b56c665b310"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b56c6651800"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b56c6620bc0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b56c6652640"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b56c67833d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c6620560"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b56c6620560"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c6652020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x2b56c674d170"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c665a1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b56c674de40"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b56c59e8cb0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b56c6657680"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b56c6652c80"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b56c665a1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c6650530"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2b56c6673c10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c6759390"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b56c6759390"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c729a490"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c6672920"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c67588d0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c67588d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c72999a0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2b56c6674800"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2b56c66a63e0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2b56c66a63e0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2b56c66a0350"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b56c6670150"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b56c59a5740"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2b56c6690190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2b56c66d9680"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b56c59a5740"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b56c66dea40"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b56c59e8cb0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b56c66ddc90"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b56c59f5020"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2b56c66db020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b56c59f4350"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2b56c66da340"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b56c59f3670"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b56c6758150"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b56c7299220"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b56c7298400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b56c67571f0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b56c7298bc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b56c729c410"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b56c72977a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b56c67b9c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b56c67c4da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b56c67bdb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b56c67b7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b56c67b7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b56c67f1670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b56c67f3670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b56c67c2120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b56c67f5670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b56c67bcc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b56c67bac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b56c67b3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b56c67b6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c67c5760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c6588350"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b56c67c0aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b56c67bf120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b56c67bf870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b56c67f5e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b56c67c2dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b56c67ba480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b56c67bc480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b56c67c4750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b56c67f2e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b56c67f3e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b56c67b2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b56c67b0e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b56c67b4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b56c67f1e50"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b56c65862c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b56c67c4100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b56c67bd370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b56c67b9480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b56c67b6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b56c67b8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b56c67c3450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b56c67b8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b56c67be020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b56c67becc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b56c67b0670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b56c67b1e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b56c67c0450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b56c67b1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b56c67f2670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b56c67b2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b56c67c3aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b56c67b3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b56c67c2770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b56c67b4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b56c67be670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b56c67ef020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b56c65862c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b56c67dcc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b56c67e7da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b56c67dfb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b56c67d9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b56c67d9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b56c6815670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b56c6817670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b56c67e4120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b56c6818670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b56c67dec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b56c67ddc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b56c67d6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b56c67d8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c67e8760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c6588350"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b56c67e3aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b56c67e2120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b56c67e2870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b56c6818e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b56c67e4dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b56c67dd480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b56c67de480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b56c67e7750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b56c6816e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b56c6817e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b56c67d5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b56c6819e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b56c67d7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b56c6815e50"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b56c65862c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b56c67e7100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b56c67df370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b56c67dc480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b56c67d8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b56c67db670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b56c67e5450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b56c67dbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b56c67e1020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b56c67e1cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b56c6819670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b56c67d4e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b56c67e3450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b56c67d4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b56c6816670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b56c67d5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b56c67e5aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b56c67d6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b56c67e4770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b56c67d7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b56c67e1670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b56c6813020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b56c65862c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2b56c682a9f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2b56c6850060"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2b56c682c190"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2b56c68507f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2b56c684f220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b56c6360220"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b56c6843d60"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b56c6361790"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b56c6886080"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b56c650f970"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b56c6883370"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2b56c6546330"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b56c68431e0"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2b56c6536700"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b56c68826e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c690dc30"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b56c690dc30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c6589600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c68814e0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c690c8f0"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c690c8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c6588350"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b56c687d020"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b56c690b2f0"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b56c690b2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b56c687d730"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2b56c690acc0"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b56c690acc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b56c687de60"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2b56c6909370"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b56c6909370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b56c687c5c0"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2b56c6907d00"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b56c6907d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b56c687f6b0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b56c6901c60"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b56c6901c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b56c6880020"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2b56c693c020"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b56c693c020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b56c65862c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b56c6880d80"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b56c6942670"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b56c6942670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b56c687cd00"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b56c6903480"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b56c6903480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b56c687a0c0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b56c68ffe50"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b56c68ffe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b56c687a990"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b56c68fe670"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b56c68fe670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b56c687b930"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2b56c69057b0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b56c69057b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b56c6878530"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2b56c693fe50"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b56c693fe50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b56c6879380"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b56c6941670"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b56c6941670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b56c6879bf0"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b56c6941e50"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b56c6941e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b56c6873780"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b56c692f020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b56c692f020"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b56c692a6d0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c684b4d0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c6990670"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c684a4f0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c69da0c0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b56c6848200"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b56c69d9550"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b56c6884570"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b56c69d1480"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b56c69d1480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b56c69c38b0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b56c6877110"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b56c5b959a0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b56c6900c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b56c690a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b56c6904c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b56c68fee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b56c693e670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b56c6903c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b56c68fae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b56c68fd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b56c6906370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b56c6906ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b56c6942e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b56c6907060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b56c6901480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b56c690b940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b56c68f9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b56c68f7e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b56c68fc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b56c693ee50"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b56c65862c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b56c6904490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b56c6900480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b56c68fde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b56c68ff670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b56c690a670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b56c6905160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b56c6905e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b56c68f7670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b56c68f8e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b56c69076b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b56c68f8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b56c693f670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b56c68f9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b56c68fa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b56c69099c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b56c68fce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2b56c692e1a0"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2b56c6928820"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b56c6960150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b56c5b959a0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b56c6927020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b56c650f970"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b56c6926380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2b56c650eb20"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b56c69256b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2b56c650de40"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b56c6924a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b56c6539060"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b56c69236e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c6a4d520"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b56c6a4d520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b56c6589600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b56c6922530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2b56c6a32840"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b56c6a32840"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b56c65862c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b56c6921ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2b56c6a47060"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b56c6a47060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b56c69213a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2b56c6a47d00"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b56c6a47d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c6920330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c6990670"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c691f1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c69da0c0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b56c691dd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b56c69d9550"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b56c691fb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b56c62ae550"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b56c69643e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b56c6a3f840"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b56c6a3f840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b56c6964cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b56c6a3e060"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b56c6a3e060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b56c6965b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2b56c6a46ae0"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b56c6a46ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b56c69626d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2b56c6a32060"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b56c6a32060"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b56c6963590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b56c6a35060"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b56c6a35060"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b56c6963e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b56c6a35840"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b56c6a35840"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b56c6961020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b56c6a36840"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b56c6a36840"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b56c69618b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b56c6a4cc20"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b56c6a4cc20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2b56c69549d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b56c6a0a020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b56c6480d00"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b56c69c13b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b56c6a0ccf0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b56c69bf6e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b56c5f8c500"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b56c6a050b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b56c5f78050"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b56c6a40620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b56c6a4b940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b56c6a44620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b56c6a3e840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b56c6a4acc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b56c6a36060"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b56c6a43620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b56c6a41620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b56c6a3a840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b56c6a3d060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c6a4c2b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c6588350"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b56c6a476b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b56c6a46490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b56c6a499c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b56c6a43e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b56c6a44e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b56c6a4b2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b56c6a33840"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b56c6a39060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b56c6a37840"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b56c6a3c060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b56c6a45e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b56c6a41e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b56c6a3d840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b56c6a3f060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b56c6a4a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b56c6a457b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b56c6a37060"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b56c6a38840"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b56c6a38060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b56c6a33060"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b56c6a39840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b56c6a4a670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b56c6a3a060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b56c6a49370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b56c6a3c840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b56c6a45160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b56c6a31930"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b56c65862c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b56c6a57920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b56c6a54940"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b56c6a5d9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b56c6a54080"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b56c6a8ce60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b56c6a90020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b56c6a8bae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b56c6a8d690"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b56c6a8d690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b56c66011d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b56c6a8a8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b56c6a59a20"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c6a89170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c69da0c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2b56c6ac3200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2b56c6abf570"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b56c6abe3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b56c6ac3950"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c6abea70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c69da0c0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b56c6ad7d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b56c6ae26b0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b56c6ad6b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b56c6ae2020"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c6ad52f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c6990670"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c6ad4170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c69da0c0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b56c6ad4b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b56c6b2d410"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2b56c6b4edb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2b56c6b75800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b56c6b71580"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b56c6b71580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b56c66011d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b56c6b5c1c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b56c6218990"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b56c73ea850"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b56c73dc390"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b56c73e9590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b56c61c12b0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b56c73e7270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b56c61c0020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b56c6c88020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b56c73e68f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b56c73e68f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b56c61b6170"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b56c73db060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b56c6c3a940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b56c73dbc70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b56c61c0020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b56c6c3a940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b56c6ca14b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b56c6ca0400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b56c6196ca0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b56c6c9f060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b56c61c0020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b56c6c9e720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b56c61c12b0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b56c6c9d480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b56c6c9dc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b56c6cd8020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b56c61c12b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b56c6cd8c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b56c61c0020"/></to>
    </wire>
    <wire loc="10:/opt/tinyos-2.1.2/tos/interfaces/SounderC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b56c6ccf020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b56c6cc1750"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b56c6cc1750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b56c5f78050"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:/opt/tinyos-2.1.2/tos/interfaces/SounderC.nc">
      <from><interface-ref name="SounderPin" scoped="" ref="0x2b56c6cca520"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x2b56c5cc6020"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BuzzerC" loc="12:BuzzerC.nc">
      <module/>
    </component>
    <component qname="MicDeviceP" loc="39:/opt/tinyos-2.1.2/tos/lib/mts300/MicDeviceP.nc">
      <configuration/>
    </component>
    <component qname="MicP" loc="47:/opt/tinyos-2.1.2/tos/lib/mts300/MicP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicaBusC" loc="18:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicDeviceP.I2CPot" loc="43(MicDeviceP.I2CPot):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicDeviceP.WarmupTimer" loc="44(MicDeviceP.WarmupTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b56c5f99020"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicDeviceP.Arbiter" loc="89(MicDeviceP.Arbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.microphone">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.Arbiter.Queue" loc="42(MicDeviceP.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicDeviceP.Arbiter.Arbiter" loc="52(MicDeviceP.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicDeviceP.PowerManager" loc="67(MicDeviceP.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.PowerManager.PowerManager" loc="58(MicDeviceP.PowerManager.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="53:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="TOne" ref="0x2b56c5978c20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="TOne" ref="0x2b56c5978c20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b56c593f390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="TOne" ref="0x2b56c5978c20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x2b56c5977480"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b56c593f390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="TOne" ref="0x2b56c5978c20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.1.2/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.1.2/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/opt/tinyos-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b56c593f390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BuzzerAppC.AMSenderC" loc="47(BuzzerAppC.AMSenderC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BuzzerAppC.AMSenderC.SenderC" loc="47(BuzzerAppC.AMSenderC.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BuzzerAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(BuzzerAppC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BuzzerAppC.AMReceiverC" loc="43(BuzzerAppC.AMReceiverC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SounderC" loc="1:/opt/tinyos-2.1.2/tos/interfaces/SounderC.nc">
      <configuration/>
    </component>
    <component qname="SounderP" loc="1:/opt/tinyos-2.1.2/tos/interfaces/SounderP.nc">
      <module/>
    </component>
    <component qname="SounderC.TimerMilliC" loc="44(SounderC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b56c5a292f0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b56c5a29660" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b56c5a299d0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b56c5a3e9f0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b56c5a3ed80" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b56c5a3b170" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b56c5a3b4c0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b56c5acfaa0" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b56c5acfe30" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b56c5acc200" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b56c5acc550" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x2b56c5d14750" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x2b56c5d14ae0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x2b56c5d14e70" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b56c5d281f0" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b56c5db1c20" loc="89:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b56c5dd8790" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b56c5dd9020" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b56c5f99020" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b56c5f99020"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b56c5f99330" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b56c5fb6a20" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b56c5fb6a20"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b56c5fb6d30" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b56c609a160" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b56c609a160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b56c60e5230" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b56c60e5230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b56c60e5560" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b56c6118de0" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b56c6118de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b56c6127020" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x2b56c614eac0" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b56c645c5f0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b56c645c5f0"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2b56c645c960" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b56c64471f0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b56c64471f0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b56c64479b0" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b56c64479b0"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2b56c6447cd0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b56c64ab300" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b56c64ab300"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b56c64abac0" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b56c64abac0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b56c64c8250" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b56c64c8250"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b56c64c8a20" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b56c64c8a20"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b56c64c8e10" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b56c64c8e10"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b56c64c7610" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b56c64c7610"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b56c64c79e0" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b56c64c6210" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b56c64c6210"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b56c64e0620" loc="52:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b56c64e0620"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b56c64e0df0" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b56c64e0df0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b56c64de220" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b56c64de220"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b56c64dea00" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b56c64dea00"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b56c64dedd0" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.1.2/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b56c6715b00" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b56c6c046f0" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b56c6bfb3a0" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b56c6c4e0d0" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b56c6c36c80" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b56c6c84370" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b56c59beb50" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b56c59beb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c59c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b56c59bf680" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b56c59bf680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b56c59bfa00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b56c59cad50" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b56c59cad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c59c9100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c59c1c80" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c59c1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c59cb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b56c59ca020" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b56c59ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b56c59ca3a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b56c59ca530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b56c59ca6c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b56c59ca850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b56c59ca9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b56c59cf7a0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b56c59cf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c59cfb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c59cf0c0" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c59cf0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c59cf440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b56c59ce020" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b56c59ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c59ce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b56c59d8110" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b56c59d8110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c59d8490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b56c59d29e0" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b56c59d29e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c59d2d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b56c59d3cd0" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b56c59d3cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c59e00a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b56c59dcad0" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b56c59dcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59dce50"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59d3020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59d31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59d3340"/>
        <function-ref name="get" scoped="" ref="0x2b56c59d34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59d3660"/>
        <function-ref name="set" scoped="" ref="0x2b56c59d37f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59d3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b56c59d5530" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b56c59d5530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c59d58b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b56c5a25cb0" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b56c5a25cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a24610"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a247a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a24930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a24ac0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a24c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a24de0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a23020"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a231b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b56c5a014e0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b56c5a014e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a01860"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a019f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a01b80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a01d10"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a00020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a001b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a00340"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a004d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b56c5a15350" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b56c5a15350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a156d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a15860"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a159f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a15b80"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a15d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a14020"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a141b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a14340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b56c5a1bcb0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b56c5a1bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a1a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a1a230"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a1a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a1a550"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a1a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a1a870"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a1aa00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a1ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b56c59ea670" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b56c59ea670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59ea9f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59eab80"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59ead10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59e9020"/>
        <function-ref name="get" scoped="" ref="0x2b56c59e91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59e9340"/>
        <function-ref name="set" scoped="" ref="0x2b56c59e94d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59e9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b56c5a1e670" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b56c5a1e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a1e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a1eb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a1ed10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a1c020"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a1c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a1c340"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a1c4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a1c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b56c59e8cb0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b56c59e8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59f60a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59f6230"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59f63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59f6550"/>
        <function-ref name="get" scoped="" ref="0x2b56c59f66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59f6870"/>
        <function-ref name="set" scoped="" ref="0x2b56c59f6a00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59f6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b56c59fbcb0" loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b56c59fbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59f90a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59f9230"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59f93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59f9550"/>
        <function-ref name="get" scoped="" ref="0x2b56c59f96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59f9870"/>
        <function-ref name="set" scoped="" ref="0x2b56c59f9a00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59f9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b56c5a0ee40" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b56c5a0ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a0d1e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a0d370"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a0d500"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a0d690"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a0d820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a0d9b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a0db40"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a0dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b56c5a12cb0" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b56c5a12cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a110a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a11230"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a113c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a11550"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a116e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a11870"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a11a00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a11b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b56c59e2800" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b56c59e2800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59e2b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59e2d10"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59e1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59e11b0"/>
        <function-ref name="get" scoped="" ref="0x2b56c59e1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59e14d0"/>
        <function-ref name="set" scoped="" ref="0x2b56c59e1660"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59e17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b56c59f3670" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b56c59f3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59f39f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59f3b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59f3d10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59f2020"/>
        <function-ref name="get" scoped="" ref="0x2b56c59f21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59f2340"/>
        <function-ref name="set" scoped="" ref="0x2b56c59f24d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59f2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b56c5a06670" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b56c5a06670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a069f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a06b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a06d10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a05020"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a05340"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a054d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a05660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b56c5a0a670" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b56c5a0a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a0a9f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a0ab80"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a0ad10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a09020"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a091b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a09340"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a094d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a09660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b56c5a17670" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b56c5a17670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a179f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a17b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a17d10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a26020"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a261b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a26340"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a264d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a26660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b56c5a21b20" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b56c5a21b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a20020"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a201b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a20340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a204d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a20660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a207f0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a20980"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a20b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b56c5a08cb0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b56c5a08cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a070a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a07230"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a073c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a07550"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a076e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a07870"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a07a00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a07b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b56c59ec060" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b56c59ec060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59ec3e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59ec570"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59ec700"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59ec890"/>
        <function-ref name="get" scoped="" ref="0x2b56c59eca20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59ecbb0"/>
        <function-ref name="set" scoped="" ref="0x2b56c59ecd40"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b56c59ef020" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b56c59ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59ef3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59ef530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59ef6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59ef850"/>
        <function-ref name="get" scoped="" ref="0x2b56c59ef9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59efb70"/>
        <function-ref name="set" scoped="" ref="0x2b56c59efd00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b56c5a234e0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b56c5a234e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a23860"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a239f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a23b80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a23d10"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a22020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a221b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a22340"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a224d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b56c59fd670" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b56c59fd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59fd9f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59fdb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59fdd10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59fc020"/>
        <function-ref name="get" scoped="" ref="0x2b56c59fc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59fc340"/>
        <function-ref name="set" scoped="" ref="0x2b56c59fc4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59fc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b56c5a00800" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b56c5a00800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a00b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a00d10"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59ff020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59ff1b0"/>
        <function-ref name="get" scoped="" ref="0x2b56c59ff340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59ff4d0"/>
        <function-ref name="set" scoped="" ref="0x2b56c59ff660"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59ff7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b56c5a14670" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b56c5a14670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a149f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a14b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a14d10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a13020"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a131b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a13340"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a134d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a13660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b56c5a19020" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b56c5a19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a193a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a19530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a196c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a19850"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a199e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a19b70"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a19d00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b56c59e9990" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b56c59e9990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59e9d10"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59e8020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59e81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59e8340"/>
        <function-ref name="get" scoped="" ref="0x2b56c59e84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59e8660"/>
        <function-ref name="set" scoped="" ref="0x2b56c59e87f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59e8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b56c59f5020" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b56c59f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59f53a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59f5530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59f56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59f5850"/>
        <function-ref name="get" scoped="" ref="0x2b56c59f59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59f5b70"/>
        <function-ref name="set" scoped="" ref="0x2b56c59f5d00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b56c59f8020" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b56c59f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59f83a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59f8530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59f86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59f8850"/>
        <function-ref name="get" scoped="" ref="0x2b56c59f89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59f8b70"/>
        <function-ref name="set" scoped="" ref="0x2b56c59f8d00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b56c5a0c060" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b56c5a0c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a0c3e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a0c570"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a0c700"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a0c890"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a0ca20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a0cbb0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a0cd40"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b56c5a10020" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b56c5a10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a103a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a10530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a106c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a10850"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a109e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a10b70"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a10d00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b56c59e1b20" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b56c59e1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59ee020"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59ee1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59ee340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59ee4d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c59ee660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59ee7f0"/>
        <function-ref name="set" scoped="" ref="0x2b56c59ee980"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59eeb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b56c59f2990" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b56c59f2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59f2e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59f1020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59f11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59f1340"/>
        <function-ref name="get" scoped="" ref="0x2b56c59f14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59f1660"/>
        <function-ref name="set" scoped="" ref="0x2b56c59f17f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59f1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b56c5a05990" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b56c5a05990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a05d10"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a04020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a04340"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a04660"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a047f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a04980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b56c5a26990" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b56c5a26990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a26d10"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a25020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a251b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a25340"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a254d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a25660"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a257f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a25980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b56c5a02020" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b56c5a02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a025a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a02730"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a028c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a02a50"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a02be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a02d70"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a01020"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a011b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b56c5a16020" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b56c5a16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a163a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a16530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a166c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a16850"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a169e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a16b70"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a16d00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b56c5a1c990" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b56c5a1c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a1cd10"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a1b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a1b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a1b340"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a1b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a1b660"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a1b7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a1b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b56c5a20e40" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b56c5a20e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a1f1e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a1f370"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a1f500"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a1f690"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a1f820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a1f9b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a1fb40"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a1fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b56c59eb350" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b56c59eb350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59eb6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59eb860"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59eb9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59ebb80"/>
        <function-ref name="get" scoped="" ref="0x2b56c59ebd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59ea020"/>
        <function-ref name="set" scoped="" ref="0x2b56c59ea1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59ea340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b56c59fe350" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b56c59fe350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59fe6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59fe860"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59fe9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59feb80"/>
        <function-ref name="get" scoped="" ref="0x2b56c59fed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59fd020"/>
        <function-ref name="set" scoped="" ref="0x2b56c59fd1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59fd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b56c5a0f350" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b56c5a0f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a0f6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a0f860"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a0f9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a0fb80"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a0fd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a1e020"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a1e1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a1e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b56c59fc990" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b56c59fc990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59fcd10"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59fb020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59fb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59fb340"/>
        <function-ref name="get" scoped="" ref="0x2b56c59fb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59fb660"/>
        <function-ref name="set" scoped="" ref="0x2b56c59fb7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59fb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b56c59ffb20" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b56c59ffb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a0e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a0e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a0e340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a0e4d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a0e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a0e7f0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a0e980"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a0eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b56c5a13990" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b56c5a13990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a13d10"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a12020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a121b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a12340"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a124d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a12660"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a127f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a12980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b56c5a18350" loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b56c5a18350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a186d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a18860"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a189f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a18b80"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a18d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a17020"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a171b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a17340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b56c59d6580" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b56c59d6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59d6900"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59d6a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59d6c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59d6db0"/>
        <function-ref name="get" scoped="" ref="0x2b56c59e2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59e21b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c59e2340"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59e24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b56c59f4350" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b56c59f4350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59f46d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59f4860"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59f49f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59f4b80"/>
        <function-ref name="get" scoped="" ref="0x2b56c59f4d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59f3020"/>
        <function-ref name="set" scoped="" ref="0x2b56c59f31b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59f3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b56c59f7350" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b56c59f7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59f76d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59f7860"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59f79f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59f7b80"/>
        <function-ref name="get" scoped="" ref="0x2b56c59f7d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a06020"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a061b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a06340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b56c5a0b350" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b56c5a0b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a0b6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a0b860"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a0b9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a0bb80"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a0bd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a0a020"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a0a1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a0a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b56c5a22800" loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b56c5a22800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a22b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a22d10"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a21020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a211b0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a21340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a214d0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a21660"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a217f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b56c5a09990" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b56c5a09990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a09d10"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a08020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a081b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a08340"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a084d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a08660"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a087f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a08980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b56c5a04cb0" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b56c5a04cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a030a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a03230"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a033c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a03550"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a036e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a03870"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a03a00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a03b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b56c59eee40" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b56c59eee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59ed1e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59ed370"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59ed500"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59ed690"/>
        <function-ref name="get" scoped="" ref="0x2b56c59ed820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59ed9b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c59edb40"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59edcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b56c59f1cb0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b56c59f1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c59f00a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c59f0230"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c59f03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c59f0550"/>
        <function-ref name="get" scoped="" ref="0x2b56c59f06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c59f0870"/>
        <function-ref name="set" scoped="" ref="0x2b56c59f0a00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c59f0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b56c5a74a80" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b56c5a74a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a74e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a73020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a731b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a73340"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a73660"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a737f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a73980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b56c5a70020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b56c5a70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a703a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a70530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a706c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a70850"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a709e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a70b70"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a70d00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a6f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b56c5a766b0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b56c5a766b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a76a30"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a76bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a76d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a75020"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a751b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a75340"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a754d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a75660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b56c5a73c10" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b56c5a73c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a72020"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a721b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a72340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a724d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a72660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a727f0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a72980"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a72b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b56c5a6f2b0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b56c5a6f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a6f630"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a6f7c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a6f950"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a6fae0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a6fc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a6fe00"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a80020"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a801b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b56c5a758f0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b56c5a758f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a75c70"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a75e00"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a74020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a741b0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a74340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a744d0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a74660"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a747f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b56c5a72da0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b56c5a72da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a71180"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a71310"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a714a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a71630"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a717c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a71950"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a71ae0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a71c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b56c5a80440" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b56c5a80440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a807c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a80950"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a80ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a80c70"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a80e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a7f020"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a7f1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a7f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6ce3c90" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6ce3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6ce20a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6ce2230"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6ce23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6ce2550"/>
        <function-ref name="get" scoped="" ref="0x2b56c6ce26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6ce2870"/>
        <function-ref name="set" scoped="" ref="0x2b56c6ce2a00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6ce2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6ce0e20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6ce0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6cde1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6cde350"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6cde4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6cde670"/>
        <function-ref name="get" scoped="" ref="0x2b56c6cde800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6cde990"/>
        <function-ref name="set" scoped="" ref="0x2b56c6cdeb20"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6cdecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6d400a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6d400a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6d40420"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6d405b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6d40740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6d408d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c6d40a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6d40bf0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6d40d80"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6d3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6d3d3f0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6d3d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6d3d770"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6d3d900"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6d3da90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6d3dc20"/>
        <function-ref name="get" scoped="" ref="0x2b56c6d3ddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6d3c020"/>
        <function-ref name="set" scoped="" ref="0x2b56c6d3c1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6d3c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6d3a6d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6d3a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6d3aa50"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6d3abe0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6d3ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6d39020"/>
        <function-ref name="get" scoped="" ref="0x2b56c6d391b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6d39340"/>
        <function-ref name="set" scoped="" ref="0x2b56c6d394d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6d39660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6d379b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6d379b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6d37d30"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6d36020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6d361b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6d36340"/>
        <function-ref name="get" scoped="" ref="0x2b56c6d364d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6d36660"/>
        <function-ref name="set" scoped="" ref="0x2b56c6d367f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6d36980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6d34e20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6d34e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6d331c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6d33350"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6d334e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6d33670"/>
        <function-ref name="get" scoped="" ref="0x2b56c6d33800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6d33990"/>
        <function-ref name="set" scoped="" ref="0x2b56c6d33b20"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6d33cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6d300a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6d300a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6d30420"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6d305b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6d30740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6d308d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c6d30a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6d30bf0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6d30d80"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6d2f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b56c5a89da0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b56c5a89da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a88180"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a88310"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a884a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a88630"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a887c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a88950"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a88ae0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a88c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b56c5a85440" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b56c5a85440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a857c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a85950"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a85ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a85c70"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a85e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a83020"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a831b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a83340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b56c5a79a20" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b56c5a79a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a79da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a78020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a781b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a78340"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a784d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a78660"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a787f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a78980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b56c5a87020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b56c5a87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a873a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a87530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a876c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a87850"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a879e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a87b70"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a87d00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b56c5a835d0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b56c5a835d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a83950"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a83ae0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a83c70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a83e00"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a82020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a821b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a82340"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b56c5a78c10" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b56c5a78c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a89020"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a891b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a89340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a894d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a89660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a897f0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a89980"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a89b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b56c5a862b0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b56c5a862b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a86630"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a867c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a86950"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a86ae0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a86c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a86e00"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a85020"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b56c5a82760" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b56c5a82760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a82ae0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a82c70"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a82e00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a81020"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a811b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a81340"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a814d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a81660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6d96c90" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6d96c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6d950a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6d95230"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6d953c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6d95550"/>
        <function-ref name="get" scoped="" ref="0x2b56c6d956e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6d95870"/>
        <function-ref name="set" scoped="" ref="0x2b56c6d95a00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6d95b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6d93e20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6d93e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6d911c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6d91350"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6d914e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6d91670"/>
        <function-ref name="get" scoped="" ref="0x2b56c6d91800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6d91990"/>
        <function-ref name="set" scoped="" ref="0x2b56c6d91b20"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6d91cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6d8e0a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6d8e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6d8e420"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6d8e5b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6d8e740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6d8e8d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c6d8ea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6d8ebf0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6d8ed80"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6d8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6d8b3f0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6d8b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6d8b770"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6d8b900"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6d8ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6d8bc20"/>
        <function-ref name="get" scoped="" ref="0x2b56c6d8bdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6d8a020"/>
        <function-ref name="set" scoped="" ref="0x2b56c6d8a1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6d8a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6d886d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6d886d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6d88a50"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6d88be0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6d88d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6d87020"/>
        <function-ref name="get" scoped="" ref="0x2b56c6d871b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6d87340"/>
        <function-ref name="set" scoped="" ref="0x2b56c6d874d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6d87660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6d859b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6d859b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6d85d30"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6d84020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6d841b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6d84340"/>
        <function-ref name="get" scoped="" ref="0x2b56c6d844d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6d84660"/>
        <function-ref name="set" scoped="" ref="0x2b56c6d847f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6d84980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6d82e20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6d82e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6d811c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6d81350"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6d814e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6d81670"/>
        <function-ref name="get" scoped="" ref="0x2b56c6d81800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6d81990"/>
        <function-ref name="set" scoped="" ref="0x2b56c6d81b20"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6d81cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6d7e0a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6d7e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6d7e420"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6d7e5b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6d7e740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6d7e8d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c6d7ea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6d7ebf0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6d7ed80"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6d7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b56c5a8b020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b56c5a8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a8b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a8b530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a8b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a8b850"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a8b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a8bb70"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a8bd00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b56c5a995d0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b56c5a995d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a99950"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a99ae0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a99c70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a99e00"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a98020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a981b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a98340"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a984d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b56c5a8ed30" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b56c5a8ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a8d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a8d270"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a8d400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a8d590"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a8d720"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a8d8b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a8da40"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a8dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b56c5a9b2b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b56c5a9b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a9b630"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a9b7c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a9b950"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a9bae0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a9bc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a9be00"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a9a020"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a9a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b56c5a98760" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b56c5a98760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a98ae0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a98c70"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a98e00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a97020"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a971b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a97340"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a974d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a97660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b56c5a8de60" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b56c5a8de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a8c210"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a8c3a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a8c530"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a8c6c0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a8c850"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a8c9e0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a8cb70"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a8cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b56c5a9a440" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b56c5a9a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a9a7c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a9a950"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a9aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a9ac70"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a9ae00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a99020"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a991b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a99340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b56c5a978f0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b56c5a978f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a97c70"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a97e00"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a96020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a961b0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a96340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a964d0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a96660"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a967f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6de7c90" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6de7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6de60a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6de6230"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6de63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6de6550"/>
        <function-ref name="get" scoped="" ref="0x2b56c6de66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6de6870"/>
        <function-ref name="set" scoped="" ref="0x2b56c6de6a00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6de6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6de4e20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6de4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6de31c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6de3350"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6de34e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6de3670"/>
        <function-ref name="get" scoped="" ref="0x2b56c6de3800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6de3990"/>
        <function-ref name="set" scoped="" ref="0x2b56c6de3b20"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6de3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6de00a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6de00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6de0420"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6de05b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6de0740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6de08d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c6de0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6de0bf0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6de0d80"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6dde020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6ddc3f0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6ddc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6ddc770"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6ddc900"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6ddca90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6ddcc20"/>
        <function-ref name="get" scoped="" ref="0x2b56c6ddcdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6ddb020"/>
        <function-ref name="set" scoped="" ref="0x2b56c6ddb1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6ddb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6dd96d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6dd96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6dd9a50"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6dd9be0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6dd9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6dd8020"/>
        <function-ref name="get" scoped="" ref="0x2b56c6dd81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6dd8340"/>
        <function-ref name="set" scoped="" ref="0x2b56c6dd84d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6dd8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6dd69b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6dd69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6dd6d30"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6dd5020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6dd51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6dd5340"/>
        <function-ref name="get" scoped="" ref="0x2b56c6dd54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6dd5660"/>
        <function-ref name="set" scoped="" ref="0x2b56c6dd57f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6dd5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6dd3e20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6dd3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6dd21c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6dd2350"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6dd24e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6dd2670"/>
        <function-ref name="get" scoped="" ref="0x2b56c6dd2800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6dd2990"/>
        <function-ref name="set" scoped="" ref="0x2b56c6dd2b20"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6dd2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6dcf0a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6dcf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6dcf420"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6dcf5b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6dcf740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6dcf8d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c6dcfa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6dcfbf0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6dcfd80"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6dce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b56c5a9f440" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b56c5a9f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a9f7c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a9f950"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a9fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a9fc70"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a9fe00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a9e020"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a9e1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a9e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b56c5a9c8f0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b56c5a9c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a9cc70"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a9ce00"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5aad020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5aad1b0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5aad340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5aad4d0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5aad660"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5aad7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b56c5aa1020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b56c5aa1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5aa13a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5aa1530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5aa16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5aa1850"/>
        <function-ref name="get" scoped="" ref="0x2b56c5aa19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5aa1b70"/>
        <function-ref name="set" scoped="" ref="0x2b56c5aa1d00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5aa0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b56c5a9e5d0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b56c5a9e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a9e950"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a9eae0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a9ec70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a9ee00"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a9d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a9d1b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a9d340"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a9d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b56c5aada80" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b56c5aada80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5aade00"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5aac020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5aac1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5aac340"/>
        <function-ref name="get" scoped="" ref="0x2b56c5aac4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5aac660"/>
        <function-ref name="set" scoped="" ref="0x2b56c5aac7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5aac980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b56c5aa02b0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b56c5aa02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5aa0630"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5aa07c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5aa0950"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5aa0ae0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5aa0c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5aa0e00"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a9f020"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a9f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b56c5a9d760" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b56c5a9d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5a9dae0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5a9dc70"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5a9de00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5a9c020"/>
        <function-ref name="get" scoped="" ref="0x2b56c5a9c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5a9c340"/>
        <function-ref name="set" scoped="" ref="0x2b56c5a9c4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5a9c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b56c5aacc10" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b56c5aacc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5aab020"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5aab1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5aab340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5aab4d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5aab660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5aab7f0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5aab980"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5aabb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6e3bc90" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6e3bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6e3a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6e3a230"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6e3a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6e3a550"/>
        <function-ref name="get" scoped="" ref="0x2b56c6e3a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6e3a870"/>
        <function-ref name="set" scoped="" ref="0x2b56c6e3aa00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6e3ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6e38e20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6e38e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6e371c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6e37350"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6e374e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6e37670"/>
        <function-ref name="get" scoped="" ref="0x2b56c6e37800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6e37990"/>
        <function-ref name="set" scoped="" ref="0x2b56c6e37b20"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6e37cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6e340a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6e340a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6e34420"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6e345b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6e34740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6e348d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c6e34a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6e34bf0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6e34d80"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6e32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6e303f0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6e303f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6e30770"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6e30900"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6e30a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6e30c20"/>
        <function-ref name="get" scoped="" ref="0x2b56c6e30db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6e2f020"/>
        <function-ref name="set" scoped="" ref="0x2b56c6e2f1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6e2f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6e2d6d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6e2d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6e2da50"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6e2dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6e2dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6e2c020"/>
        <function-ref name="get" scoped="" ref="0x2b56c6e2c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6e2c340"/>
        <function-ref name="set" scoped="" ref="0x2b56c6e2c4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6e2c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6e8a9b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6e8a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6e8ad30"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6e89020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6e891b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6e89340"/>
        <function-ref name="get" scoped="" ref="0x2b56c6e894d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6e89660"/>
        <function-ref name="set" scoped="" ref="0x2b56c6e897f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6e89980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6e87e20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6e87e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6e861c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6e86350"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6e864e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6e86670"/>
        <function-ref name="get" scoped="" ref="0x2b56c6e86800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6e86990"/>
        <function-ref name="set" scoped="" ref="0x2b56c6e86b20"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6e86cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6e830a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6e830a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6e83420"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6e835b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6e83740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6e838d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c6e83a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6e83bf0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6e83d80"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6e82020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b56c5ab4760" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b56c5ab4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5ab4ae0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5ab4c70"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ab4e00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ab3020"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ab31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5ab3340"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ab34d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5ab3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b56c5ab1c10" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b56c5ab1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5ab0020"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5ab01b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ab0340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ab04d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ab0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5ab07f0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ab0980"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5ab0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b56c5ab63f0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b56c5ab63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5ab6770"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5ab6900"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ab6a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ab6c20"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ab6db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5ab5020"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ab51b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5ab5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b56c5ab38f0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b56c5ab38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5ab3c70"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5ab3e00"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ab2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ab21b0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ab2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5ab24d0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ab2660"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5ab27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b56c5ab0da0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b56c5ab0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5aaf180"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5aaf310"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5aaf4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5aaf630"/>
        <function-ref name="get" scoped="" ref="0x2b56c5aaf7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5aaf950"/>
        <function-ref name="set" scoped="" ref="0x2b56c5aafae0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5aafc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b56c5ab55d0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b56c5ab55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5ab5950"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5ab5ae0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ab5c70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ab5e00"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ab4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5ab41b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ab4340"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5ab44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b56c5ab2a80" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b56c5ab2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5ab2e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5ab1020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ab11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ab1340"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ab14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5ab1660"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ab17f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5ab1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b56c5aae020" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b56c5aae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5aae3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5aae530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5aae6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5aae850"/>
        <function-ref name="get" scoped="" ref="0x2b56c5aae9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5aaeb70"/>
        <function-ref name="set" scoped="" ref="0x2b56c5aaed00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5abf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6e91c90" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6e91c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6e900a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6e90230"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6e903c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6e90550"/>
        <function-ref name="get" scoped="" ref="0x2b56c6e906e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6e90870"/>
        <function-ref name="set" scoped="" ref="0x2b56c6e90a00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6e90b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6e8ee20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6e8ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6e8d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6e8d350"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6e8d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6e8d670"/>
        <function-ref name="get" scoped="" ref="0x2b56c6e8d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6e8d990"/>
        <function-ref name="set" scoped="" ref="0x2b56c6e8db20"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6e8dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6eec0a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6eec0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6eec420"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6eec5b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6eec740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6eec8d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c6eeca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6eecbf0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6eecd80"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6eeb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6ee93f0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6ee93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6ee9770"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6ee9900"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6ee9a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6ee9c20"/>
        <function-ref name="get" scoped="" ref="0x2b56c6ee9db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6ee7020"/>
        <function-ref name="set" scoped="" ref="0x2b56c6ee71b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6ee7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6ee56d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6ee56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6ee5a50"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6ee5be0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6ee5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6ee4020"/>
        <function-ref name="get" scoped="" ref="0x2b56c6ee41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6ee4340"/>
        <function-ref name="set" scoped="" ref="0x2b56c6ee44d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6ee4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6ee29b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6ee29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6ee2d30"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6ee1020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6ee11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6ee1340"/>
        <function-ref name="get" scoped="" ref="0x2b56c6ee14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6ee1660"/>
        <function-ref name="set" scoped="" ref="0x2b56c6ee17f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6ee1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6edfe20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6edfe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6ede1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6ede350"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6ede4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6ede670"/>
        <function-ref name="get" scoped="" ref="0x2b56c6ede800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6ede990"/>
        <function-ref name="set" scoped="" ref="0x2b56c6edeb20"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6edecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6edb0a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6edb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6edb420"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6edb5b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6edb740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6edb8d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c6edba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6edbbf0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6edbd80"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6eda020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b56c5ab7760" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b56c5ab7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5ab7ae0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5ab7c70"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ab7e00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ac8020"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ac81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5ac8340"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ac84d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5ac8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b56c5ac6c10" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b56c5ac6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5ac4020"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5ac41b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ac4340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ac44d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ac4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5ac47f0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ac4980"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5ac4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b56c5ab9460" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b56c5ab9460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5ab97e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5ab9970"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ab9b00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ab9c90"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ab9e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5ab8020"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ab81b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5ab8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b56c5ac88f0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b56c5ac88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5ac8c70"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5ac8e00"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ac7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ac71b0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ac7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5ac74d0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ac7660"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5ac77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b56c5ac4da0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b56c5ac4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5ac3180"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5ac3310"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ac34a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ac3630"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ac37c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5ac3950"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ac3ae0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5ac3c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b56c5ab85d0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b56c5ab85d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5ab8950"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5ab8ae0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ab8c70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ab8e00"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ab7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5ab71b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ab7340"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5ab74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b56c5ac7a80" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b56c5ac7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5ac7e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5ac6020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ac61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ac6340"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ac64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5ac6660"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ac67f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5ac6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b56c5ac2020" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b56c5ac2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5ac23a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5ac2530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ac26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ac2850"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ac29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5ac2b70"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ac2d00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5ac1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6f4fc90" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6f4fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6f4e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6f4e230"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6f4e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6f4e550"/>
        <function-ref name="get" scoped="" ref="0x2b56c6f4e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6f4e870"/>
        <function-ref name="set" scoped="" ref="0x2b56c6f4ea00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6f4eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6f4ce20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6f4ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6f4b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6f4b350"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6f4b4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6f4b670"/>
        <function-ref name="get" scoped="" ref="0x2b56c6f4b800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6f4b990"/>
        <function-ref name="set" scoped="" ref="0x2b56c6f4bb20"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6f4bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6f480a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6f480a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6f48420"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6f485b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6f48740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6f488d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c6f48a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6f48bf0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6f48d80"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6f47020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6f453f0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6f453f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6f45770"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6f45900"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6f45a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6f45c20"/>
        <function-ref name="get" scoped="" ref="0x2b56c6f45db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6f43020"/>
        <function-ref name="set" scoped="" ref="0x2b56c6f431b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6f43340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6f416d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6f416d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6f41a50"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6f41be0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6f41d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6f40020"/>
        <function-ref name="get" scoped="" ref="0x2b56c6f401b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6f40340"/>
        <function-ref name="set" scoped="" ref="0x2b56c6f404d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6f40660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6f3e9b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6f3e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6f3ed30"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6f3d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6f3d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6f3d340"/>
        <function-ref name="get" scoped="" ref="0x2b56c6f3d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6f3d660"/>
        <function-ref name="set" scoped="" ref="0x2b56c6f3d7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6f3d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6f3be20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6f3be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6f3a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6f3a350"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6f3a4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6f3a670"/>
        <function-ref name="get" scoped="" ref="0x2b56c6f3a800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6f3a990"/>
        <function-ref name="set" scoped="" ref="0x2b56c6f3ab20"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6f3acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c6f370a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c6f370a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6f37420"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6f375b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6f37740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6f378d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c6f37a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6f37bf0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6f37d80"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6f36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c5acd460" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c5acd460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5acd7e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5acd970"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5acdb00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5acdc90"/>
        <function-ref name="get" scoped="" ref="0x2b56c5acde20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5aec020"/>
        <function-ref name="set" scoped="" ref="0x2b56c5aec1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5aec340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c5ae8a80" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c5ae8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5ae8e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5ae7020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ae71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ae7340"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ae74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5ae7660"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ae77f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5ae7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c5af63f0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c5af63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5af6770"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5af6900"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5af6a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5af6c20"/>
        <function-ref name="get" scoped="" ref="0x2b56c5af6db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5af5020"/>
        <function-ref name="set" scoped="" ref="0x2b56c5af51b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5af5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c5af1a80" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c5af1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5af1e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5af0020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5af01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5af0340"/>
        <function-ref name="get" scoped="" ref="0x2b56c5af04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5af0660"/>
        <function-ref name="set" scoped="" ref="0x2b56c5af07f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5af0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c5aff3f0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c5aff3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5aff770"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5aff900"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5affa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5affc20"/>
        <function-ref name="get" scoped="" ref="0x2b56c5affdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5afe020"/>
        <function-ref name="set" scoped="" ref="0x2b56c5afe1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5afe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c5afba80" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c5afba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5afbe00"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5afa020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5afa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5afa340"/>
        <function-ref name="get" scoped="" ref="0x2b56c5afa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5afa660"/>
        <function-ref name="set" scoped="" ref="0x2b56c5afa7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5afa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c5b09460" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c5b09460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5b097e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5b09970"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5b09b00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5b09c90"/>
        <function-ref name="get" scoped="" ref="0x2b56c5b09e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5b08020"/>
        <function-ref name="set" scoped="" ref="0x2b56c5b081b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5b08340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c5b04a80" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c5b04a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5b04e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5b03020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5b031b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5b03340"/>
        <function-ref name="get" scoped="" ref="0x2b56c5b034d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5b03660"/>
        <function-ref name="set" scoped="" ref="0x2b56c5b037f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5b03980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c5b13120" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c5b13120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5b134a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5b13630"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5b137c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5b13950"/>
        <function-ref name="get" scoped="" ref="0x2b56c5b13ae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5b13c70"/>
        <function-ref name="set" scoped="" ref="0x2b56c5b13e00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5b12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c5b0e6d0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c5b0e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5b0ea50"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5b0ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5b0ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5b0d020"/>
        <function-ref name="get" scoped="" ref="0x2b56c5b0d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5b0d340"/>
        <function-ref name="set" scoped="" ref="0x2b56c5b0d4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5b0d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c5b1ec90" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c5b1ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5b1c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5b1c230"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5b1c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5b1c550"/>
        <function-ref name="get" scoped="" ref="0x2b56c5b1c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5b1c870"/>
        <function-ref name="set" scoped="" ref="0x2b56c5b1ca00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5b1cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c5b18120" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c5b18120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5b184a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5b18630"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5b187c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5b18950"/>
        <function-ref name="get" scoped="" ref="0x2b56c5b18ae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5b18c70"/>
        <function-ref name="set" scoped="" ref="0x2b56c5b18e00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5b17020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b56c5b276d0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b56c5b276d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5b27a50"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5b27be0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5b27d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5b26020"/>
        <function-ref name="get" scoped="" ref="0x2b56c5b261b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5b26340"/>
        <function-ref name="set" scoped="" ref="0x2b56c5b264d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5b26660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c5b62910" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c5b62910"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b56c58b7d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b56c58b7d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c5b62c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b56c5b61020" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b56c5b61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b56c5b613a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b56c5b61530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b56c5b616c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b56c5b61850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b56c5b619e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b56c5b7f210" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b56c5b7f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c5b7f590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b56c59bca00" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b56c59bca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b56c59bcd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b56c5b80ae0" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b56c5b80ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c5b80e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b56c5b800c0" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b56c5b800c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c5b80440"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b56c5b805d0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b56c5b80760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b56c58b6320" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b56c58b6320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c58b66a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c58b6830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b56c58be460" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b56c58be460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c58be7e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b56c58be970"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b56c58beb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b56c597f1d0" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b56c597f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c597f550"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c597f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b56c598a740" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b56c598a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b56c598aac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b56c5981230" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b56c5981230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c59815b0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b56c5981740"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b56c59818d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b56c59a3690" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b56c59a3690"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b56c59a3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b56c598d250" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b56c598d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b56c598d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b56c59a5740" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b56c59a5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b56c59a5ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b56c5b959a0" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b56c5b959a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b56c5b95d20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b56c5b8a020"/>
        <function-ref name="led1On" scoped="" ref="0x2b56c5b8a1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b56c5b8a340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b56c5b8a4d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5b8a660"/>
        <function-ref name="led1Off" scoped="" ref="0x2b56c5b8a7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b56c5b8ae30"/>
        <function-ref name="set" scoped="" ref="0x2b56c5b8a980"/>
        <function-ref name="led0On" scoped="" ref="0x2b56c5b8ab10"/>
        <function-ref name="led2On" scoped="" ref="0x2b56c5b8aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b56c5b90b90" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b56c5b90b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5ba5020"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5ba51b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ba5340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ba54d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ba5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5ba57f0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ba5980"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5ba5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c5b89dc0" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c5b89dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c5b91180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b56c5ba5e30" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b56c5ba5e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5ba41e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5ba4370"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ba4500"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ba4690"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ba4820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5ba49b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ba4b40"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5ba4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b56c5b91400" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b56c5b91400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b56c5b91780"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b56c5b91910"/>
        <function-ref name="led1On" scoped="" ref="0x2b56c5b91aa0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b56c5b91c30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b56c5b91dc0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5b90020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b56c5b901b0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b56c5b907f0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5b90340"/>
        <function-ref name="led0On" scoped="" ref="0x2b56c5b904d0"/>
        <function-ref name="led2On" scoped="" ref="0x2b56c5b90660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b56c5ba3020" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b56c5ba3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5ba33a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5ba3530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ba36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ba3850"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ba39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5ba3b70"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ba3d00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5ba2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b56c5bb3020" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b56c5bb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5bb33a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5bb3530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5bb36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5bb3850"/>
        <function-ref name="get" scoped="" ref="0x2b56c5bb39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5bb3b70"/>
        <function-ref name="set" scoped="" ref="0x2b56c5bb3d00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5bb2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b56c5bb2380" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b56c5bb2380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5bb2700"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5bb2890"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5bb2a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5bb2bb0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5bb2d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5bc6020"/>
        <function-ref name="set" scoped="" ref="0x2b56c5bc61b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5bc6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b56c5bc5920" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c5bc5920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c5bc5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b56c5bc66a0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b56c5bc66a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5bc6a20"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5bc6bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5bc6d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5bc5020"/>
        <function-ref name="get" scoped="" ref="0x2b56c5bc51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5bc5340"/>
        <function-ref name="set" scoped="" ref="0x2b56c5bc54d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5bc5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2b56c5c3ba50" loc="22:BuzzerC.nc">
      <component-ref qname="BuzzerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x2b56c5c3ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b56c5c3bdd0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b56c5c33020"/>
        <function-ref name="start" scoped="" ref="0x2b56c5c331b0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c5c33340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b56c5bcf150" loc="15:BuzzerC.nc">
      <component-ref qname="BuzzerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b56c5bcf150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b56c5bcf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b56c5c2c7a0" loc="18:BuzzerC.nc">
      <component-ref qname="BuzzerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b56c5c2c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5c2cb20"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b56c5c2ccb0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c5c2ce40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c5bce020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b56c5bce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b56c5c428f0" loc="20:BuzzerC.nc">
      <component-ref qname="BuzzerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b56c5c428f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c5c42c70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c5c42e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c5c1b020"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c5c1b1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c5c1b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sounder" ref="0x2b56c5c50cb0" loc="24:BuzzerC.nc">
      <component-ref qname="BuzzerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sounder" scoped="" ref="0x2b56c5c50cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beepOff" scoped="" ref="0x2b56c5c430a0"/>
        <function-ref name="beep" scoped="" ref="0x2b56c5c43230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x2b56c5c3d180" loc="21:BuzzerC.nc">
      <component-ref qname="BuzzerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b56c5c3d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c5c3d500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b56c5bd19f0" loc="14:BuzzerC.nc">
      <component-ref qname="BuzzerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b56c5bd19f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b56c5bd1d70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b56c5bd0020"/>
        <function-ref name="led1On" scoped="" ref="0x2b56c5bd01b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b56c5bd0340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b56c5bd04d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5bd0660"/>
        <function-ref name="led1Off" scoped="" ref="0x2b56c5bd07f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b56c5bd0e30"/>
        <function-ref name="set" scoped="" ref="0x2b56c5bd0980"/>
        <function-ref name="led0On" scoped="" ref="0x2b56c5bd0b10"/>
        <function-ref name="led2On" scoped="" ref="0x2b56c5bd0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b56c5c357e0" loc="19:BuzzerC.nc">
      <component-ref qname="BuzzerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b56c5c357e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b56c5c35b60"/>
        <function-ref name="source" scoped="" ref="0x2b56c5c35cf0"/>
        <function-ref name="address" scoped="" ref="0x2b56c5c35e80"/>
        <function-ref name="destination" scoped="" ref="0x2b56c5bcd030"/>
        <function-ref name="setSource" scoped="" ref="0x2b56c5bcd1c0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b56c5bcd350"/>
        <function-ref name="type" scoped="" ref="0x2b56c5bcd4e0"/>
        <function-ref name="setType" scoped="" ref="0x2b56c5bcd670"/>
        <function-ref name="isForMe" scoped="" ref="0x2b56c5bcd800"/>
        <function-ref name="setGroup" scoped="" ref="0x2b56c5bcd990"/>
        <function-ref name="localGroup" scoped="" ref="0x2b56c5bcdb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x2b56c5c6ba60" loc="43:/opt/tinyos-2.1.2/tos/lib/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x2b56c5c6ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x2b56c5c6bde0"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5c74020"/>
        <function-ref name="stopMic" scoped="" ref="0x2b56c5c741b0"/>
        <function-ref name="gainAdjust" scoped="" ref="0x2b56c5c74340"/>
        <function-ref name="readToneDetector" scoped="" ref="0x2b56c5c744d0"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5c74660"/>
        <function-ref name="muxSel" scoped="" ref="0x2b56c5c747f0"/>
        <function-ref name="startMic" scoped="" ref="0x2b56c5c74980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x2b56c5c71900" loc="42:/opt/tinyos-2.1.2/tos/lib/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b56c5c71900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b56c5c71c80"/>
        <function-ref name="getChannel" scoped="" ref="0x2b56c5c71e10"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b56c5c61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c5c75b90" loc="41:/opt/tinyos-2.1.2/tos/lib/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c5c75b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c5c62020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c5c621b0"/>
        <function-ref name="request" scoped="" ref="0x2b56c5c62340"/>
        <function-ref name="granted" scoped="" ref="0x2b56c5c624d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c5c62660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b56c5c70540" loc="49:/opt/tinyos-2.1.2/tos/lib/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b56c5c70540"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b56c5c708c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b56c5c70a50"/>
        <function-ref name="start" scoped="" ref="0x2b56c5c70be0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c5c70d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptPin" ref="0x2b56c5c873d0" loc="56:/opt/tinyos-2.1.2/tos/lib/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptPin" scoped="" ref="0x2b56c5c873d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5c87750"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5c878e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5c87a70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5c87c00"/>
        <function-ref name="get" scoped="" ref="0x2b56c5c87d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5c86020"/>
        <function-ref name="set" scoped="" ref="0x2b56c5c861b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5c86340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicAtm128AdcConfig" ref="0x2b56c5c7f450" loc="51:/opt/tinyos-2.1.2/tos/lib/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicAtm128AdcConfig" scoped="" ref="0x2b56c5c7f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b56c5c7f7d0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b56c5c7f960"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b56c5c7faf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicPower" ref="0x2b56c5c8acd0" loc="54:/opt/tinyos-2.1.2/tos/lib/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicPower" scoped="" ref="0x2b56c5c8acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5c890a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5c89230"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5c893c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5c89550"/>
        <function-ref name="get" scoped="" ref="0x2b56c5c896e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5c89870"/>
        <function-ref name="set" scoped="" ref="0x2b56c5c89a00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5c89b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicMuxSel" ref="0x2b56c5c88020" loc="55:/opt/tinyos-2.1.2/tos/lib/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicMuxSel" scoped="" ref="0x2b56c5c88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5c883a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5c88530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5c886c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5c88850"/>
        <function-ref name="get" scoped="" ref="0x2b56c5c889e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5c88b70"/>
        <function-ref name="set" scoped="" ref="0x2b56c5c88d00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5c87020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x2b56c5c800c0" loc="50:/opt/tinyos-2.1.2/tos/lib/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x2b56c5c800c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x2b56c5c80440"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5c805d0"/>
        <function-ref name="stopMic" scoped="" ref="0x2b56c5c80760"/>
        <function-ref name="gainAdjust" scoped="" ref="0x2b56c5c808f0"/>
        <function-ref name="readToneDetector" scoped="" ref="0x2b56c5c80a80"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5c80c10"/>
        <function-ref name="muxSel" scoped="" ref="0x2b56c5c80da0"/>
        <function-ref name="startMic" scoped="" ref="0x2b56c5c7f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x2b56c5caacb0" loc="59:/opt/tinyos-2.1.2/tos/lib/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x2b56c5caacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c5ca90a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c5ca9230"/>
        <function-ref name="request" scoped="" ref="0x2b56c5ca93c0"/>
        <function-ref name="granted" scoped="" ref="0x2b56c5ca9550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c5ca96e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicAdc" ref="0x2b56c5c9d4c0" loc="57:/opt/tinyos-2.1.2/tos/lib/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicAdc" scoped="" ref="0x2b56c5c9d4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b56c5c9d840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x2b56c5c93d80" loc="58:/opt/tinyos-2.1.2/tos/lib/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b56c5c93d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b56c5c65a80"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b56c5c65d40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c5c859e0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b56c5caa020"/>
        <function-ref name="write" scoped="" ref="0x2b56c5c92620"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c5c912b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlertInterrupt" ref="0x2b56c5ca8170" loc="60:/opt/tinyos-2.1.2/tos/lib/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlertInterrupt" scoped="" ref="0x2b56c5ca8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5ca84f0"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5ca8680"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b56c5ca8810"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b56c5ca89a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b56c5c8d960" loc="53:/opt/tinyos-2.1.2/tos/lib/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b56c5c8d960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c5c8ce80"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5c7c4a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b56c5c8c260"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b56c5c7cda0"/>
        <function-ref name="getdt" scoped="" ref="0x2b56c5c8a7a0"/>
        <function-ref name="gett0" scoped="" ref="0x2b56c5c8a320"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c5c7c920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b56c5c7d5a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b56c5c8c870"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b56c5c7da70"/>
        <function-ref name="stop" scoped="" ref="0x2b56c5c7c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0x2b56c5cd4a70" loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0x2b56c5cd4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5cd4df0"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5cd3020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b56c5cd31b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b56c5cd3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x2b56c5ce89b0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x2b56c5ce89b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b56c5ce8d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x2b56c5cc5330" loc="23:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x2b56c5cc5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5cc56b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5cc5840"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5cc59d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5cc5b60"/>
        <function-ref name="get" scoped="" ref="0x2b56c5cc5cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5cc5e80"/>
        <function-ref name="set" scoped="" ref="0x2b56c5cde030"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5cde1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x2b56c5cdc980" loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x2b56c5cdc980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5cdcd00"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5cdb020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5cdb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5cdb340"/>
        <function-ref name="get" scoped="" ref="0x2b56c5cdb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5cdb660"/>
        <function-ref name="set" scoped="" ref="0x2b56c5cdb7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5cdb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x2b56c5ce7df0" loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x2b56c5ce7df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b56c5ce61c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x2b56c5ce6ba0" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x2b56c5ce6ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b56c5ce4180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2b56c5cd8340" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2b56c5cd8340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5cd86c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5cd8850"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5cd89e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5cd8b70"/>
        <function-ref name="get" scoped="" ref="0x2b56c5cd8d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5cd7020"/>
        <function-ref name="set" scoped="" ref="0x2b56c5cd71b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5cd7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0x2b56c5ce96a0" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0x2b56c5ce96a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5ce9a20"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5ce9bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ce9d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ce8020"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ce81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5ce8340"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ce84d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5ce8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x2b56c5cc8c90" loc="21:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x2b56c5cc8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5cc70a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5cc7230"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5cc73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5cc7550"/>
        <function-ref name="get" scoped="" ref="0x2b56c5cc76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5cc7870"/>
        <function-ref name="set" scoped="" ref="0x2b56c5cc7a00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5cc7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x2b56c5cde4d0" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x2b56c5cde4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5cde850"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5cde9e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5cdeb70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5cded00"/>
        <function-ref name="get" scoped="" ref="0x2b56c5cdd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5cdd1b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5cdd340"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5cdd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0x2b56c5cd23d0" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0x2b56c5cd23d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5cd2750"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5cd28e0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b56c5cd2a70"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b56c5cd2c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x2b56c5ce7090" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x2b56c5ce7090"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b56c5ce7410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0x2b56c5cea380" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0x2b56c5cea380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5cea700"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5cea890"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ceaa20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ceabb0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5cead40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5ce9020"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ce91b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5ce9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x2b56c5cdbc90" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x2b56c5cdbc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5cda0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5cda230"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5cda3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5cda550"/>
        <function-ref name="get" scoped="" ref="0x2b56c5cda6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5cda870"/>
        <function-ref name="set" scoped="" ref="0x2b56c5cdaa00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5cdab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0x2b56c5cd5d50" loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0x2b56c5cd5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5cd4210"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5cd43a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b56c5cd4530"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b56c5cd46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x2b56c5ce44b0" loc="51:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x2b56c5ce44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b56c5ce4830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2b56c5cd7660" loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2b56c5cd7660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5cd79e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5cd7b70"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5cd7d00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5cd6020"/>
        <function-ref name="get" scoped="" ref="0x2b56c5cd61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5cd6340"/>
        <function-ref name="set" scoped="" ref="0x2b56c5cd64d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5cd6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x2b56c5cc6020" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x2b56c5cc6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5cc63a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5cc6530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5cc66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5cc6850"/>
        <function-ref name="get" scoped="" ref="0x2b56c5cc69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5cc6b70"/>
        <function-ref name="set" scoped="" ref="0x2b56c5cc6d00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5cc5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x2b56c5cdd7e0" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x2b56c5cdd7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5cddb60"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5cddcf0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5cdde80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5cdc030"/>
        <function-ref name="get" scoped="" ref="0x2b56c5cdc1c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5cdc350"/>
        <function-ref name="set" scoped="" ref="0x2b56c5cdc4e0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5cdc670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x2b56c5ce7740" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x2b56c5ce7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b56c5ce7ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x2b56c5ce64f0" loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x2b56c5ce64f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b56c5ce6870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2b56c5cd9020" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2b56c5cd9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5cd93a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5cd9530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5cd96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5cd9850"/>
        <function-ref name="get" scoped="" ref="0x2b56c5cd99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5cd9b70"/>
        <function-ref name="set" scoped="" ref="0x2b56c5cd9d00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5cd8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0x2b56c5cd36f0" loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0x2b56c5cd36f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5cd3a70"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5cd3c00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b56c5cd3d90"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b56c5cd2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0x2b56c5ceb020" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0x2b56c5ceb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5ceb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5ceb530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5ceb6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5ceb850"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ceb9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5cebb70"/>
        <function-ref name="set" scoped="" ref="0x2b56c5cebd00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5cea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x2b56c5ce4b60" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x2b56c5ce4b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b56c5ce3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x2b56c5ccc9c0" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x2b56c5ccc9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5cccd40"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5cc8020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5cc81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5cc8340"/>
        <function-ref name="get" scoped="" ref="0x2b56c5cc84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5cc8660"/>
        <function-ref name="set" scoped="" ref="0x2b56c5cc87f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5cc8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2b56c5cd6980" loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2b56c5cd6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5cd6d00"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5cd5020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5cd51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5cd5340"/>
        <function-ref name="get" scoped="" ref="0x2b56c5cd54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5cd5660"/>
        <function-ref name="set" scoped="" ref="0x2b56c5cd57f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5cd5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x2b56c5ce0020" loc="18:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x2b56c5ce0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b56c5ce03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x2b56c5cdf4b0" loc="21:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x2b56c5cdf4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b56c5cdf830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x2b56c5cf9350" loc="23:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x2b56c5cf9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b56c5cf96d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x2b56c5ce06d0" loc="19:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x2b56c5ce06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b56c5ce0a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x2b56c5cf9a00" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x2b56c5cf9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b56c5cf9d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x2b56c5ce0d80" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x2b56c5ce0d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b56c5cdf180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x2b56c5cdfb60" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x2b56c5cdfb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b56c5cf9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x2b56c5cf80f0" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x2b56c5cf80f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b56c5cf8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x2b56c5cfdb70" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x2b56c5cfdb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5cfc020"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5cfc1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5cfc340"/>
        <function-ref name="edge" scoped="" ref="0x2b56c5cfc4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5cfc660"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c5cfc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2b56c5d06d10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2b56c5d06d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5d050e0"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5d05270"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5d05400"/>
        <function-ref name="edge" scoped="" ref="0x2b56c5d05590"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5d05720"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c5d058b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x2b56c5cffb70" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x2b56c5cffb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5cfe020"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5cfe1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5cfe340"/>
        <function-ref name="edge" scoped="" ref="0x2b56c5cfe4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5cfe660"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c5cfe7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x2b56c5cfcb70" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x2b56c5cfcb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5cfb020"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5cfb1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5cfb340"/>
        <function-ref name="edge" scoped="" ref="0x2b56c5cfb4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5cfb660"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c5cfb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2b56c5d05c30" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2b56c5d05c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5d00020"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5d001b0"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5d00340"/>
        <function-ref name="edge" scoped="" ref="0x2b56c5d004d0"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5d00660"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c5d007f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x2b56c5cfeb70" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x2b56c5cfeb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5cfd020"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5cfd1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5cfd340"/>
        <function-ref name="edge" scoped="" ref="0x2b56c5cfd4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5cfd660"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c5cfd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2b56c5d02e20" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2b56c5d02e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5d061c0"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5d06350"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5d064e0"/>
        <function-ref name="edge" scoped="" ref="0x2b56c5d06670"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5d06800"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c5d06990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2b56c5d00b70" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2b56c5d00b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5cff020"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5cff1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5cff340"/>
        <function-ref name="edge" scoped="" ref="0x2b56c5cff4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5cff660"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c5cff7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x2b56c5d10ba0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x2b56c5d10ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5d0e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x2b56c5d12580" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x2b56c5d12580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5d12900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x2b56c5d11c20" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x2b56c5d11c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5d10020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x2b56c5d0e420" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x2b56c5d0e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5d0e7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x2b56c5d12d00" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x2b56c5d12d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5d110a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x2b56c5d10420" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x2b56c5d10420"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5d107a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x2b56c5d13d80" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x2b56c5d13d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5d12180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x2b56c5d114a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x2b56c5d114a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5d11820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b56c5d293f0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b56c5d293f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5d29770"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5d29900"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5d29a90"/>
        <function-ref name="edge" scoped="" ref="0x2b56c5d29c20"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5d29db0"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c5d4d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b56c5d4d2f0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b56c5d4d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5d4d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b56c5d4a260" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b56c5d4a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5d4a5e0"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5d4a770"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5d4a900"/>
        <function-ref name="edge" scoped="" ref="0x2b56c5d4aa90"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5d4ac20"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c5d4adb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b56c5d49100" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b56c5d49100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5d49480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b56c5d450a0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b56c5d450a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5d45420"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5d455b0"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5d45740"/>
        <function-ref name="edge" scoped="" ref="0x2b56c5d458d0"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5d45a60"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c5d45bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b56c5d44020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b56c5d44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5d443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b56c5d41020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b56c5d41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5d413a0"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5d41530"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5d416c0"/>
        <function-ref name="edge" scoped="" ref="0x2b56c5d41850"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5d419e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c5d41b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b56c5d41e40" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b56c5d41e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5d401e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b56c5d58020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b56c5d58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5d583a0"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5d58530"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5d586c0"/>
        <function-ref name="edge" scoped="" ref="0x2b56c5d58850"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5d589e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c5d58b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b56c5d58e40" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b56c5d58e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5d571e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b56c5d54020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b56c5d54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5d543a0"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5d54530"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5d546c0"/>
        <function-ref name="edge" scoped="" ref="0x2b56c5d54850"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5d549e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c5d54b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b56c5d54e40" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b56c5d54e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5d531e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b56c5d50020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b56c5d50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5d503a0"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5d50530"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5d506c0"/>
        <function-ref name="edge" scoped="" ref="0x2b56c5d50850"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5d509e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c5d50b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b56c5d50e40" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b56c5d50e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5d4e1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b56c5d67020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b56c5d67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5d673a0"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5d67530"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5d676c0"/>
        <function-ref name="edge" scoped="" ref="0x2b56c5d67850"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5d679e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c5d67b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b56c5d67e40" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b56c5d67e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5d661e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b56c5d847a0" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b56c5d847a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5d84b20"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5d84cb0"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5d84e40"/>
        <function-ref name="edge" scoped="" ref="0x2b56c5d83020"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5d831b0"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c5d83340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b56c5d76b50" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b56c5d76b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5d84020"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5d841b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b56c5d84340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b56c5d844d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b56c5d802f0" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b56c5d802f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5d80670"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5d80800"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5d80990"/>
        <function-ref name="edge" scoped="" ref="0x2b56c5d80b20"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5d80cb0"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c5d80e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b56c5d81680" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b56c5d81680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5d81a00"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5d81b90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b56c5d81d20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b56c5d80020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b56c5d7dc20" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b56c5d7dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5d7c020"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5d7c1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5d7c340"/>
        <function-ref name="edge" scoped="" ref="0x2b56c5d7c4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5d7c660"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c5d7c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b56c5d7d120" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b56c5d7d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5d7d4a0"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5d7d630"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b56c5d7d7c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b56c5d7d950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b56c5d797a0" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b56c5d797a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c5d79b20"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5d79cb0"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5d79e40"/>
        <function-ref name="edge" scoped="" ref="0x2b56c5d78020"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5d781b0"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c5d78340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b56c5d7ab50" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b56c5d7ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c5d79020"/>
        <function-ref name="disable" scoped="" ref="0x2b56c5d791b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b56c5d79340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b56c5d794d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c5da49f0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MicDeviceP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c5da49f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c5da4d70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c5f64020"/>
        <function-ref name="request" scoped="" ref="0x2b56c5f641b0"/>
        <function-ref name="granted" scoped="" ref="0x2b56c5f64340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c5f644d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b56c5f64880" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MicDeviceP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b56c5f64880"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b56c5c65a80"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b56c5c65d40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c5f63500"/>
        <function-ref name="writeDone" scoped="" ref="0x2b56c5f619b0"/>
        <function-ref name="write" scoped="" ref="0x2b56c5f62150"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c5f62d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c5d999b0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c5d999b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c5d99d30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c5db9020"/>
        <function-ref name="request" scoped="" ref="0x2b56c5db91b0"/>
        <function-ref name="granted" scoped="" ref="0x2b56c5db9340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c5db94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b56c5db7020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b56c5db7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b56c5c65a80"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b56c5c65d40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c5db7c50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b56c5db4150"/>
        <function-ref name="write" scoped="" ref="0x2b56c5db68c0"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c5db5510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b56c5e2a020" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b56c5e2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b56c5e2a3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b56c5e2a550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b56c5e29cd0" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b56c5e29cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b56c5e280a0"/>
        <function-ref name="configure" scoped="" ref="0x2b56c5e28230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b56c5e2a7a0" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b56c5e2a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c5e2ab20"/>
        <function-ref name="requested" scoped="" ref="0x2b56c5e2acb0"/>
        <function-ref name="granted" scoped="" ref="0x2b56c5e2ae40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c5e29020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b56c5e291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c5e2b210" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c5e2b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c5e2b5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c5e2b740"/>
        <function-ref name="request" scoped="" ref="0x2b56c5e2b8d0"/>
        <function-ref name="granted" scoped="" ref="0x2b56c5e2ba60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c5e2bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b56c5e29400" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c5e29400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b56c5e29780"/>
        <function-ref name="userId" scoped="" ref="0x2b56c5e29910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c7075020" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c7075020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c70753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b56c7075630" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b56c7075630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b56c70759b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b56c7075b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b56c7075cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b56c7075e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b56c70716c0" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b56c70716c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b56c7071a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b56c7071bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b56c706f400" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b56c706f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b56c706f7a0"/>
        <function-ref name="configure" scoped="" ref="0x2b56c706f930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b56c706fbc0" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b56c706fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b56c706e020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b56c706e1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b56c706e340"/>
        <function-ref name="dequeue" scoped="" ref="0x2b56c706e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b56c7071e40" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b56c7071e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c70701e0"/>
        <function-ref name="requested" scoped="" ref="0x2b56c7070370"/>
        <function-ref name="granted" scoped="" ref="0x2b56c7070500"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c7070690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b56c7070820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b56c706e720" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b56c706e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b56c706eaa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b56c706ec30"/>
        <function-ref name="led1On" scoped="" ref="0x2b56c706edc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b56c706d020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b56c706d1b0"/>
        <function-ref name="get" scoped="" ref="0x2b56c706d340"/>
        <function-ref name="led1Off" scoped="" ref="0x2b56c706d4d0"/>
        <function-ref name="led0On" scoped="" ref="0x2b56c706db10"/>
        <function-ref name="set" scoped="" ref="0x2b56c706d7f0"/>
        <function-ref name="led2On" scoped="" ref="0x2b56c706d660"/>
        <function-ref name="led2Off" scoped="" ref="0x2b56c706d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c7072850" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c7072850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c7072bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c7072d80"/>
        <function-ref name="request" scoped="" ref="0x2b56c7071020"/>
        <function-ref name="granted" scoped="" ref="0x2b56c70711b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c7071340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b56c7070a70" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c7070a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b56c7070df0"/>
        <function-ref name="userId" scoped="" ref="0x2b56c706f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b56c706dde0" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b56c706dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c706c180"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c706c310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b56c5e45780" loc="62:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b56c5e45780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b56c5e45b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b56c5e45d50" loc="63:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b56c5e45d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c5e37100"/>
        <function-ref name="requested" scoped="" ref="0x2b56c5e37290"/>
        <function-ref name="granted" scoped="" ref="0x2b56c5e37420"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c5e375b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b56c5e37740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b56c5e45020" loc="60:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b56c5e45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b56c5e453a0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c5e45530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b56c5e37990" loc="64:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c5e37990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b56c5e37d10"/>
        <function-ref name="userId" scoped="" ref="0x2b56c5e56020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x2b56c5e952a0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x2b56c5e952a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b56c5e95620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b56c5e775a0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b56c5e775a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b56c5c65a80"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b56c5c65d40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c5e98240"/>
        <function-ref name="writeDone" scoped="" ref="0x2b56c5e966d0"/>
        <function-ref name="write" scoped="" ref="0x2b56c5e98e50"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c5e97a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b56c5e958b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b56c5e958b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b56c5e95c30"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b56c5e95dc0"/>
        <function-ref name="led1On" scoped="" ref="0x2b56c5e93020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b56c5e931b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b56c5e93340"/>
        <function-ref name="get" scoped="" ref="0x2b56c5e934d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b56c5e93660"/>
        <function-ref name="led2On" scoped="" ref="0x2b56c5e93ca0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5e93980"/>
        <function-ref name="led2Off" scoped="" ref="0x2b56c5e937f0"/>
        <function-ref name="led0On" scoped="" ref="0x2b56c5e93b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c5e538b0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c5e538b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c5e53c50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c5e53de0"/>
        <function-ref name="request" scoped="" ref="0x2b56c5e7e020"/>
        <function-ref name="granted" scoped="" ref="0x2b56c5e7e1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c5e7e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b56c5e7e820" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b56c5e7e820"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b56c5c65a80"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b56c5c65d40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c5e7d4c0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b56c5e7a9b0"/>
        <function-ref name="write" scoped="" ref="0x2b56c5e7b110"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c5e7bd40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x2b56c5e796c0" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x2b56c5e796c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c5e79a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c5e79bf0"/>
        <function-ref name="request" scoped="" ref="0x2b56c5e79d80"/>
        <function-ref name="granted" scoped="" ref="0x2b56c5e77020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c5e771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x2b56c5ef4ba0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x2b56c5ef4ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b56c5ef3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x2b56c5ef32f0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2b56c5ef32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2b56c5ef3670"/>
        <function-ref name="sendCommand" scoped="" ref="0x2b56c5ef3800"/>
        <function-ref name="setStart" scoped="" ref="0x2b56c5ef3990"/>
        <function-ref name="status" scoped="" ref="0x2b56c5ef3b20"/>
        <function-ref name="hasAcks" scoped="" ref="0x2b56c5ef3cb0"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b56c5ef3e40"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b56c5ef2020"/>
        <function-ref name="read" scoped="" ref="0x2b56c5ef21b0"/>
        <function-ref name="init" scoped="" ref="0x2b56c5ef2340"/>
        <function-ref name="enableAck" scoped="" ref="0x2b56c5ef24d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b56c5ef2660"/>
        <function-ref name="hasStart" scoped="" ref="0x2b56c5ef27f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b56c5ef2980"/>
        <function-ref name="commandComplete" scoped="" ref="0x2b56c5ef2c10"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5ef2da0"/>
        <function-ref name="write" scoped="" ref="0x2b56c5ef1020"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2b56c5ef11b0"/>
        <function-ref name="off" scoped="" ref="0x2b56c5ef1340"/>
        <function-ref name="setStop" scoped="" ref="0x2b56c5ef14d0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2b56c5ef1660"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b56c5ef17f0"/>
        <function-ref name="hasStop" scoped="" ref="0x2b56c5ef1980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x2b56c5ef1c50" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x2b56c5ef1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b56c5ef0020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b56c5ef01b0"/>
        <function-ref name="led1On" scoped="" ref="0x2b56c5ef0340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b56c5ef04d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b56c5ef0660"/>
        <function-ref name="get" scoped="" ref="0x2b56c5ef07f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b56c5ef0980"/>
        <function-ref name="led2On" scoped="" ref="0x2b56c5eef020"/>
        <function-ref name="set" scoped="" ref="0x2b56c5ef0ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b56c5ef0b10"/>
        <function-ref name="led0On" scoped="" ref="0x2b56c5ef0e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x2b56c5eef2f0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x2b56c5eef2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b56c5eef670"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b56c5eef800"/>
        <function-ref name="led1On" scoped="" ref="0x2b56c5eef990"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b56c5eefb20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b56c5eefcb0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5eefe40"/>
        <function-ref name="led1Off" scoped="" ref="0x2b56c5eee020"/>
        <function-ref name="led2On" scoped="" ref="0x2b56c5eee660"/>
        <function-ref name="set" scoped="" ref="0x2b56c5eee340"/>
        <function-ref name="led2Off" scoped="" ref="0x2b56c5eee1b0"/>
        <function-ref name="led0On" scoped="" ref="0x2b56c5eee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b56c5ef9570" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b56c5ef9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b56c5ef98f0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c5ef9a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b56c5ef9e30" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b56c5ef9e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b56c5c65a80"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b56c5c65d40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c5ef8ac0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b56c5ef4020"/>
        <function-ref name="write" scoped="" ref="0x2b56c5ef6710"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c5ef53c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x2b56c5f0d500" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2b56c5f0d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2b56c5f0d880"/>
        <function-ref name="sendCommand" scoped="" ref="0x2b56c5f0da10"/>
        <function-ref name="setStart" scoped="" ref="0x2b56c5f0dba0"/>
        <function-ref name="status" scoped="" ref="0x2b56c5f0dd30"/>
        <function-ref name="hasAcks" scoped="" ref="0x2b56c5f0c020"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b56c5f0c1b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b56c5f0c340"/>
        <function-ref name="read" scoped="" ref="0x2b56c5f0c4d0"/>
        <function-ref name="init" scoped="" ref="0x2b56c5f0c660"/>
        <function-ref name="enableAck" scoped="" ref="0x2b56c5f0c7f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b56c5f0c980"/>
        <function-ref name="hasStart" scoped="" ref="0x2b56c5f0cb10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b56c5f0cca0"/>
        <function-ref name="commandComplete" scoped="" ref="0x2b56c5f0b020"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5f0b1b0"/>
        <function-ref name="write" scoped="" ref="0x2b56c5f0b340"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2b56c5f0b4d0"/>
        <function-ref name="off" scoped="" ref="0x2b56c5f0b660"/>
        <function-ref name="setStop" scoped="" ref="0x2b56c5f0b7f0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2b56c5f0b980"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b56c5f0bb10"/>
        <function-ref name="hasStop" scoped="" ref="0x2b56c5f0bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x2b56c5f06020" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2b56c5f06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2b56c5f063a0"/>
        <function-ref name="sendCommand" scoped="" ref="0x2b56c5f06530"/>
        <function-ref name="setStart" scoped="" ref="0x2b56c5f066c0"/>
        <function-ref name="status" scoped="" ref="0x2b56c5f06850"/>
        <function-ref name="hasAcks" scoped="" ref="0x2b56c5f069e0"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b56c5f06b70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b56c5f06d00"/>
        <function-ref name="read" scoped="" ref="0x2b56c5f05020"/>
        <function-ref name="init" scoped="" ref="0x2b56c5f051b0"/>
        <function-ref name="enableAck" scoped="" ref="0x2b56c5f05340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b56c5f054d0"/>
        <function-ref name="hasStart" scoped="" ref="0x2b56c5f05660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b56c5f057f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x2b56c5f05a80"/>
        <function-ref name="enable" scoped="" ref="0x2b56c5f05c10"/>
        <function-ref name="write" scoped="" ref="0x2b56c5f05da0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2b56c5f04020"/>
        <function-ref name="off" scoped="" ref="0x2b56c5f041b0"/>
        <function-ref name="setStop" scoped="" ref="0x2b56c5f04340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2b56c5f044d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b56c5f04660"/>
        <function-ref name="hasStop" scoped="" ref="0x2b56c5f047f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x2b56c5f04b80" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x2b56c5f04b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5f03020"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5f031b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5f03340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5f034d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5f03660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5f037f0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5f03980"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5f03b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x2b56c5f03e50" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x2b56c5f03e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c5f02210"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c5f023a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c5f02530"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c5f026c0"/>
        <function-ref name="get" scoped="" ref="0x2b56c5f02850"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c5f029e0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5f02b70"/>
        <function-ref name="clr" scoped="" ref="0x2b56c5f02d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c5f36230" loc="46:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c5f36230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c5f365b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b56c5f36870" loc="47:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b56c5f36870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b56c5f36bf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b56c5f36d80"/>
        <function-ref name="led1On" scoped="" ref="0x2b56c5f59020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b56c5f591b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b56c5f59340"/>
        <function-ref name="get" scoped="" ref="0x2b56c5f594d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b56c5f59660"/>
        <function-ref name="led2Off" scoped="" ref="0x2b56c5f59ca0"/>
        <function-ref name="set" scoped="" ref="0x2b56c5f597f0"/>
        <function-ref name="led0On" scoped="" ref="0x2b56c5f59980"/>
        <function-ref name="led2On" scoped="" ref="0x2b56c5f59b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b56c6131140" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="MicDeviceP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b56c6131140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c612d630"/>
        <function-ref name="fired" scoped="" ref="0x2b56c6130b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b56c612e920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b56c612e4a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b56c612c020"/>
        <function-ref name="gett0" scoped="" ref="0x2b56c612dab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c612e020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b56c6131d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b56c612d020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b56c6130220"/>
        <function-ref name="stop" scoped="" ref="0x2b56c61306f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b56c5f78050" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b56c5f78050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c5f75630"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5f77ac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b56c5f76920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b56c5f764a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b56c5f74020"/>
        <function-ref name="gett0" scoped="" ref="0x2b56c5f75ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c5f76020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b56c5f78c40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b56c5f75020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b56c5f77170"/>
        <function-ref name="stop" scoped="" ref="0x2b56c5f77640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b56c5f70c30" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b56c5f70c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c5f91110"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5f6e6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b56c5f6c4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b56c5f6c020"/>
        <function-ref name="getdt" scoped="" ref="0x2b56c5f91a10"/>
        <function-ref name="gett0" scoped="" ref="0x2b56c5f91590"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c5f6eb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b56c5f6f860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b56c5f6cab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b56c5f6fd30"/>
        <function-ref name="stop" scoped="" ref="0x2b56c5f6e220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b56c5f8c500" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b56c5f8c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b56c5f8e170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c5f74e60" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c5f74e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c5f70210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b56c5fa4020" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b56c5fa4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b56c5fa4e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b56c5fa2800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b56c5fa2340"/>
        <function-ref name="overflow" scoped="" ref="0x2b56c5fa2cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c5f8dc40" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c5f8dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c5f89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b56c5f81960" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b56c5f81960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c5f7f1b0"/>
        <function-ref name="fired" scoped="" ref="0x2b56c5f801b0"/>
        <function-ref name="startAt" scoped="" ref="0x2b56c5f80b30"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c5f80670"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b56c5f7f670"/>
        <function-ref name="start" scoped="" ref="0x2b56c5f887c0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c5f88cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b56c60a4530" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b56c60a4530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c60a2db0"/>
        <function-ref name="fired" scoped="" ref="0x2b56c60a3da0"/>
        <function-ref name="startAt" scoped="" ref="0x2b56c60a2760"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c60a22a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b56c60a12a0"/>
        <function-ref name="start" scoped="" ref="0x2b56c60a33d0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c60a38e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c60a5c80" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c60a5c80"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b56c58b79c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b56c58b79c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c60a40a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b56c60a18d0" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b56c60a18d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b56c609f780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b56c609e150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b56c609fc40"/>
        <function-ref name="overflow" scoped="" ref="0x2b56c609e610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b56c7114e20" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b56c7114e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b56c71121c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b56c7112350"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b56c71124e0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b56c7112670"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b56c7112800"/>
        <function-ref name="setControl" scoped="" ref="0x2b56c7112990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b56c711f4b0" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b56c711f4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c711cdb0"/>
        <function-ref name="fired" scoped="" ref="0x2b56c711eda0"/>
        <function-ref name="startAt" scoped="" ref="0x2b56c711c760"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c711c2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b56c711b2a0"/>
        <function-ref name="start" scoped="" ref="0x2b56c711e3d0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c711e8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c7120b40" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c7120b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c711f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b56c711b8d0" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b56c711b8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b56c711a780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b56c7119150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b56c711ac40"/>
        <function-ref name="overflow" scoped="" ref="0x2b56c7119610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b56c710d020" loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b56c710d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b56c710d3a0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b56c710d530"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b56c710d6c0"/>
        <function-ref name="countBusy" scoped="" ref="0x2b56c710d850"/>
        <function-ref name="getAssr" scoped="" ref="0x2b56c710d9e0"/>
        <function-ref name="setAssr" scoped="" ref="0x2b56c710db70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b56c7112d40" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b56c7112d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b56c710f6e0"/>
        <function-ref name="fired" scoped="" ref="0x2b56c71103b0"/>
        <function-ref name="get" scoped="" ref="0x2b56c71119c0"/>
        <function-ref name="reset" scoped="" ref="0x2b56c7110870"/>
        <function-ref name="isOn" scoped="" ref="0x2b56c710fba0"/>
        <function-ref name="set" scoped="" ref="0x2b56c7111e80"/>
        <function-ref name="start" scoped="" ref="0x2b56c7110d30"/>
        <function-ref name="stop" scoped="" ref="0x2b56c710f220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b56c7119bc0" loc="30:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b56c7119bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b56c7114020"/>
        <function-ref name="test" scoped="" ref="0x2b56c7115590"/>
        <function-ref name="get" scoped="" ref="0x2b56c7117820"/>
        <function-ref name="setScale" scoped="" ref="0x2b56c71144e0"/>
        <function-ref name="getScale" scoped="" ref="0x2b56c71149f0"/>
        <function-ref name="reset" scoped="" ref="0x2b56c7116720"/>
        <function-ref name="overflow" scoped="" ref="0x2b56c7116260"/>
        <function-ref name="isOn" scoped="" ref="0x2b56c7115a50"/>
        <function-ref name="set" scoped="" ref="0x2b56c7117ce0"/>
        <function-ref name="start" scoped="" ref="0x2b56c7116be0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c71150d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b56c6027c10" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b56c6027c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b56c6026020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b56c60261b0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b56c6026340"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b56c60264d0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b56c6026660"/>
        <function-ref name="setControl" scoped="" ref="0x2b56c60267f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b56c6021130" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b56c6021130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b56c60214b0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b56c6021640"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b56c60217d0"/>
        <function-ref name="countBusy" scoped="" ref="0x2b56c6021960"/>
        <function-ref name="getAssr" scoped="" ref="0x2b56c6021af0"/>
        <function-ref name="setAssr" scoped="" ref="0x2b56c6021c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b56c6026cf0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b56c6026cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b56c60226e0"/>
        <function-ref name="fired" scoped="" ref="0x2b56c6023380"/>
        <function-ref name="get" scoped="" ref="0x2b56c6025980"/>
        <function-ref name="reset" scoped="" ref="0x2b56c6023840"/>
        <function-ref name="isOn" scoped="" ref="0x2b56c6022ba0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6025e40"/>
        <function-ref name="start" scoped="" ref="0x2b56c6023d00"/>
        <function-ref name="stop" scoped="" ref="0x2b56c6022220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b56c60068b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b56c60068b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b56c6028cd0"/>
        <function-ref name="test" scoped="" ref="0x2b56c6028350"/>
        <function-ref name="get" scoped="" ref="0x2b56c602b500"/>
        <function-ref name="setScale" scoped="" ref="0x2b56c60271b0"/>
        <function-ref name="getScale" scoped="" ref="0x2b56c60276c0"/>
        <function-ref name="reset" scoped="" ref="0x2b56c60294e0"/>
        <function-ref name="overflow" scoped="" ref="0x2b56c6029020"/>
        <function-ref name="isOn" scoped="" ref="0x2b56c6028810"/>
        <function-ref name="set" scoped="" ref="0x2b56c602b9c0"/>
        <function-ref name="start" scoped="" ref="0x2b56c60299a0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c6029e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b56c6040570" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b56c6040570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b56c60408f0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b56c6040a80"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b56c6040c10"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b56c6040da0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b56c603e020"/>
        <function-ref name="setControl" scoped="" ref="0x2b56c603e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b56c603ba70" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b56c603ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b56c603bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b56c6039230" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b56c6039230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b56c60395b0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b56c6039740"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b56c60398d0"/>
        <function-ref name="countBusy" scoped="" ref="0x2b56c6039a60"/>
        <function-ref name="getAssr" scoped="" ref="0x2b56c6039bf0"/>
        <function-ref name="setAssr" scoped="" ref="0x2b56c6039d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b56c603e6b0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b56c603e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b56c603b110"/>
        <function-ref name="fired" scoped="" ref="0x2b56c603dda0"/>
        <function-ref name="get" scoped="" ref="0x2b56c603d3d0"/>
        <function-ref name="reset" scoped="" ref="0x2b56c603c2a0"/>
        <function-ref name="isOn" scoped="" ref="0x2b56c603b5d0"/>
        <function-ref name="set" scoped="" ref="0x2b56c603d890"/>
        <function-ref name="start" scoped="" ref="0x2b56c603c760"/>
        <function-ref name="stop" scoped="" ref="0x2b56c603cc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b56c601d190" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b56c601d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b56c60194e0"/>
        <function-ref name="test" scoped="" ref="0x2b56c601ab30"/>
        <function-ref name="get" scoped="" ref="0x2b56c601ddc0"/>
        <function-ref name="setScale" scoped="" ref="0x2b56c60199a0"/>
        <function-ref name="getScale" scoped="" ref="0x2b56c6040020"/>
        <function-ref name="reset" scoped="" ref="0x2b56c601bcb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b56c601b7f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b56c6019020"/>
        <function-ref name="set" scoped="" ref="0x2b56c601b2e0"/>
        <function-ref name="start" scoped="" ref="0x2b56c601a1b0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c601a670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b56c60bf020" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b56c60bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c60bf3a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c60bf530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b56c60c4cd0" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b56c60c4cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c60c1670"/>
        <function-ref name="fired" scoped="" ref="0x2b56c60c2550"/>
        <function-ref name="startAt" scoped="" ref="0x2b56c60c1020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c60c2a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b56c60c1b30"/>
        <function-ref name="start" scoped="" ref="0x2b56c60c3b60"/>
        <function-ref name="stop" scoped="" ref="0x2b56c60c2090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b56c60c9830" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b56c60c9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c60c6cf0"/>
        <function-ref name="fired" scoped="" ref="0x2b56c60c7300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b56c60c60d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b56c60c7c00"/>
        <function-ref name="getdt" scoped="" ref="0x2b56c60c4660"/>
        <function-ref name="gett0" scoped="" ref="0x2b56c60c41e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c60c7780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b56c60c8480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b56c60c66e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b56c60c8950"/>
        <function-ref name="stop" scoped="" ref="0x2b56c60c8e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b56c611aa00" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b56c611aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c611ad80"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c6119020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b56c611f640" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b56c611f640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c611cc40"/>
        <function-ref name="fired" scoped="" ref="0x2b56c611d1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b56c611c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b56c611dae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b56c611a590"/>
        <function-ref name="gett0" scoped="" ref="0x2b56c611a110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c611d660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b56c611e390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b56c611c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b56c611e860"/>
        <function-ref name="stop" scoped="" ref="0x2b56c611ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b56c6125150" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b56c6125150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c6121700"/>
        <function-ref name="fired" scoped="" ref="0x2b56c6124c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b56c6123a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b56c61235b0"/>
        <function-ref name="getdt" scoped="" ref="0x2b56c611f090"/>
        <function-ref name="gett0" scoped="" ref="0x2b56c6121ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c6123110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b56c6125d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b56c61210d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b56c61242a0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c6124790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b56c6117790" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b56c6117790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b56c61163f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b56c6116a60" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b56c6116a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b56c6138890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b56c6137260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b56c6138d50"/>
        <function-ref name="overflow" scoped="" ref="0x2b56c6137720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b56c617dc00" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b56c617dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b56c617c020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b56c617c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b56c617b930" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b56c617b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b56c617bcd0"/>
        <function-ref name="configure" scoped="" ref="0x2b56c617be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b56c617c400" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b56c617c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c617c780"/>
        <function-ref name="requested" scoped="" ref="0x2b56c617c910"/>
        <function-ref name="granted" scoped="" ref="0x2b56c617caa0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c617cc30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b56c617cdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c617ee70" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c617ee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c617d240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c617d3d0"/>
        <function-ref name="request" scoped="" ref="0x2b56c617d560"/>
        <function-ref name="granted" scoped="" ref="0x2b56c617d6f0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c617d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b56c617b060" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c617b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b56c617b3e0"/>
        <function-ref name="userId" scoped="" ref="0x2b56c617b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c718a060" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MicDeviceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c718a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c718a3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b56c718a670" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MicDeviceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b56c718a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b56c718a9f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b56c718ab80"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b56c718ad10"/>
        <function-ref name="dequeue" scoped="" ref="0x2b56c7189020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b56c7187850" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b56c7187850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b56c7187bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b56c7187d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b56c7184590" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b56c7184590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b56c7184930"/>
        <function-ref name="configure" scoped="" ref="0x2b56c7184ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b56c7184d50" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b56c7184d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b56c7183100"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b56c7183290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b56c7183420"/>
        <function-ref name="dequeue" scoped="" ref="0x2b56c71835b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b56c7185020" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b56c7185020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c71853a0"/>
        <function-ref name="requested" scoped="" ref="0x2b56c7185530"/>
        <function-ref name="granted" scoped="" ref="0x2b56c71856c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c7185850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b56c71859e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b56c7183800" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b56c7183800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b56c7183b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b56c7183d10"/>
        <function-ref name="led1On" scoped="" ref="0x2b56c7182020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b56c71821b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b56c7182340"/>
        <function-ref name="get" scoped="" ref="0x2b56c71824d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b56c7182660"/>
        <function-ref name="led0On" scoped="" ref="0x2b56c7182ca0"/>
        <function-ref name="set" scoped="" ref="0x2b56c7182980"/>
        <function-ref name="led2On" scoped="" ref="0x2b56c71827f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b56c7182b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c7188970" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c7188970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c7188d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c7187020"/>
        <function-ref name="request" scoped="" ref="0x2b56c71871b0"/>
        <function-ref name="granted" scoped="" ref="0x2b56c7187340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c71874d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b56c7185c30" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c7185c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b56c7184020"/>
        <function-ref name="userId" scoped="" ref="0x2b56c71841b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b56c7181020" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b56c7181020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c71813a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c7181530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b56c6177a10" loc="69:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b56c6177a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b56c6177d90"/>
        <function-ref name="stopDone" scoped="" ref="0x2b56c61a5020"/>
        <function-ref name="start" scoped="" ref="0x2b56c61a51b0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c61a5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b56c61a5590" loc="71:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b56c61a5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b56c61a5910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b56c61a5b60" loc="72:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b56c61a5b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c61a4020"/>
        <function-ref name="requested" scoped="" ref="0x2b56c61a41b0"/>
        <function-ref name="granted" scoped="" ref="0x2b56c61a4340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c61a44d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b56c61a4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b56c61a48b0" loc="73:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c61a48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b56c61a4c30"/>
        <function-ref name="userId" scoped="" ref="0x2b56c61a4dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b56c71bb400" loc="61:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b56c71bb400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b56c71bb780"/>
        <function-ref name="stopDone" scoped="" ref="0x2b56c71bb910"/>
        <function-ref name="start" scoped="" ref="0x2b56c71bbaa0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c71bbc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b56c71bbe80" loc="63:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b56c71bbe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b56c71ba220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2b56c71b98c0" loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2b56c71b98c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c71b9c40"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c71b9dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b56c71ba470" loc="64:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b56c71ba470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c71ba7f0"/>
        <function-ref name="requested" scoped="" ref="0x2b56c71ba980"/>
        <function-ref name="granted" scoped="" ref="0x2b56c71bab10"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c71baca0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b56c71bae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2b56c71b7100" loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2b56c71b7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c71b7480"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c71b7610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2b56c71bcb10" loc="60:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b56c71bcb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b56c71bb020"/>
        <function-ref name="stop" scoped="" ref="0x2b56c71bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b56c71b90e0" loc="65:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c71b90e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b56c71b9460"/>
        <function-ref name="userId" scoped="" ref="0x2b56c71b95f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b56c6199c20" loc="55:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b56c6199c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b56c6196020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b56c61961b0"/>
        <function-ref name="start" scoped="" ref="0x2b56c6196340"/>
        <function-ref name="stop" scoped="" ref="0x2b56c61964d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b56c6196ca0" loc="57:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b56c6196ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c61c30a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c61c3230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c61c33c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c61c3550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c61c36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b56c61c2c00" loc="59:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b56c61c2c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c61c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b56c61c12b0" loc="61:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b56c61c12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c61c1630"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b56c61c17c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c61c1950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c61c1ae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b56c61c1c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b56c61bd310" loc="64:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b56c61bd310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b56c593f390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b56c61bc880"/>
        <function-ref name="clear" scoped="" ref="0x2b56c61ae020"/>
        <function-ref name="isValid" scoped="" ref="0x2b56c61bc150"/>
        <function-ref name="set" scoped="" ref="0x2b56c61ae750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b56c61cf130" loc="66:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b56c61cf130"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b56c61cf4b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b56c61cf640"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b56c61cf7d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b56c61cf960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b56c61c2020" loc="58:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b56c61c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c61c23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b56c61b6170" loc="63:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b56c61b6170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b56c61b64f0"/>
        <function-ref name="noAck" scoped="" ref="0x2b56c61b6680"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b56c61b6810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b56c61c0020" loc="62:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b56c61c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b56c61c03a0"/>
        <function-ref name="source" scoped="" ref="0x2b56c61c0530"/>
        <function-ref name="address" scoped="" ref="0x2b56c61c06c0"/>
        <function-ref name="destination" scoped="" ref="0x2b56c61c0850"/>
        <function-ref name="setSource" scoped="" ref="0x2b56c61c09e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b56c61c0b70"/>
        <function-ref name="type" scoped="" ref="0x2b56c61c0d00"/>
        <function-ref name="setType" scoped="" ref="0x2b56c61bf020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b56c61bf1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b56c61bf340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b56c61bf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b56c61ad3f0" loc="65:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b56c61ad3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b56c61da970"/>
        <function-ref name="clear" scoped="" ref="0x2b56c61d80d0"/>
        <function-ref name="isValid" scoped="" ref="0x2b56c61da240"/>
        <function-ref name="set" scoped="" ref="0x2b56c61d8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b56c61f1020" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b56c61f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b56c61f13a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b56c61f1530"/>
        <function-ref name="start" scoped="" ref="0x2b56c61f16c0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c61f1850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b56c61e0020" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b56c61e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b56c61e03a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b56c61e0530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b56c61e06c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b56c61e0850"/>
        <function-ref name="setCca" scoped="" ref="0x2b56c61e09e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b56c61e0b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b56c6205020" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b56c6205020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b56c62054a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b56c61eca80" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b56c61eca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c61ece00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b56c61eb020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c61eb1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c61eb340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b56c61eb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b56c61f0050" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b56c61f0050"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c61f03d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c61f0560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c61f06f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c61f0880"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c61f0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b56c61eedf0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b56c61eedf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c61ed1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b56c61e3c20" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c61e3c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b56c61ea020"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b56c61ea1b0"/>
        <function-ref name="getRssi" scoped="" ref="0x2b56c61ea340"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b56c61ea4d0"/>
        <function-ref name="getPower" scoped="" ref="0x2b56c61ea660"/>
        <function-ref name="getLqi" scoped="" ref="0x2b56c61ea7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b56c61e0e70" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b56c61e0e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b56c61de220"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b56c61de3b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b56c61de540"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b56c61de6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b56c61ee210" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b56c61ee210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c61ee590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b56c61eab20" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b56c61eab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b56c61e9020"/>
        <function-ref name="noAck" scoped="" ref="0x2b56c61e91b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b56c61e9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b56c61fc0d0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b56c61fc0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b56c61fc450"/>
        <function-ref name="setRetries" scoped="" ref="0x2b56c61fc5e0"/>
        <function-ref name="getRetries" scoped="" ref="0x2b56c61fc770"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b56c61fc900"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b56c61fca90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b56c61ed470" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b56c61ed470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b56c61ed7f0"/>
        <function-ref name="source" scoped="" ref="0x2b56c61ed980"/>
        <function-ref name="address" scoped="" ref="0x2b56c61edb10"/>
        <function-ref name="destination" scoped="" ref="0x2b56c61edca0"/>
        <function-ref name="setSource" scoped="" ref="0x2b56c61ede30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b56c61ec020"/>
        <function-ref name="type" scoped="" ref="0x2b56c61ec1b0"/>
        <function-ref name="setType" scoped="" ref="0x2b56c61ec340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b56c61ec4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b56c61ec660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b56c61ec7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b56c61dfda0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b56c61dfda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b56c61e1180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b56c61f9d90" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b56c61f9d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b56c61f6180"/>
        <function-ref name="stopDone" scoped="" ref="0x2b56c61f6310"/>
        <function-ref name="start" scoped="" ref="0x2b56c61f64a0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c61f6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b56c62174c0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b56c62174c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b56c6217840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b56c6216790" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b56c6216790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b56c6216b10"/>
        <function-ref name="setRetries" scoped="" ref="0x2b56c6216ca0"/>
        <function-ref name="getRetries" scoped="" ref="0x2b56c6216e30"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b56c6215020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b56c62151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b56c621a9e0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c621a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b56c621ad60"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b56c6218020"/>
        <function-ref name="getRssi" scoped="" ref="0x2b56c62181b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b56c6218340"/>
        <function-ref name="getPower" scoped="" ref="0x2b56c62184d0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b56c6218660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b56c61f34e0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2b56c61f34e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c61f3860"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c61f39f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c61f3b80"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c61f3d10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c621a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b56c6217b40" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b56c6217b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b56c6216020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b56c62161b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b56c6216340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b56c62164d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b56c61f4020" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b56c61f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c61f43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b56c6218990" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b56c6218990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b56c6218d10"/>
        <function-ref name="noAck" scoped="" ref="0x2b56c6217020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b56c62171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c61f6e60" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c61f6e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c61f5210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c61f53a0"/>
        <function-ref name="request" scoped="" ref="0x2b56c61f5530"/>
        <function-ref name="granted" scoped="" ref="0x2b56c61f56c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c61f5850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b56c6219240" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b56c6219240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c62195c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6219750"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c62198e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6219a70"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6219c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b56c61f46e0" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x2b56c61f46e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c61f4a60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b56c61f4bf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c61f4d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c61f3020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b56c61f31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b56c621a390" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2b56c621a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c621a710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b56c6212020" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b56c6212020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b56c62123a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b56c6212530"/>
        <function-ref name="start" scoped="" ref="0x2b56c62126c0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c6212850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b56c620f020" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b56c620f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b56c620f3a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b56c620f530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b56c620f6c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b56c620f850"/>
        <function-ref name="setCca" scoped="" ref="0x2b56c620f9e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b56c620fb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b56c6212b10" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b56c6212b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6211020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c62111b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6211340"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c62114d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6211660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b56c6211940" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b56c6211940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6211cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b56c620eb90" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b56c620eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b56c620b020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b56c620b1b0"/>
        <function-ref name="start" scoped="" ref="0x2b56c620b340"/>
        <function-ref name="stop" scoped="" ref="0x2b56c620b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b56c620a4c0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b56c620a4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b56c620a840"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b56c620a9d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b56c620ab60"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b56c620acf0"/>
        <function-ref name="setCca" scoped="" ref="0x2b56c620ae80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b56c6239030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b56c6230700" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x2b56c6230700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b56c6230a80"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b56c6230c10"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b56c6230da0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b56c622f020"/>
        <function-ref name="setCca" scoped="" ref="0x2b56c622f1b0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b56c622f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b56c6227b00" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c6227b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b56c6227e80"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b56c6224030"/>
        <function-ref name="getRssi" scoped="" ref="0x2b56c62241c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b56c6224350"/>
        <function-ref name="getPower" scoped="" ref="0x2b56c62244e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b56c6224670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2b56c6229810" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b56c6229810"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6229b90"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6229d20"/>
        <function-ref name="modify" scoped="" ref="0x2b56c6230020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c62301b0"/>
        <function-ref name="resend" scoped="" ref="0x2b56c6230340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b56c620b790" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b56c620b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c620bb10"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c620bca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c620be30"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c620a020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c620a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b56c6225b60" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b56c6225b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b56c6228020"/>
        <function-ref name="rand32" scoped="" ref="0x2b56c62281b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b56c6237ba0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b56c6237ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b56c6236020"/>
        <function-ref name="stop" scoped="" ref="0x2b56c62361b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b56c624c130" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c624c130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b56c624c4b0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b56c624c640"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b56c624c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2b56c6231880" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2b56c6231880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b56c6231c00"/>
        <function-ref name="rfOff" scoped="" ref="0x2b56c6231d90"/>
        <function-ref name="rxOn" scoped="" ref="0x2b56c6237020"/>
        <function-ref name="startVReg" scoped="" ref="0x2b56c62371b0"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b56c6237340"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b56c62374d0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b56c6237660"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b56c62377f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b56c6228470" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b56c6228470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b56c62287f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b56c6228980"/>
        <function-ref name="led1On" scoped="" ref="0x2b56c6228b10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b56c6228ca0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b56c6228e30"/>
        <function-ref name="get" scoped="" ref="0x2b56c6227020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b56c62271b0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b56c62277f0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6227340"/>
        <function-ref name="led0On" scoped="" ref="0x2b56c62274d0"/>
        <function-ref name="led2On" scoped="" ref="0x2b56c6227660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b56c6239320" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c6239320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c62396a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c6239830"/>
        <function-ref name="request" scoped="" ref="0x2b56c62399c0"/>
        <function-ref name="granted" scoped="" ref="0x2b56c6239b50"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c6239ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2b56c6247850" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x2b56c6247850"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b56c6247cd0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b56c6247e60"/>
        <function-ref name="isState" scoped="" ref="0x2b56c6223020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b56c62231b0"/>
        <function-ref name="requestState" scoped="" ref="0x2b56c6223340"/>
        <function-ref name="forceState" scoped="" ref="0x2b56c62234d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2b56c62422a0" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x2b56c62422a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c6242620"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c62427b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2b56c62432a0" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x2b56c62432a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c6243620"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c62437b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2b56c62452b0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x2b56c62452b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c6245630"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c62457c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b56c62ae550" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b56c62ae550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b56c62ae8d0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b56c62aea60"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b56c62aebf0"/>
        <function-ref name="syncDone" scoped="" ref="0x2b56c62aed80"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b56c6289020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b56c62891b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b56c6289340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b56c62894d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b56c6289660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b56c62897f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b56c6289980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b56c6289b10"/>
        <function-ref name="sync" scoped="" ref="0x2b56c6289ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b56c6288020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b56c62881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b56c62a8890" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x2b56c62a8890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c62ab4c0"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c62ab940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b56c62884b0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2b56c62884b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b56c6288830"/>
        <function-ref name="rfOff" scoped="" ref="0x2b56c62889c0"/>
        <function-ref name="rxOn" scoped="" ref="0x2b56c6288b50"/>
        <function-ref name="startVReg" scoped="" ref="0x2b56c6288ce0"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b56c6288e70"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b56c62ad030"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b56c62ad1c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b56c62ad350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c628a020" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c628a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c628a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c628a530"/>
        <function-ref name="request" scoped="" ref="0x2b56c628a6c0"/>
        <function-ref name="granted" scoped="" ref="0x2b56c628a850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c628a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b56c62a41a0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b56c62a41a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b56c62a4520"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b56c62a46b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b56c62a4840"/>
        <function-ref name="syncDone" scoped="" ref="0x2b56c62a49d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b56c62a4b60"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b56c62a4cf0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b56c62a4e80"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b56c62a3030"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b56c62a31c0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b56c62a3350"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b56c62a34e0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b56c62a3670"/>
        <function-ref name="sync" scoped="" ref="0x2b56c62a3800"/>
        <function-ref name="getChannel" scoped="" ref="0x2b56c62a3a90"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b56c62a3c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2b56c62b8720" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b56c62b8720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c62b8aa0"/>
        <function-ref name="write" scoped="" ref="0x2b56c62b8c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x2b56c629c970" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b56c629c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b56c629ccf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2b56c629e3a0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x2b56c629e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b56c593f390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c629bbe0"/>
        <function-ref name="fired" scoped="" ref="0x2b56c629dbc0"/>
        <function-ref name="startAt" scoped="" ref="0x2b56c629b590"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c629b0d0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b56c62cb0d0"/>
        <function-ref name="start" scoped="" ref="0x2b56c629d1f0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c629d700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2b56c62bb570" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b56c62bb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c62bb8f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c62bba80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b56c62ca830" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b56c62ca830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c62cabb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c62cad40"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c62c9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c62c91b0"/>
        <function-ref name="get" scoped="" ref="0x2b56c62c9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c62c94d0"/>
        <function-ref name="set" scoped="" ref="0x2b56c62c9660"/>
        <function-ref name="clr" scoped="" ref="0x2b56c62c97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b56c62a1500" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x2b56c62a1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c629f130"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c629f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2b56c62d8820" loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x2b56c62d8820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c62d8ba0"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c62d8d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2b56c62b7020" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b56c62b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c62b73a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c62b7530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b56c62b78d0" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b56c62b78d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c62b7c50"/>
        <function-ref name="write" scoped="" ref="0x2b56c62b7de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2b56c62c03c0" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b56c62c03c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c62c0740"/>
        <function-ref name="write" scoped="" ref="0x2b56c62c08d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b56c62c16b0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b56c62c16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b56c62c1a30"/>
        <function-ref name="changed" scoped="" ref="0x2b56c62c1bc0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b56c62c1d50"/>
        <function-ref name="setAddress" scoped="" ref="0x2b56c62c6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b56c62cb5c0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b56c62cb5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c62cb940"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c62cbad0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c62cbc60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c62cbdf0"/>
        <function-ref name="get" scoped="" ref="0x2b56c62ca020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c62ca1b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c62ca340"/>
        <function-ref name="clr" scoped="" ref="0x2b56c62ca4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2b56c62b4020" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b56c62b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c62b45a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2b56c62c9b50" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x2b56c62c9b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c62c8020"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c62c81b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c62c8340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c62c84d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c62c8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c62c87f0"/>
        <function-ref name="set" scoped="" ref="0x2b56c62c8980"/>
        <function-ref name="clr" scoped="" ref="0x2b56c62c8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c62aad60" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c62aad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c62a5180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b56c62bbe40" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b56c62bbe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c62b81e0"/>
        <function-ref name="write" scoped="" ref="0x2b56c62b8370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2b56c62b4940" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b56c62b4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c62b4cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b56c62e40d0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b56c62e40d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c62e4450"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c62e45e0"/>
        <function-ref name="request" scoped="" ref="0x2b56c62e4770"/>
        <function-ref name="granted" scoped="" ref="0x2b56c62e4900"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c62e4a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2b56c62e3bd0" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x2b56c62e3bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c62e2020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c62e21b0"/>
        <function-ref name="request" scoped="" ref="0x2b56c62e2340"/>
        <function-ref name="granted" scoped="" ref="0x2b56c62e24d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c62e2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b56c62a2020" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2b56c62a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b56c62a23a0"/>
        <function-ref name="rfOff" scoped="" ref="0x2b56c62a2530"/>
        <function-ref name="rxOn" scoped="" ref="0x2b56c62a26c0"/>
        <function-ref name="startVReg" scoped="" ref="0x2b56c62a2850"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b56c62a29e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b56c62a2b70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b56c62a2d00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b56c62a1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2b56c62c0c70" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b56c62c0c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c62bb020"/>
        <function-ref name="write" scoped="" ref="0x2b56c62bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2b56c62b99b0" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b56c62b99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c62b9d30"/>
        <function-ref name="write" scoped="" ref="0x2b56c62c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2b56c62b5120" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b56c62b5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c62b54a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b56c62e2920" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b56c62e2920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b56c62e2ca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b56c62e2e30"/>
        <function-ref name="led1On" scoped="" ref="0x2b56c62e1020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b56c62e11b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b56c62e1340"/>
        <function-ref name="get" scoped="" ref="0x2b56c62e14d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b56c62e1660"/>
        <function-ref name="led2Off" scoped="" ref="0x2b56c62e1ca0"/>
        <function-ref name="set" scoped="" ref="0x2b56c62e17f0"/>
        <function-ref name="led0On" scoped="" ref="0x2b56c62e1980"/>
        <function-ref name="led2On" scoped="" ref="0x2b56c62e1b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2b56c62d9940" loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x2b56c62d9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c62d9cc0"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c62d9e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c62a5470" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c62a5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c62a57f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c62a5980"/>
        <function-ref name="request" scoped="" ref="0x2b56c62a5b10"/>
        <function-ref name="granted" scoped="" ref="0x2b56c62a5ca0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c62a5e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2b56c62c5200" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b56c62c5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c62c5580"/>
        <function-ref name="write" scoped="" ref="0x2b56c62c5710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2b56c62bd830" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b56c62bd830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c62bdcb0"/>
        <function-ref name="write" scoped="" ref="0x2b56c62bde40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2b56c62c7020" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x2b56c62c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c62c73a0"/>
        <function-ref name="disable" scoped="" ref="0x2b56c62c7530"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b56c62c76c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b56c62c7850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2b56c62e4e40" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x2b56c62e4e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c62e31e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c62e3370"/>
        <function-ref name="request" scoped="" ref="0x2b56c62e3500"/>
        <function-ref name="granted" scoped="" ref="0x2b56c62e3690"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c62e3820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2b56c62b5830" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b56c62b5830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c62b5bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c63637e0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c63637e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c6363b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2b56c6360220" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x2b56c6360220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b56c593f390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c635db30"/>
        <function-ref name="fired" scoped="" ref="0x2b56c635fa60"/>
        <function-ref name="startAt" scoped="" ref="0x2b56c635d4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c635d020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b56c635c020"/>
        <function-ref name="start" scoped="" ref="0x2b56c635f090"/>
        <function-ref name="stop" scoped="" ref="0x2b56c635f5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b56c635a1d0" loc="86:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b56c635a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b56c593f390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c6515b30"/>
        <function-ref name="fired" scoped="" ref="0x2b56c65199f0"/>
        <function-ref name="startAt" scoped="" ref="0x2b56c65154e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c6515020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b56c6513020"/>
        <function-ref name="start" scoped="" ref="0x2b56c6519020"/>
        <function-ref name="stop" scoped="" ref="0x2b56c6519530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c6513450" loc="87:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c6513450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c65137d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b56c71f47b0" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b56c71f47b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b56c593f390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c71f0020"/>
        <function-ref name="fired" scoped="" ref="0x2b56c71f2020"/>
        <function-ref name="startAt" scoped="" ref="0x2b56c71f29a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c71f24e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b56c71f04e0"/>
        <function-ref name="start" scoped="" ref="0x2b56c71f3620"/>
        <function-ref name="stop" scoped="" ref="0x2b56c71f3b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b56c71ed0b0" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b56c71ed0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="TOne" ref="0x2b56c5978c20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c71eab30"/>
        <function-ref name="fired" scoped="" ref="0x2b56c71ec9f0"/>
        <function-ref name="startAt" scoped="" ref="0x2b56c71ea4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c71ea020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b56c71e9020"/>
        <function-ref name="start" scoped="" ref="0x2b56c71ec020"/>
        <function-ref name="stop" scoped="" ref="0x2b56c71ec530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b56c63678c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b56c63678c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b56c6367c40"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b56c6367dd0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b56c6370020"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b56c63701b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b56c6370340"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b56c63704d0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b56c6370660"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b56c63707f0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b56c6370980"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b56c6370b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b56c63947f0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b56c63947f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b56c6392e60"/>
        <function-ref name="test" scoped="" ref="0x2b56c63924e0"/>
        <function-ref name="get" scoped="" ref="0x2b56c639b4c0"/>
        <function-ref name="captured" scoped="" ref="0x2b56c639a020"/>
        <function-ref name="reset" scoped="" ref="0x2b56c639a530"/>
        <function-ref name="isOn" scoped="" ref="0x2b56c63929a0"/>
        <function-ref name="set" scoped="" ref="0x2b56c639b980"/>
        <function-ref name="start" scoped="" ref="0x2b56c639a9f0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c6392020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b56c6391ad0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b56c6391ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b56c638d4e0"/>
        <function-ref name="fired" scoped="" ref="0x2b56c638e1b0"/>
        <function-ref name="get" scoped="" ref="0x2b56c638f790"/>
        <function-ref name="reset" scoped="" ref="0x2b56c638e670"/>
        <function-ref name="isOn" scoped="" ref="0x2b56c638d9a0"/>
        <function-ref name="set" scoped="" ref="0x2b56c638fc50"/>
        <function-ref name="start" scoped="" ref="0x2b56c638eb30"/>
        <function-ref name="stop" scoped="" ref="0x2b56c638d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b56c637ae50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b56c637ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b56c6373350"/>
        <function-ref name="test" scoped="" ref="0x2b56c63749a0"/>
        <function-ref name="get" scoped="" ref="0x2b56c6377ac0"/>
        <function-ref name="setScale" scoped="" ref="0x2b56c6373810"/>
        <function-ref name="getScale" scoped="" ref="0x2b56c6373d20"/>
        <function-ref name="reset" scoped="" ref="0x2b56c63759f0"/>
        <function-ref name="overflow" scoped="" ref="0x2b56c6375530"/>
        <function-ref name="isOn" scoped="" ref="0x2b56c6374e60"/>
        <function-ref name="set" scoped="" ref="0x2b56c6375020"/>
        <function-ref name="start" scoped="" ref="0x2b56c6374020"/>
        <function-ref name="stop" scoped="" ref="0x2b56c63744e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b56c6383580" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b56c6383580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b56c6383900"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b56c6383a90"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b56c6383c20"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b56c6383db0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b56c6382020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b56c63821b0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b56c6382340"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b56c63824d0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b56c6382660"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b56c63827f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x2b56c63a6910" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x2b56c63a6910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b56c63a6c90"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b56c63a6e20"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b56c63a5020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b56c63a51b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b56c63a5340"/>
        <function-ref name="setControl" scoped="" ref="0x2b56c63a54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b56c63b37e0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b56c63b37e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b56c63af1b0"/>
        <function-ref name="fired" scoped="" ref="0x2b56c63b2e10"/>
        <function-ref name="get" scoped="" ref="0x2b56c63b2440"/>
        <function-ref name="reset" scoped="" ref="0x2b56c63b0340"/>
        <function-ref name="isOn" scoped="" ref="0x2b56c63af670"/>
        <function-ref name="set" scoped="" ref="0x2b56c63b2900"/>
        <function-ref name="start" scoped="" ref="0x2b56c63b0800"/>
        <function-ref name="stop" scoped="" ref="0x2b56c63b0cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b56c6382d00" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b56c6382d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b56c63b30d0"/>
        <function-ref name="test" scoped="" ref="0x2b56c63b4720"/>
        <function-ref name="get" scoped="" ref="0x2b56c6381980"/>
        <function-ref name="captured" scoped="" ref="0x2b56c63b5380"/>
        <function-ref name="reset" scoped="" ref="0x2b56c63b5890"/>
        <function-ref name="isOn" scoped="" ref="0x2b56c63b4be0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6381e40"/>
        <function-ref name="start" scoped="" ref="0x2b56c63b5d50"/>
        <function-ref name="stop" scoped="" ref="0x2b56c63b4260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b56c63afd30" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b56c63afd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b56c63ab6e0"/>
        <function-ref name="fired" scoped="" ref="0x2b56c63ad380"/>
        <function-ref name="get" scoped="" ref="0x2b56c63ae980"/>
        <function-ref name="reset" scoped="" ref="0x2b56c63ad840"/>
        <function-ref name="isOn" scoped="" ref="0x2b56c63abba0"/>
        <function-ref name="set" scoped="" ref="0x2b56c63aee40"/>
        <function-ref name="start" scoped="" ref="0x2b56c63add00"/>
        <function-ref name="stop" scoped="" ref="0x2b56c63ab220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b56c63aa2a0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b56c63aa2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b56c63a8e60"/>
        <function-ref name="fired" scoped="" ref="0x2b56c63a99f0"/>
        <function-ref name="get" scoped="" ref="0x2b56c63a9020"/>
        <function-ref name="reset" scoped="" ref="0x2b56c63a8020"/>
        <function-ref name="isOn" scoped="" ref="0x2b56c63a6350"/>
        <function-ref name="set" scoped="" ref="0x2b56c63a94e0"/>
        <function-ref name="start" scoped="" ref="0x2b56c63a84e0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c63a89a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b56c63881e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b56c63881e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b56c6384550"/>
        <function-ref name="test" scoped="" ref="0x2b56c6386ba0"/>
        <function-ref name="get" scoped="" ref="0x2b56c6388e10"/>
        <function-ref name="setScale" scoped="" ref="0x2b56c6384a10"/>
        <function-ref name="getScale" scoped="" ref="0x2b56c6383020"/>
        <function-ref name="reset" scoped="" ref="0x2b56c6387d10"/>
        <function-ref name="overflow" scoped="" ref="0x2b56c6387850"/>
        <function-ref name="isOn" scoped="" ref="0x2b56c6384090"/>
        <function-ref name="set" scoped="" ref="0x2b56c6387340"/>
        <function-ref name="start" scoped="" ref="0x2b56c6386220"/>
        <function-ref name="stop" scoped="" ref="0x2b56c63866e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c6426e80" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c6426e80"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b56c58b79c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b56c58b79c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c6425220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b56c6425610" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b56c6425610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b56c644da90"/>
        <function-ref name="test" scoped="" ref="0x2b56c644d110"/>
        <function-ref name="get" scoped="" ref="0x2b56c644f3d0"/>
        <function-ref name="setScale" scoped="" ref="0x2b56c644c020"/>
        <function-ref name="getScale" scoped="" ref="0x2b56c644c530"/>
        <function-ref name="reset" scoped="" ref="0x2b56c644e2a0"/>
        <function-ref name="overflow" scoped="" ref="0x2b56c644fda0"/>
        <function-ref name="isOn" scoped="" ref="0x2b56c644d5d0"/>
        <function-ref name="set" scoped="" ref="0x2b56c644f890"/>
        <function-ref name="start" scoped="" ref="0x2b56c644e760"/>
        <function-ref name="stop" scoped="" ref="0x2b56c644ec20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b56c72567a0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b56c72567a0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b56c58b7640"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b56c58b7640"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="TOne" ref="0x2b56c5978c20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c7253020"/>
        <function-ref name="fired" scoped="" ref="0x2b56c7254020"/>
        <function-ref name="startAt" scoped="" ref="0x2b56c72549a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c72544e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b56c72534e0"/>
        <function-ref name="start" scoped="" ref="0x2b56c72555d0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c7255ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2b56c724edb0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b56c724edb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b56c724a9a0"/>
        <function-ref name="fired" scoped="" ref="0x2b56c724c530"/>
        <function-ref name="get" scoped="" ref="0x2b56c724da10"/>
        <function-ref name="reset" scoped="" ref="0x2b56c724c9f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b56c724ae60"/>
        <function-ref name="set" scoped="" ref="0x2b56c724c020"/>
        <function-ref name="start" scoped="" ref="0x2b56c724a020"/>
        <function-ref name="stop" scoped="" ref="0x2b56c724a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2b56c7253a30" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b56c7253a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b56c724fe60"/>
        <function-ref name="test" scoped="" ref="0x2b56c724f4e0"/>
        <function-ref name="get" scoped="" ref="0x2b56c72526b0"/>
        <function-ref name="setScale" scoped="" ref="0x2b56c724e350"/>
        <function-ref name="getScale" scoped="" ref="0x2b56c724e860"/>
        <function-ref name="reset" scoped="" ref="0x2b56c7251590"/>
        <function-ref name="overflow" scoped="" ref="0x2b56c72510d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b56c724f9a0"/>
        <function-ref name="set" scoped="" ref="0x2b56c7252b70"/>
        <function-ref name="start" scoped="" ref="0x2b56c7251a50"/>
        <function-ref name="stop" scoped="" ref="0x2b56c724f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b56c6480d00" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b56c6480d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b56c593f390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b56c647db60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b56c647b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b56c647b090"/>
        <function-ref name="overflow" scoped="" ref="0x2b56c647ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b56c647aca0" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b56c647aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="TOne" ref="0x2b56c5978c20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b56c64b1ae0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b56c64b04e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b56c64b0020"/>
        <function-ref name="overflow" scoped="" ref="0x2b56c64b09a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b56c64aca00" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b56c64aca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="TOne" ref="0x2b56c5978c20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b56c649a890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b56c6499260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b56c649ad50"/>
        <function-ref name="overflow" scoped="" ref="0x2b56c6499720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b56c6499cb0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b56c6499cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b56c64ce090"/>
        <function-ref name="test" scoped="" ref="0x2b56c64cf6e0"/>
        <function-ref name="get" scoped="" ref="0x2b56c6498980"/>
        <function-ref name="setScale" scoped="" ref="0x2b56c64ce550"/>
        <function-ref name="getScale" scoped="" ref="0x2b56c64cea60"/>
        <function-ref name="reset" scoped="" ref="0x2b56c6496840"/>
        <function-ref name="overflow" scoped="" ref="0x2b56c6496380"/>
        <function-ref name="isOn" scoped="" ref="0x2b56c64cfba0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6498e40"/>
        <function-ref name="start" scoped="" ref="0x2b56c6496d00"/>
        <function-ref name="stop" scoped="" ref="0x2b56c64cf220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b56c64e5020" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b56c64e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="TOne" ref="0x2b56c5978c20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b56c64e5e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b56c64e4800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b56c64e4340"/>
        <function-ref name="overflow" scoped="" ref="0x2b56c64e4cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b56c64e9ad0" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b56c64e9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b56c593f390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b56c64e8970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b56c64e7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b56c64e8e30"/>
        <function-ref name="overflow" scoped="" ref="0x2b56c64e7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b56c71e73f0" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b56c71e73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b56c593f390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c71e5c20"/>
        <function-ref name="fired" scoped="" ref="0x2b56c71e6c10"/>
        <function-ref name="startAt" scoped="" ref="0x2b56c71e55d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c71e5110"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b56c71e3110"/>
        <function-ref name="start" scoped="" ref="0x2b56c71e6240"/>
        <function-ref name="stop" scoped="" ref="0x2b56c71e6750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b56c71e1b90" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2b56c71e1b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="TOne" ref="0x2b56c5978c20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c71dd4e0"/>
        <function-ref name="fired" scoped="" ref="0x2b56c71df4e0"/>
        <function-ref name="startAt" scoped="" ref="0x2b56c71dfe60"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c71df9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b56c71dd9a0"/>
        <function-ref name="start" scoped="" ref="0x2b56c71e09d0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c71df020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b56c71e3780" loc="68:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b56c71e3780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b56c593f390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b56c71e25d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b56c71e1020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b56c71e2a90"/>
        <function-ref name="overflow" scoped="" ref="0x2b56c71e14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c651bda0" loc="18:/opt/tinyos-2.1.2/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c651bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c6518180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2b56c650eb20" loc="87:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x2b56c650eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c650d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c650d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c650d340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c650d4d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c650d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c650d7f0"/>
        <function-ref name="set" scoped="" ref="0x2b56c650d980"/>
        <function-ref name="clr" scoped="" ref="0x2b56c650db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2b56c650de40" loc="88:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x2b56c650de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c650c1e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c650c370"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c650c500"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c650c690"/>
        <function-ref name="get" scoped="" ref="0x2b56c650c820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c650c9b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c650cb40"/>
        <function-ref name="clr" scoped="" ref="0x2b56c650ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b56c650b020" loc="89:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b56c650b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c650b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c650b530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c650b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c650b850"/>
        <function-ref name="get" scoped="" ref="0x2b56c650b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c650bb70"/>
        <function-ref name="set" scoped="" ref="0x2b56c650bd00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6546020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2b56c650f970" loc="86:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b56c650f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c650fcf0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c650fe80"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c650e030"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c650e1c0"/>
        <function-ref name="get" scoped="" ref="0x2b56c650e350"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c650e4e0"/>
        <function-ref name="set" scoped="" ref="0x2b56c650e670"/>
        <function-ref name="clr" scoped="" ref="0x2b56c650e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2b56c65454e0" loc="91:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x2b56c65454e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6545860"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c65459f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6545b80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6545d10"/>
        <function-ref name="get" scoped="" ref="0x2b56c6544020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c65441b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6544340"/>
        <function-ref name="clr" scoped="" ref="0x2b56c65444d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2b56c6361790" loc="85:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2b56c6361790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6361b10"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6361ca0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6361e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c650f020"/>
        <function-ref name="get" scoped="" ref="0x2b56c650f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c650f340"/>
        <function-ref name="set" scoped="" ref="0x2b56c650f4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c650f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2b56c6546330" loc="90:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x2b56c6546330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c65466b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6546840"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c65469d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6546b60"/>
        <function-ref name="get" scoped="" ref="0x2b56c6546cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6546e80"/>
        <function-ref name="set" scoped="" ref="0x2b56c6545030"/>
        <function-ref name="clr" scoped="" ref="0x2b56c65451c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2b56c6536700" loc="39:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x2b56c6536700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b56c6536a80"/>
        <function-ref name="disable" scoped="" ref="0x2b56c6536c10"/>
        <function-ref name="captured" scoped="" ref="0x2b56c6536da0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b56c653a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2b56c653a400" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x2b56c653a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c653a780"/>
        <function-ref name="disable" scoped="" ref="0x2b56c653a910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b56c653aaa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b56c653ac30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2b56c6539060" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b56c6539060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c65393e0"/>
        <function-ref name="disable" scoped="" ref="0x2b56c6539570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b56c6539700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b56c6539890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b56c6533020" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b56c6533020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b56c65333a0"/>
        <function-ref name="disable" scoped="" ref="0x2b56c6533530"/>
        <function-ref name="captured" scoped="" ref="0x2b56c65336c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b56c6533850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x2b56c6533c40" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x2b56c6533c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b56c655b020"/>
        <function-ref name="test" scoped="" ref="0x2b56c655c630"/>
        <function-ref name="get" scoped="" ref="0x2b56c655f8a0"/>
        <function-ref name="captured" scoped="" ref="0x2b56c655e2a0"/>
        <function-ref name="reset" scoped="" ref="0x2b56c655e7b0"/>
        <function-ref name="isOn" scoped="" ref="0x2b56c655caf0"/>
        <function-ref name="set" scoped="" ref="0x2b56c655fd60"/>
        <function-ref name="start" scoped="" ref="0x2b56c655ec70"/>
        <function-ref name="stop" scoped="" ref="0x2b56c655c170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b56c65582f0" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b56c65582f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c6558670"/>
        <function-ref name="fired" scoped="" ref="0x2b56c6558800"/>
        <function-ref name="disable" scoped="" ref="0x2b56c6558990"/>
        <function-ref name="edge" scoped="" ref="0x2b56c6558b20"/>
        <function-ref name="enable" scoped="" ref="0x2b56c6558cb0"/>
        <function-ref name="getValue" scoped="" ref="0x2b56c6558e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b56c65597a0" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b56c65597a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c6559b20"/>
        <function-ref name="disable" scoped="" ref="0x2b56c6559cb0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b56c6559e40"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b56c6558020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x2b56c6552060" loc="51:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x2b56c6552060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c65523e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6552570"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6552700"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6552890"/>
        <function-ref name="get" scoped="" ref="0x2b56c6552a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6552bb0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6552d40"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6551020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2b56c6553440" loc="47:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2b56c6553440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c65537c0"/>
        <function-ref name="disable" scoped="" ref="0x2b56c6553950"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b56c6553ae0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b56c6553c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x2b56c654fbc0" loc="69:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x2b56c654fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c654e020"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c654e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b56c67972f0" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b56c67972f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6797870"/>
        <function-ref name="write" scoped="" ref="0x2b56c6797a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b56c67a2670" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b56c67a2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67a29f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b56c679b2f0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b56c679b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c679b670"/>
        <function-ref name="write" scoped="" ref="0x2b56c679b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b56c6796ce0" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b56c6796ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67950a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6795230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b56c6795500" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b56c6795500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6795880"/>
        <function-ref name="write" scoped="" ref="0x2b56c6795a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b56c678bce0" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b56c678bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67d10a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67d1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b56c678dce0" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b56c678dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c678c0a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c678c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b56c67a19c0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b56c67a19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67a1d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b56c678ece0" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b56c678ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c678d0a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c678d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b56c679a2f0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b56c679a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c679a670"/>
        <function-ref name="write" scoped="" ref="0x2b56c679a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b56c67992f0" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b56c67992f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6799670"/>
        <function-ref name="write" scoped="" ref="0x2b56c6799800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b56c6792500" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b56c6792500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6792880"/>
        <function-ref name="write" scoped="" ref="0x2b56c6792a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b56c6795ce0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b56c6795ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67940a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6794230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b56c67a3020" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c67a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b56c67a33a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b56c67a3530"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b56c67a36c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b56c679f370" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b56c679f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c679f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b56c679f9c0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b56c679f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c679fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b56c679d160" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b56c679d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c679d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b56c678d500" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b56c678d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c678d880"/>
        <function-ref name="write" scoped="" ref="0x2b56c678da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b56c67a06b0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b56c67a06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67a0a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b56c679aad0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b56c679aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c679ae50"/>
        <function-ref name="write" scoped="" ref="0x2b56c6799020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b56c679bad0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b56c679bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c679be50"/>
        <function-ref name="write" scoped="" ref="0x2b56c679a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b56c67a2020" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b56c67a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67a23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b56c678b500" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b56c678b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c678b880"/>
        <function-ref name="write" scoped="" ref="0x2b56c678ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b56c678c500" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b56c678c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c678c880"/>
        <function-ref name="write" scoped="" ref="0x2b56c678ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b56c6792ce0" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b56c6792ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67900a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6790230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b56c678e500" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b56c678e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c678e880"/>
        <function-ref name="write" scoped="" ref="0x2b56c678ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b56c6794ce0" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b56c6794ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67930a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6793230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b56c67d1500" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b56c67d1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b56c67d1c80"/>
        <function-ref name="writeDone" scoped="" ref="0x2b56c67d1e10"/>
        <function-ref name="write" scoped="" ref="0x2b56c67d0020"/>
        <function-ref name="beginRead" scoped="" ref="0x2b56c67d01b0"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c67d0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b56c67a3990" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b56c67a3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67a3d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b56c679cae0" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b56c679cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c679ce60"/>
        <function-ref name="write" scoped="" ref="0x2b56c679b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b56c6799ad0" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b56c6799ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6799e50"/>
        <function-ref name="write" scoped="" ref="0x2b56c6797020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b56c6794500" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b56c6794500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6794880"/>
        <function-ref name="write" scoped="" ref="0x2b56c6794a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b56c6797cd0" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b56c6797cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67960a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6796230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b56c67a2cc0" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b56c67a2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67a10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b56c6796500" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b56c6796500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6796880"/>
        <function-ref name="write" scoped="" ref="0x2b56c6796a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c67a5250" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c67a5250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c67a55d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c67a5760"/>
        <function-ref name="request" scoped="" ref="0x2b56c67a58f0"/>
        <function-ref name="granted" scoped="" ref="0x2b56c67a5a80"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c67a5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b56c679d7b0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b56c679d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c679db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b56c679c490" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b56c679c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c679c810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b56c678fce0" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b56c678fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c678e0a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c678e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b56c678f500" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b56c678f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c678f880"/>
        <function-ref name="write" scoped="" ref="0x2b56c678fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b56c67a0d00" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b56c67a0d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c679f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b56c6790ce0" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b56c6790ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c678f0a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c678f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b56c678cce0" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2b56c678cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c678b0a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c678b230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b56c6790500" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b56c6790500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6790880"/>
        <function-ref name="write" scoped="" ref="0x2b56c6790a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b56c67a1370" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b56c67a1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67a16f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b56c6793ce0" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b56c6793ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67920a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6792230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b56c67a0060" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b56c67a0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67a03e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b56c6793500" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b56c6793500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6793880"/>
        <function-ref name="write" scoped="" ref="0x2b56c6793a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b56c679de00" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b56c679de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c679c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b56c67d0610" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b56c67d0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b56c67d0990"/>
        <function-ref name="writeDone" scoped="" ref="0x2b56c67d0b20"/>
        <function-ref name="write" scoped="" ref="0x2b56c67d0cb0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b56c67d0e40"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c67cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b56c65862c0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x2b56c65862c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b56c6586640"/>
        <function-ref name="writeDone" scoped="" ref="0x2b56c65867d0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6586960"/>
        <function-ref name="beginRead" scoped="" ref="0x2b56c6586af0"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c6586c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b56c6588350" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c6588350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b56c65886d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b56c6588860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b56c65889f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b56c6585540" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x2b56c6585540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c65858c0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6585a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b56c6584370" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x2b56c6584370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c65846f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6584880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c6589600" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c6589600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c6589980"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c6589b10"/>
        <function-ref name="request" scoped="" ref="0x2b56c6589ca0"/>
        <function-ref name="granted" scoped="" ref="0x2b56c6589e30"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c6588020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b56c65831d0" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x2b56c65831d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6583550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2b56c65aa2e0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b56c65aa2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c65aa660"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c65aa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b56c65bb890" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x2b56c65bb890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b56c65bbc10"/>
        <function-ref name="writeDone" scoped="" ref="0x2b56c65bbda0"/>
        <function-ref name="write" scoped="" ref="0x2b56c65ba020"/>
        <function-ref name="beginRead" scoped="" ref="0x2b56c65ba1b0"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c65ba340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b56c65be660" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c65be660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b56c65be9e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b56c65beb70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b56c65bed00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2b56c65b3c70" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b56c65b3c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b56c65b5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2b56c65aab40" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x2b56c65aab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b56c65b4020"/>
        <function-ref name="toIdle" scoped="" ref="0x2b56c65b41b0"/>
        <function-ref name="isState" scoped="" ref="0x2b56c65b4340"/>
        <function-ref name="isIdle" scoped="" ref="0x2b56c65b44d0"/>
        <function-ref name="requestState" scoped="" ref="0x2b56c65b4660"/>
        <function-ref name="forceState" scoped="" ref="0x2b56c65b47f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b56c65b6060" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b56c65b6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c65b63e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c65b6570"/>
        <function-ref name="request" scoped="" ref="0x2b56c65b6700"/>
        <function-ref name="granted" scoped="" ref="0x2b56c65b6890"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c65b6a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b56c65baba0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x2b56c65baba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c65b9020"/>
        <function-ref name="write" scoped="" ref="0x2b56c65b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b56c65b9a30" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x2b56c65b9a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c65b9db0"/>
        <function-ref name="write" scoped="" ref="0x2b56c65b8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b56c65b4a70" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b56c65b4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b56c65b4df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b56c65b1020"/>
        <function-ref name="led1On" scoped="" ref="0x2b56c65b11b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b56c65b1340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b56c65b14d0"/>
        <function-ref name="get" scoped="" ref="0x2b56c65b1660"/>
        <function-ref name="led1Off" scoped="" ref="0x2b56c65b17f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b56c65b1e30"/>
        <function-ref name="set" scoped="" ref="0x2b56c65b1980"/>
        <function-ref name="led0On" scoped="" ref="0x2b56c65b1b10"/>
        <function-ref name="led2On" scoped="" ref="0x2b56c65b1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c65bc510" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c65bc510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c65bc890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c65bca20"/>
        <function-ref name="request" scoped="" ref="0x2b56c65bcbb0"/>
        <function-ref name="granted" scoped="" ref="0x2b56c65bcd40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c65bb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2b56c65a6bd0" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x2b56c65a6bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c65a5020"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c65a51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b56c65b88b0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x2b56c65b88b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c65b8c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b56c6606770" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b56c6606770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b56c6606af0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b56c6606c80"/>
        <function-ref name="isState" scoped="" ref="0x2b56c6606e10"/>
        <function-ref name="isIdle" scoped="" ref="0x2b56c6602020"/>
        <function-ref name="requestState" scoped="" ref="0x2b56c66021b0"/>
        <function-ref name="forceState" scoped="" ref="0x2b56c6602340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b56c66011d0" loc="66:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b56c66011d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b56c6601550"/>
        <function-ref name="toIdle" scoped="" ref="0x2b56c66016e0"/>
        <function-ref name="isState" scoped="" ref="0x2b56c6601870"/>
        <function-ref name="isIdle" scoped="" ref="0x2b56c6601a00"/>
        <function-ref name="requestState" scoped="" ref="0x2b56c6601b90"/>
        <function-ref name="forceState" scoped="" ref="0x2b56c6601d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c663c020" loc="66:/opt/tinyos-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c663c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c663c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b56c663cb70" loc="67:/opt/tinyos-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b56c663cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b56c663b020"/>
        <function-ref name="toIdle" scoped="" ref="0x2b56c663b1b0"/>
        <function-ref name="isState" scoped="" ref="0x2b56c663b340"/>
        <function-ref name="isIdle" scoped="" ref="0x2b56c663b4d0"/>
        <function-ref name="requestState" scoped="" ref="0x2b56c663b660"/>
        <function-ref name="forceState" scoped="" ref="0x2b56c663b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b56c6781d70" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b56c6781d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6780180"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6780310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b56c6781760" loc="42:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b56c6781760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b56c6781ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c67833d0" loc="39:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c67833d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c6783750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c67839e0" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c67839e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c6783d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c6781020"/>
        <function-ref name="request" scoped="" ref="0x2b56c67811b0"/>
        <function-ref name="granted" scoped="" ref="0x2b56c6781340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c67814d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b56c665b310" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b56c665b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c665b690"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c665b820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b56c6620bc0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b56c6620bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b56c665c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c6620560" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c6620560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c66208e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b56c6657680" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b56c6657680"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b56c6657a00"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b56c6657b90"/>
        <function-ref name="splitRead" scoped="" ref="0x2b56c6657d20"/>
        <function-ref name="write" scoped="" ref="0x2b56c665b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c665a1d0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c665a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c665a550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c665a6e0"/>
        <function-ref name="request" scoped="" ref="0x2b56c665a870"/>
        <function-ref name="granted" scoped="" ref="0x2b56c665aa00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c665ab90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2b56c6690190" loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2b56c6690190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c6690510"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c66906a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b56c6651800" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b56c6651800"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6651b80"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6651d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2b56c6673c10" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2b56c6673c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c6672020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c66721b0"/>
        <function-ref name="request" scoped="" ref="0x2b56c6672340"/>
        <function-ref name="granted" scoped="" ref="0x2b56c66724d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c6672660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b56c6652640" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b56c6652640"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b56c66529c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c6652020" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c6652020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c66523a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2b56c6674800" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2b56c6674800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b56c6674b80"/>
        <function-ref name="sleep" scoped="" ref="0x2b56c66731b0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b56c664e020"/>
        <function-ref name="dataReady" scoped="" ref="0x2b56c6673340"/>
        <function-ref name="initMaster" scoped="" ref="0x2b56c664e340"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b56c664e4d0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b56c664e660"/>
        <function-ref name="read" scoped="" ref="0x2b56c664e7f0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b56c664e980"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b56c664eb10"/>
        <function-ref name="setClock" scoped="" ref="0x2b56c664eca0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b56c664ee30"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b56c664d020"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b56c664d2b0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b56c664d440"/>
        <function-ref name="write" scoped="" ref="0x2b56c664d5d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b56c664d760"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b56c664d8f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b56c664da80"/>
        <function-ref name="getClock" scoped="" ref="0x2b56c664dc10"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b56c664dda0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b56c6674d10"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b56c664e1b0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b56c6673020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b56c6652c80" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b56c6652c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b56c66510a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b56c6651230"/>
        <function-ref name="splitRead" scoped="" ref="0x2b56c66513c0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6651550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c6650530" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c6650530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c66508b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c6650a40"/>
        <function-ref name="request" scoped="" ref="0x2b56c6650bd0"/>
        <function-ref name="granted" scoped="" ref="0x2b56c6650d60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c664f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b56c6672920" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c6672920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b56c6672ca0"/>
        <function-ref name="userId" scoped="" ref="0x2b56c6672e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b56c6670150" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b56c6670150"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b56c66704d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2b56c66a63e0" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2b56c66a63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b56c66a6760"/>
        <function-ref name="sleep" scoped="" ref="0x2b56c66a4ca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b56c66a6a80"/>
        <function-ref name="dataReady" scoped="" ref="0x2b56c66a4e30"/>
        <function-ref name="initMaster" scoped="" ref="0x2b56c66a6da0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b56c66a5020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b56c66a51b0"/>
        <function-ref name="read" scoped="" ref="0x2b56c66a5340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b56c66a54d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b56c66a5660"/>
        <function-ref name="setClock" scoped="" ref="0x2b56c66a57f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b56c66a5980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b56c66a5b10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b56c66a5da0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b56c66a4020"/>
        <function-ref name="write" scoped="" ref="0x2b56c66a41b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b56c66a4340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b56c66a44d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b56c66a4660"/>
        <function-ref name="getClock" scoped="" ref="0x2b56c66a47f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b56c66a4980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b56c66a68f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b56c66a6c10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b56c66a4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2b56c66da340" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b56c66da340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c66da6c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c66da850"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c66da9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c66dab70"/>
        <function-ref name="get" scoped="" ref="0x2b56c66dad00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c66d9020"/>
        <function-ref name="set" scoped="" ref="0x2b56c66d91b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c66d9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2b56c66ddc90" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b56c66ddc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c66dc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c66dc230"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c66dc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c66dc550"/>
        <function-ref name="get" scoped="" ref="0x2b56c66dc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c66dc870"/>
        <function-ref name="set" scoped="" ref="0x2b56c66dca00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c66dcb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b56c66dea40" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b56c66dea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c66dedc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c66dd020"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c66dd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c66dd340"/>
        <function-ref name="get" scoped="" ref="0x2b56c66dd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c66dd660"/>
        <function-ref name="set" scoped="" ref="0x2b56c66dd7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c66dd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b56c66de1c0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b56c66de1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b56c66de540"/>
        <function-ref name="stop" scoped="" ref="0x2b56c66de6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2b56c66d9680" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2b56c66d9680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b56c66d9a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2b56c66a0350" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2b56c66a0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b56c66a06d0"/>
        <function-ref name="sleep" scoped="" ref="0x2b56c66e0ca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b56c66a09f0"/>
        <function-ref name="dataReady" scoped="" ref="0x2b56c66e0e30"/>
        <function-ref name="initMaster" scoped="" ref="0x2b56c66a0d10"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b56c66e1020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b56c66e11b0"/>
        <function-ref name="read" scoped="" ref="0x2b56c66e1340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b56c66e14d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b56c66e1660"/>
        <function-ref name="setClock" scoped="" ref="0x2b56c66e17f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b56c66e1980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b56c66e1b10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b56c66e1da0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b56c66e0020"/>
        <function-ref name="write" scoped="" ref="0x2b56c66e01b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b56c66e0340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b56c66e04d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b56c66e0660"/>
        <function-ref name="getClock" scoped="" ref="0x2b56c66e07f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b56c66e0980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b56c66a0860"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b56c66a0b80"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b56c66e0b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2b56c66db020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b56c66db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c66db3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c66db530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c66db6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c66db850"/>
        <function-ref name="get" scoped="" ref="0x2b56c66db9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c66dbb70"/>
        <function-ref name="set" scoped="" ref="0x2b56c66dbd00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c66da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b56c6758150" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b56c6758150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b56c67584f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b56c6758680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b56c67571f0" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b56c67571f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b56c6757590"/>
        <function-ref name="configure" scoped="" ref="0x2b56c6757720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c6759390" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c6759390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c6759730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c67598c0"/>
        <function-ref name="request" scoped="" ref="0x2b56c6759a50"/>
        <function-ref name="granted" scoped="" ref="0x2b56c6759be0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c6759d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b56c67588d0" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c67588d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b56c6758c50"/>
        <function-ref name="userId" scoped="" ref="0x2b56c6758de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c729dd70" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c729dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c729c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b56c729c410" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b56c729c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b56c729c790"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b56c729c920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b56c729cab0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b56c729cc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b56c7299220" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b56c7299220"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b56c72995c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b56c7299750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b56c7298400" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b56c7298400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b56c72987a0"/>
        <function-ref name="configure" scoped="" ref="0x2b56c7298930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b56c7298bc0" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b56c7298bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b56c7297020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b56c72971b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b56c7297340"/>
        <function-ref name="dequeue" scoped="" ref="0x2b56c72974d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c729a490" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c729a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c729a830"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c729a9c0"/>
        <function-ref name="request" scoped="" ref="0x2b56c729ab50"/>
        <function-ref name="granted" scoped="" ref="0x2b56c729ace0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c729ae70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b56c72999a0" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b56c72999a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b56c7299d20"/>
        <function-ref name="userId" scoped="" ref="0x2b56c7298020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b56c72977a0" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b56c72977a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c7297b20"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c7297cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b56c674de40" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b56c674de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c674c1e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c674c370"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c674c500"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c674c690"/>
        <function-ref name="get" scoped="" ref="0x2b56c674c820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c674c9b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c674cb40"/>
        <function-ref name="clr" scoped="" ref="0x2b56c674ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c674e3b0" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c674e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c674e730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c674e8c0"/>
        <function-ref name="request" scoped="" ref="0x2b56c674ea50"/>
        <function-ref name="granted" scoped="" ref="0x2b56c674ebe0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c674ed70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x2b56c674d170" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x2b56c674d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c674d4f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c674d680"/>
        <function-ref name="request" scoped="" ref="0x2b56c674d810"/>
        <function-ref name="granted" scoped="" ref="0x2b56c674d9a0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c674db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b56c67b9c60" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b56c67b9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67b8210"/>
        <function-ref name="write" scoped="" ref="0x2b56c67b83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b56c67c4da0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b56c67c4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67c3180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b56c67bdb50" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b56c67bdb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67bc020"/>
        <function-ref name="write" scoped="" ref="0x2b56c67bc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b56c67b7670" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b56c67b7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67b79f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67b7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b56c67b7e50" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b56c67b7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67b6210"/>
        <function-ref name="write" scoped="" ref="0x2b56c67b63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b56c67f1670" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b56c67f1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67f19f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67f1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b56c67f3670" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b56c67f3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67f39f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67f3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b56c67c2120" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b56c67c2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67c24a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b56c67f5670" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b56c67f5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67f59f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67f5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b56c67bcc60" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b56c67bcc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67ba020"/>
        <function-ref name="write" scoped="" ref="0x2b56c67ba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b56c67bac60" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b56c67bac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67b9020"/>
        <function-ref name="write" scoped="" ref="0x2b56c67b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b56c67b3e50" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b56c67b3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67b2210"/>
        <function-ref name="write" scoped="" ref="0x2b56c67b23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b56c67b6670" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b56c67b6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67b69f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67b6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b56c67c5760" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c67c5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b56c67c5ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b56c67c5c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b56c67c5e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b56c67c0aa0" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b56c67c0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67c0e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b56c67bf120" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b56c67bf120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67bf5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b56c67bf870" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b56c67bf870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67bfbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b56c67f5e50" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b56c67f5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67f3210"/>
        <function-ref name="write" scoped="" ref="0x2b56c67f33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b56c67c2dc0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b56c67c2dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67c0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b56c67ba480" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b56c67ba480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67ba800"/>
        <function-ref name="write" scoped="" ref="0x2b56c67ba990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b56c67bc480" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b56c67bc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67bc800"/>
        <function-ref name="write" scoped="" ref="0x2b56c67bc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b56c67c4750" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b56c67c4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67c4ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b56c67f2e50" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b56c67f2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67f1210"/>
        <function-ref name="write" scoped="" ref="0x2b56c67f13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b56c67f3e50" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b56c67f3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67f2210"/>
        <function-ref name="write" scoped="" ref="0x2b56c67f23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b56c67b2670" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b56c67b2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67b29f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67b2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b56c67b0e50" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b56c67b0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67f5210"/>
        <function-ref name="write" scoped="" ref="0x2b56c67f53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b56c67b4670" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b56c67b4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67b49f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67b4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b56c67f1e50" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b56c67f1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b56c67f0610"/>
        <function-ref name="writeDone" scoped="" ref="0x2b56c67f07a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67f0930"/>
        <function-ref name="beginRead" scoped="" ref="0x2b56c67f0ac0"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c67f0c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b56c67c4100" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b56c67c4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67c4480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b56c67bd370" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b56c67bd370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67bd6f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67bd880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b56c67b9480" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b56c67b9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67b9800"/>
        <function-ref name="write" scoped="" ref="0x2b56c67b9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b56c67b6e50" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b56c67b6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67b4210"/>
        <function-ref name="write" scoped="" ref="0x2b56c67b43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b56c67b8670" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b56c67b8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67b89f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67b8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b56c67c3450" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b56c67c3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67c37d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b56c67b8e50" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b56c67b8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67b7210"/>
        <function-ref name="write" scoped="" ref="0x2b56c67b73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c67c69e0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c67c69e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c67c6d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c67c5020"/>
        <function-ref name="request" scoped="" ref="0x2b56c67c51b0"/>
        <function-ref name="granted" scoped="" ref="0x2b56c67c5340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c67c54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b56c67be020" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b56c67be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67be3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b56c67becc0" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b56c67becc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67bd0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b56c67b0670" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b56c67b0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67b09f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67b0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b56c67b1e50" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b56c67b1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67b0210"/>
        <function-ref name="write" scoped="" ref="0x2b56c67b03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b56c67c0450" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b56c67c0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67c07d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b56c67b1670" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b56c67b1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67b19f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67b1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b56c67f2670" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2b56c67f2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67f29f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67f2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b56c67b2e50" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b56c67b2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67b1210"/>
        <function-ref name="write" scoped="" ref="0x2b56c67b13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b56c67c3aa0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b56c67c3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67c3e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b56c67b3670" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b56c67b3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67b39f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67b3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b56c67c2770" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b56c67c2770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67c2af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b56c67b4e50" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b56c67b4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67b3210"/>
        <function-ref name="write" scoped="" ref="0x2b56c67b33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b56c67be670" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b56c67be670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67be9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b56c67ef020" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b56c67ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b56c67ef3a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b56c67ef530"/>
        <function-ref name="write" scoped="" ref="0x2b56c67ef6c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b56c67ef850"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c67ef9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b56c67dcc60" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b56c67dcc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67db210"/>
        <function-ref name="write" scoped="" ref="0x2b56c67db3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b56c67e7da0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b56c67e7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67e5180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b56c67dfb50" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b56c67dfb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67de020"/>
        <function-ref name="write" scoped="" ref="0x2b56c67de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b56c67d9670" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b56c67d9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67d99f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67d9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b56c67d9e50" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b56c67d9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67d8210"/>
        <function-ref name="write" scoped="" ref="0x2b56c67d83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b56c6815670" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b56c6815670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68159f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6815b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b56c6817670" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b56c6817670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68179f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6817b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b56c67e4120" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b56c67e4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67e44a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b56c6818670" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b56c6818670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68189f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6818b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b56c67dec60" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b56c67dec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67dd020"/>
        <function-ref name="write" scoped="" ref="0x2b56c67dd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b56c67ddc60" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b56c67ddc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67dc020"/>
        <function-ref name="write" scoped="" ref="0x2b56c67dc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b56c67d6e50" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b56c67d6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67d5210"/>
        <function-ref name="write" scoped="" ref="0x2b56c67d53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b56c67d8670" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b56c67d8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67d89f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67d8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b56c67e8760" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c67e8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b56c67e8ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b56c67e8c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b56c67e8e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b56c67e3aa0" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b56c67e3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67e3e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b56c67e2120" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b56c67e2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67e25a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b56c67e2870" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b56c67e2870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67e2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b56c6818e50" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b56c6818e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6817210"/>
        <function-ref name="write" scoped="" ref="0x2b56c68173a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b56c67e4dc0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b56c67e4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67e3180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b56c67dd480" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b56c67dd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67dd800"/>
        <function-ref name="write" scoped="" ref="0x2b56c67dd990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b56c67de480" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b56c67de480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67de800"/>
        <function-ref name="write" scoped="" ref="0x2b56c67de990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b56c67e7750" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b56c67e7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67e7ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b56c6816e50" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b56c6816e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6815210"/>
        <function-ref name="write" scoped="" ref="0x2b56c68153a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b56c6817e50" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b56c6817e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6816210"/>
        <function-ref name="write" scoped="" ref="0x2b56c68163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b56c67d5670" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b56c67d5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67d59f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67d5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b56c6819e50" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b56c6819e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6818210"/>
        <function-ref name="write" scoped="" ref="0x2b56c68183a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b56c67d7670" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b56c67d7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67d79f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67d7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b56c6815e50" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b56c6815e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b56c6814610"/>
        <function-ref name="writeDone" scoped="" ref="0x2b56c68147a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6814930"/>
        <function-ref name="beginRead" scoped="" ref="0x2b56c6814ac0"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c6814c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b56c67e7100" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b56c67e7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67e7480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b56c67df370" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b56c67df370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67df6f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67df880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b56c67dc480" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b56c67dc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67dc800"/>
        <function-ref name="write" scoped="" ref="0x2b56c67dc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b56c67d8e50" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b56c67d8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67d7210"/>
        <function-ref name="write" scoped="" ref="0x2b56c67d73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b56c67db670" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b56c67db670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67db9f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67dbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b56c67e5450" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b56c67e5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67e57d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b56c67dbe50" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b56c67dbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67d9210"/>
        <function-ref name="write" scoped="" ref="0x2b56c67d93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c67e9aa0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c67e9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c67e9e20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c67e8020"/>
        <function-ref name="request" scoped="" ref="0x2b56c67e81b0"/>
        <function-ref name="granted" scoped="" ref="0x2b56c67e8340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c67e84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b56c67e1020" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b56c67e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67e13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b56c67e1cc0" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b56c67e1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67df0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b56c6819670" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b56c6819670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68199f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6819b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b56c67d4e50" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b56c67d4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6819210"/>
        <function-ref name="write" scoped="" ref="0x2b56c68193a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b56c67e3450" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b56c67e3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67e37d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b56c67d4670" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b56c67d4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67d49f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67d4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b56c6816670" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2b56c6816670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68169f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6816b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b56c67d5e50" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b56c67d5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67d4210"/>
        <function-ref name="write" scoped="" ref="0x2b56c67d43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b56c67e5aa0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b56c67e5aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67e5e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b56c67d6670" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b56c67d6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67d69f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c67d6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b56c67e4770" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b56c67e4770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67e4af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b56c67d7e50" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b56c67d7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c67d6210"/>
        <function-ref name="write" scoped="" ref="0x2b56c67d63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b56c67e1670" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b56c67e1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c67e19f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b56c6813020" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b56c6813020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b56c68133a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b56c6813530"/>
        <function-ref name="write" scoped="" ref="0x2b56c68136c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b56c6813850"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c68139e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b56c680cb90" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b56c680cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b56c6809020"/>
        <function-ref name="changed" scoped="" ref="0x2b56c68091b0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b56c6809340"/>
        <function-ref name="setAddress" scoped="" ref="0x2b56c68094d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2b56c67f9020" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b56c67f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b56c67f93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b56c682ecb0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b56c682ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b56c682d0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b56c682d230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b56c682d3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b56c682d550"/>
        <function-ref name="setCca" scoped="" ref="0x2b56c682d6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b56c682d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b56c682a9f0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b56c682a9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b56c682ad70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2b56c682e020" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b56c682e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c682e3a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c682e530"/>
        <function-ref name="modify" scoped="" ref="0x2b56c682e6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c682e850"/>
        <function-ref name="resend" scoped="" ref="0x2b56c682e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b56c68316c0" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b56c68316c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b56c6831a40"/>
        <function-ref name="stop" scoped="" ref="0x2b56c6831bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b56c682c190" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x2b56c682c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b56c682c510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b56c68510c0" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b56c68510c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b56c6851440"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b56c68515d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b56c6851760"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b56c68518f0"/>
        <function-ref name="setCca" scoped="" ref="0x2b56c6851a80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b56c6851c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b56c6848200" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b56c6848200"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b56c593f390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b56c68477c0"/>
        <function-ref name="clear" scoped="" ref="0x2b56c6846020"/>
        <function-ref name="isValid" scoped="" ref="0x2b56c6847090"/>
        <function-ref name="set" scoped="" ref="0x2b56c6846750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b56c687a990" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b56c687a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c687ad10"/>
        <function-ref name="write" scoped="" ref="0x2b56c6879020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b56c6879380" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b56c6879380"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6879700"/>
        <function-ref name="write" scoped="" ref="0x2b56c6879890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b56c6850060" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b56c6850060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b56c68503e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2b56c687de60" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b56c687de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c687c210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2b56c68431e0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x2b56c68431e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b56c6843560"/>
        <function-ref name="disable" scoped="" ref="0x2b56c68436f0"/>
        <function-ref name="captured" scoped="" ref="0x2b56c6843880"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b56c6843a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2b56c684f220" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x2b56c684f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b56c593f390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c684cb30"/>
        <function-ref name="fired" scoped="" ref="0x2b56c684da60"/>
        <function-ref name="startAt" scoped="" ref="0x2b56c684c4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c684c020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b56c684b020"/>
        <function-ref name="start" scoped="" ref="0x2b56c684d090"/>
        <function-ref name="stop" scoped="" ref="0x2b56c684d5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b56c684b4d0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c684b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b56c684b850"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b56c684b9e0"/>
        <function-ref name="getRssi" scoped="" ref="0x2b56c684bb70"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b56c684bd00"/>
        <function-ref name="getPower" scoped="" ref="0x2b56c684a020"/>
        <function-ref name="getLqi" scoped="" ref="0x2b56c684a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2b56c6880d80" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b56c6880d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c687f180"/>
        <function-ref name="write" scoped="" ref="0x2b56c687f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b56c687f6b0" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b56c687f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c687fa30"/>
        <function-ref name="write" scoped="" ref="0x2b56c687fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2b56c6873780" loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2b56c6873780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6873b00"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b56c6873c90"/>
        <function-ref name="sfd" scoped="" ref="0x2b56c6873e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b56c68523b0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b56c68523b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6852730"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c68528c0"/>
        <function-ref name="modify" scoped="" ref="0x2b56c6852a50"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6852be0"/>
        <function-ref name="resend" scoped="" ref="0x2b56c6852d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2b56c68814e0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c68814e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b56c6881860"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b56c68819f0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b56c6881b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2b56c687c5c0" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b56c687c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c687c940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b56c6886080" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b56c6886080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6886400"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6886590"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6886720"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c68868b0"/>
        <function-ref name="get" scoped="" ref="0x2b56c6886a40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6886bd0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6886d60"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6883020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c6853450" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c6853450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c68537d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b56c684a4f0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c684a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b56c684a870"/>
        <function-ref name="getHeader" scoped="" ref="0x2b56c684aa00"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b56c684ab90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2b56c6884570" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b56c6884570"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b56c68848f0"/>
        <function-ref name="isSet" scoped="" ref="0x2b56c6884a80"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6884c10"/>
        <function-ref name="set" scoped="" ref="0x2b56c6884da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b56c687cd00" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b56c687cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c687b410"/>
        <function-ref name="write" scoped="" ref="0x2b56c687b5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b56c68826e0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b56c68826e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c6882a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c6882bf0"/>
        <function-ref name="request" scoped="" ref="0x2b56c6882d80"/>
        <function-ref name="granted" scoped="" ref="0x2b56c6881020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c68811b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2b56c6843d60" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2b56c6843d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6842210"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c68423a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6842530"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c68426c0"/>
        <function-ref name="get" scoped="" ref="0x2b56c6842850"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c68429e0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6842b70"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6842d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b56c6879bf0" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b56c6879bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6878020"/>
        <function-ref name="write" scoped="" ref="0x2b56c68781b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2b56c6878530" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b56c6878530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68788b0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6878a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b56c687d020" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b56c687d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c687d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2b56c6883370" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x2b56c6883370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c68836f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6883880"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6883a10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6883ba0"/>
        <function-ref name="get" scoped="" ref="0x2b56c6883d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6882020"/>
        <function-ref name="set" scoped="" ref="0x2b56c68821b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6882340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b56c6877110" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b56c6877110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b56c6877490"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b56c6877620"/>
        <function-ref name="led1On" scoped="" ref="0x2b56c68777b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b56c6877940"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b56c6877ad0"/>
        <function-ref name="get" scoped="" ref="0x2b56c6877c60"/>
        <function-ref name="led1Off" scoped="" ref="0x2b56c6877df0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b56c68764d0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6876020"/>
        <function-ref name="led0On" scoped="" ref="0x2b56c68761b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b56c6876340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b56c687a0c0" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b56c687a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c687a440"/>
        <function-ref name="write" scoped="" ref="0x2b56c687a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b56c6853ad0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b56c6853ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b56c6853e50"/>
        <function-ref name="stop" scoped="" ref="0x2b56c6852020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2b56c6880020" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b56c6880020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b56c68803a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b56c6880530"/>
        <function-ref name="write" scoped="" ref="0x2b56c68806c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b56c6880850"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c68809e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2b56c687d730" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b56c687d730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c687dab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2b56c687b930" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b56c687b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c687bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b56c68507f0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x2b56c68507f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b56c6850b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b56c6900c60" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b56c6900c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68ff210"/>
        <function-ref name="write" scoped="" ref="0x2b56c68ff3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b56c690a020" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b56c690a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c690a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b56c6904c70" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b56c6904c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6903020"/>
        <function-ref name="write" scoped="" ref="0x2b56c69031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b56c68fe670" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b56c68fe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68fe9f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c68feb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b56c68fee50" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b56c68fee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68fd210"/>
        <function-ref name="write" scoped="" ref="0x2b56c68fd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b56c693e670" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b56c693e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c693e9f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c693eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b56c6941670" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b56c6941670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c69419f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6941b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b56c6909370" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b56c6909370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c69096f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b56c6942670" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b56c6942670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c69429f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6942b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b56c6903c60" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b56c6903c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6901020"/>
        <function-ref name="write" scoped="" ref="0x2b56c69011b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b56c6901c60" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b56c6901c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6900020"/>
        <function-ref name="write" scoped="" ref="0x2b56c69001b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b56c68fae50" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b56c68fae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68f9210"/>
        <function-ref name="write" scoped="" ref="0x2b56c68f93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b56c68fd670" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b56c68fd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68fd9f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c68fdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b56c690c8f0" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c690c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b56c690cc70"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b56c690ce00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b56c690b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b56c6907d00" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b56c6907d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c69060a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b56c6906370" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b56c6906370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c69067f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b56c6906ac0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b56c6906ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6906e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b56c6942e50" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b56c6942e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6941210"/>
        <function-ref name="write" scoped="" ref="0x2b56c69413a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b56c6907060" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b56c6907060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c69073e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b56c6901480" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b56c6901480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6901800"/>
        <function-ref name="write" scoped="" ref="0x2b56c6901990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b56c6903480" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b56c6903480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6903800"/>
        <function-ref name="write" scoped="" ref="0x2b56c6903990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b56c690b940" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b56c690b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c690bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b56c693fe50" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b56c693fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c693e210"/>
        <function-ref name="write" scoped="" ref="0x2b56c693e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b56c6941e50" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b56c6941e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c693f210"/>
        <function-ref name="write" scoped="" ref="0x2b56c693f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b56c68f9670" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b56c68f9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68f99f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c68f9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b56c68f7e50" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b56c68f7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6942210"/>
        <function-ref name="write" scoped="" ref="0x2b56c69423a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b56c68fc670" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b56c68fc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68fc9f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c68fcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b56c693ee50" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b56c693ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b56c693d610"/>
        <function-ref name="writeDone" scoped="" ref="0x2b56c693d7a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c693d930"/>
        <function-ref name="beginRead" scoped="" ref="0x2b56c693dac0"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c693dc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b56c690b2f0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b56c690b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c690b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b56c6904490" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b56c6904490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6904810"/>
        <function-ref name="write" scoped="" ref="0x2b56c69049a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b56c6900480" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b56c6900480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6900800"/>
        <function-ref name="write" scoped="" ref="0x2b56c6900990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b56c68fde50" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b56c68fde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68fc210"/>
        <function-ref name="write" scoped="" ref="0x2b56c68fc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b56c68ff670" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b56c68ff670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68ff9f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c68ffb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b56c690a670" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b56c690a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c690a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b56c68ffe50" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b56c68ffe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68fe210"/>
        <function-ref name="write" scoped="" ref="0x2b56c68fe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c690dc30" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c690dc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c690c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c690c1b0"/>
        <function-ref name="request" scoped="" ref="0x2b56c690c340"/>
        <function-ref name="granted" scoped="" ref="0x2b56c690c4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c690c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b56c6905160" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b56c6905160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c69054e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b56c6905e00" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b56c6905e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c69041c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b56c68f7670" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b56c68f7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68f79f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c68f7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b56c68f8e50" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b56c68f8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68f7210"/>
        <function-ref name="write" scoped="" ref="0x2b56c68f73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b56c69076b0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b56c69076b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6907a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b56c68f8670" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b56c68f8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68f89f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c68f8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b56c693f670" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2b56c693f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c693f9f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c693fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b56c68f9e50" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b56c68f9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68f8210"/>
        <function-ref name="write" scoped="" ref="0x2b56c68f83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b56c690acc0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b56c690acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c69090a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b56c68fa670" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b56c68fa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68fa9f0"/>
        <function-ref name="write" scoped="" ref="0x2b56c68fab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b56c69099c0" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b56c69099c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6909d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b56c68fce50" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b56c68fce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c68fa210"/>
        <function-ref name="write" scoped="" ref="0x2b56c68fa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b56c69057b0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b56c69057b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6905b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b56c693c020" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b56c693c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b56c693c3a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b56c693c530"/>
        <function-ref name="write" scoped="" ref="0x2b56c693c6c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b56c693c850"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c693c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b56c692f020" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2b56c692f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c692f3a0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b56c692f530"/>
        <function-ref name="sfd" scoped="" ref="0x2b56c692f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b56c692f9a0" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b56c692f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c692fd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b56c692e1a0" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x2b56c692e1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b56c692e520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b56c6932670" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b56c6932670"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b56c69329f0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c6932b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2b56c6926380" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x2b56c6926380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6926700"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6926890"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6926a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6926bb0"/>
        <function-ref name="get" scoped="" ref="0x2b56c6926d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6925020"/>
        <function-ref name="set" scoped="" ref="0x2b56c69251b0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6925340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b56c691fb90" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b56c691fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b56c691e020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b56c691e1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b56c691e340"/>
        <function-ref name="syncDone" scoped="" ref="0x2b56c691e4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b56c691e660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b56c691e7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b56c691e980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b56c691eb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b56c691eca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b56c691ee30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b56c691d020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b56c691d1b0"/>
        <function-ref name="sync" scoped="" ref="0x2b56c691d340"/>
        <function-ref name="getChannel" scoped="" ref="0x2b56c691d5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b56c691d760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2b56c69549d0" loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x2b56c69549d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c6954d50"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c6953020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b56c691dd70" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b56c691dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b56c593f390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b56c6967330"/>
        <function-ref name="clear" scoped="" ref="0x2b56c6967a60"/>
        <function-ref name="isValid" scoped="" ref="0x2b56c6968ba0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6965210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2b56c69256b0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x2b56c69256b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6925a30"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6925bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6925d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6924020"/>
        <function-ref name="get" scoped="" ref="0x2b56c69241b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6924340"/>
        <function-ref name="set" scoped="" ref="0x2b56c69244d0"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6924660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b56c6964cb0" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b56c6964cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c69630a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6963230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b56c6963590" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b56c6963590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6963910"/>
        <function-ref name="write" scoped="" ref="0x2b56c6963aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2b56c69626d0" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b56c69626d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6962a50"/>
        <function-ref name="write" scoped="" ref="0x2b56c6962be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b56c6920330" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c6920330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b56c69206b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b56c6920840"/>
        <function-ref name="getRssi" scoped="" ref="0x2b56c69209d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b56c6920b60"/>
        <function-ref name="getPower" scoped="" ref="0x2b56c6920cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b56c6920e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b56c692a6d0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2b56c692a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c692aa50"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b56c692abe0"/>
        <function-ref name="sfd" scoped="" ref="0x2b56c692ad70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2b56c69213a0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b56c69213a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6921720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b56c6927020" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b56c6927020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c69273a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6927530"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c69276c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6927850"/>
        <function-ref name="get" scoped="" ref="0x2b56c69279e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6927b70"/>
        <function-ref name="set" scoped="" ref="0x2b56c6927d00"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6926020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2b56c6961020" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b56c6961020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c69613a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6961530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c692d800" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c692d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c692db80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b56c691f1e0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c691f1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b56c691f560"/>
        <function-ref name="getHeader" scoped="" ref="0x2b56c691f6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b56c691f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b56c6928080" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b56c6928080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6928400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b56c69236e0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b56c69236e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c6923a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c6923bf0"/>
        <function-ref name="request" scoped="" ref="0x2b56c6923d80"/>
        <function-ref name="granted" scoped="" ref="0x2b56c6922020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c69221b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b56c6963e00" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b56c6963e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c69621c0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6962350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2b56c6922530" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b56c6922530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b56c69228b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b56c6922a40"/>
        <function-ref name="write" scoped="" ref="0x2b56c6922bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b56c6922d60"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c6921020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b56c69618b0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b56c69618b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6961e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b56c6928820" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x2b56c6928820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b56c6928ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b56c6960150" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b56c6960150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b56c69604d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b56c6960660"/>
        <function-ref name="led1On" scoped="" ref="0x2b56c69607f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b56c6960980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b56c6960b10"/>
        <function-ref name="get" scoped="" ref="0x2b56c6960ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b56c6960e30"/>
        <function-ref name="led2Off" scoped="" ref="0x2b56c695f4d0"/>
        <function-ref name="set" scoped="" ref="0x2b56c695f020"/>
        <function-ref name="led0On" scoped="" ref="0x2b56c695f1b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b56c695f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b56c69643e0" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b56c69643e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6964760"/>
        <function-ref name="write" scoped="" ref="0x2b56c69648f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2b56c6965b10" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b56c6965b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6964020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2b56c6924a50" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b56c6924a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b56c6924dd0"/>
        <function-ref name="disable" scoped="" ref="0x2b56c6923020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b56c69231b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b56c6923340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2b56c6921ad0" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b56c6921ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6920020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b56c692de80" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b56c692de80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b56c692a220"/>
        <function-ref name="stop" scoped="" ref="0x2b56c692a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b56c69daa70" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b56c69daa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b56c69dadf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b56c6990670" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c6990670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b56c69909f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b56c6990b80"/>
        <function-ref name="getRssi" scoped="" ref="0x2b56c6990d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b56c69db020"/>
        <function-ref name="getPower" scoped="" ref="0x2b56c69db1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b56c69db340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b56c69d9550" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b56c69d9550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b56c593f390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b56c69d8b00"/>
        <function-ref name="clear" scoped="" ref="0x2b56c69d62a0"/>
        <function-ref name="isValid" scoped="" ref="0x2b56c69d83d0"/>
        <function-ref name="set" scoped="" ref="0x2b56c69d69d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b56c69da0c0" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c69da0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b56c69da440"/>
        <function-ref name="getHeader" scoped="" ref="0x2b56c69da5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b56c69da760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b56c69d1480" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b56c69d1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b56c69d1800"/>
        <function-ref name="isSet" scoped="" ref="0x2b56c69d1990"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c69d1b20"/>
        <function-ref name="set" scoped="" ref="0x2b56c69d1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b56c69d5660" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b56c69d5660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b56c69d4ce0"/>
        <function-ref name="clear" scoped="" ref="0x2b56c69d2460"/>
        <function-ref name="isValid" scoped="" ref="0x2b56c69d45b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c69d2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b56c69db6e0" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b56c69db6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b56c69dba60"/>
        <function-ref name="noAck" scoped="" ref="0x2b56c69dbbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b56c69dbd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b56c69cb020" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b56c69cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b56c69cb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b56c69d0d20" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c69d0d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b56c69cd0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b56c69cd270"/>
        <function-ref name="getRssi" scoped="" ref="0x2b56c69cd400"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b56c69cd590"/>
        <function-ref name="getPower" scoped="" ref="0x2b56c69cd720"/>
        <function-ref name="getLqi" scoped="" ref="0x2b56c69cd8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b56c69c24a0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b56c69c24a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c69c2820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b56c69c29b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c69c2b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c69c2cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b56c69c2e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b56c69cba80" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b56c69cba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b56c593f390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b56c69c8020"/>
        <function-ref name="clear" scoped="" ref="0x2b56c69c8750"/>
        <function-ref name="isValid" scoped="" ref="0x2b56c69ca8d0"/>
        <function-ref name="set" scoped="" ref="0x2b56c69c8e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b56c69cc640" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c69cc640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b56c69cc9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b56c69ccb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b56c69ccce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b56c69c38b0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b56c69c38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b56c69c3c30"/>
        <function-ref name="isSet" scoped="" ref="0x2b56c69c3dc0"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c69c2020"/>
        <function-ref name="set" scoped="" ref="0x2b56c69c21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b56c69c13b0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b56c69c13b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b56c593f390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b56c69bf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b56c69bf6e0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b56c69bf6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b56c69be3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b56c69c7af0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b56c69c7af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b56c69c40d0"/>
        <function-ref name="clear" scoped="" ref="0x2b56c69c4800"/>
        <function-ref name="isValid" scoped="" ref="0x2b56c69c6970"/>
        <function-ref name="set" scoped="" ref="0x2b56c69c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b56c69cdc50" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b56c69cdc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b56c69cc020"/>
        <function-ref name="noAck" scoped="" ref="0x2b56c69cc1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b56c69cc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b56c6a0ccf0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b56c6a0ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b56c593f390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b56c6a0b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b56c6a0a020" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b56c6a0a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c593f020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b56c593f390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b56c6a0ae30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b56c6a09800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b56c6a09340"/>
        <function-ref name="overflow" scoped="" ref="0x2b56c6a09cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b56c6a050b0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b56c6a050b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c6a52630"/>
        <function-ref name="fired" scoped="" ref="0x2b56c6a04b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b56c6a53920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b56c6a534a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b56c6a51020"/>
        <function-ref name="gett0" scoped="" ref="0x2b56c6a52ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c6a53020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b56c6a05ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b56c6a52020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b56c6a041b0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c6a04680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b56c6a40620" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b56c6a40620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a40ba0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a40d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b56c6a4b940" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b56c6a4b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6a4bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b56c6a44620" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b56c6a44620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a449a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a44b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b56c6a3e060" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b56c6a3e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a3e3e0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a3e570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b56c6a3e840" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b56c6a3e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a3ebc0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a3ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b56c6a32060" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b56c6a32060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a323e0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a32570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b56c6a35060" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b56c6a35060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a353e0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a35570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b56c6a4acc0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b56c6a4acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6a490a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b56c6a36060" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b56c6a36060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a363e0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a36570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b56c6a43620" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b56c6a43620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a439a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a43b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b56c6a41620" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b56c6a41620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a419a0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a41b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b56c6a3a840" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b56c6a3a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a3abc0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a3ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b56c6a3d060" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b56c6a3d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a3d3e0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a3d570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b56c6a4c2b0" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b56c6a4c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b56c6a4c630"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b56c6a4c7c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b56c6a4c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b56c6a476b0" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b56c6a476b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6a47a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b56c6a47d00" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b56c6a47d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6a461c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b56c6a46490" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b56c6a46490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6a46810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b56c6a36840" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b56c6a36840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a36bc0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a36d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b56c6a499c0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b56c6a499c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6a49d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b56c6a43e00" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b56c6a43e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a411c0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a41350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b56c6a44e00" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b56c6a44e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a431c0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a43350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b56c6a4b2f0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b56c6a4b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6a4b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b56c6a33840" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b56c6a33840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a33bc0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a33d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b56c6a35840" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b56c6a35840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a35bc0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a35d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b56c6a39060" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b56c6a39060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a393e0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a39570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b56c6a37840" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b56c6a37840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a37bc0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a37d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b56c6a3c060" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b56c6a3c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a3c3e0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a3c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b56c6a32840" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b56c6a32840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b56c6a31020"/>
        <function-ref name="writeDone" scoped="" ref="0x2b56c6a311b0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a31340"/>
        <function-ref name="beginRead" scoped="" ref="0x2b56c6a314d0"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c6a31660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b56c6a4cc20" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b56c6a4cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6a4b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b56c6a45e00" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b56c6a45e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a441c0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a44350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b56c6a41e00" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b56c6a41e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a401c0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a40350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b56c6a3d840" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b56c6a3d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a3dbc0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a3dd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b56c6a3f060" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b56c6a3f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a3f3e0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a3f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b56c6a4a020" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b56c6a4a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6a4a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b56c6a3f840" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b56c6a3f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a3fbc0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a3fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c6a4d520" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c6a4d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c6a4d8a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c6a4da30"/>
        <function-ref name="request" scoped="" ref="0x2b56c6a4dbc0"/>
        <function-ref name="granted" scoped="" ref="0x2b56c6a4dd50"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c6a4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b56c6a46ae0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b56c6a46ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6a46e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b56c6a457b0" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b56c6a457b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6a45b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b56c6a37060" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b56c6a37060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a373e0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a37570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b56c6a38840" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b56c6a38840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a38bc0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a38d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b56c6a47060" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b56c6a47060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6a473e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b56c6a38060" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b56c6a38060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a383e0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a38570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b56c6a33060" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2b56c6a33060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a333e0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a33570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b56c6a39840" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b56c6a39840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a39bc0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a39d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b56c6a4a670" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b56c6a4a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6a4a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b56c6a3a060" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b56c6a3a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a3a3e0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a3a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b56c6a49370" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b56c6a49370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6a496f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b56c6a3c840" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b56c6a3c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b56c6a3cbc0"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a3cd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b56c6a45160" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b56c6a45160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b56c6a454e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b56c6a31930" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b56c6a31930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b56c6a31cb0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b56c6a31e40"/>
        <function-ref name="write" scoped="" ref="0x2b56c6a30020"/>
        <function-ref name="beginRead" scoped="" ref="0x2b56c6a301b0"/>
        <function-ref name="readDone" scoped="" ref="0x2b56c6a30340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b56c6a59a20" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b56c6a59a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b56c6a59da0"/>
        <function-ref name="rand32" scoped="" ref="0x2b56c6a58020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b56c6a57920" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b56c6a57920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c6a59560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c6a5d9a0" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c6a5d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c6a5dd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b56c6aa8a20" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b56c6aa8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b56c6aa8da0"/>
        <function-ref name="rand32" scoped="" ref="0x2b56c6aa7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b56c6a54940" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b56c6a54940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c6aa8560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c6a54080" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c6a54080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c6a54400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b56c6a5baa0" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b56c6a5baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b56c6a5be20"/>
        <function-ref name="toIdle" scoped="" ref="0x2b56c6a55020"/>
        <function-ref name="isState" scoped="" ref="0x2b56c6a551b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b56c6a55340"/>
        <function-ref name="requestState" scoped="" ref="0x2b56c6a554d0"/>
        <function-ref name="forceState" scoped="" ref="0x2b56c6a55660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b56c6a90020" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b56c6a90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6a903a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6a90530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6a906c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6a90850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6a909e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b56c6a91220" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b56c6a91220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6a915a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6a91730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6a918c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6a91a50"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6a91be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b56c6a8ce60" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b56c6a8ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6a8b210"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6a8b3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6a8b530"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6a8b6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6a8b850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b56c6a8fa20" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b56c6a8fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6a8fda0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6a8c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6a8c1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6a8c340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6a8c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b56c6a8a8f0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b56c6a8a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b56c6a8ac70"/>
        <function-ref name="rand32" scoped="" ref="0x2b56c6a8ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c6a8c750" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c6a8c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c6a8cad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b56c6a89170" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c6a89170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6a894f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b56c6a89680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b56c6a89810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2b56c6a8bae0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b56c6a8bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b56c6a8be60"/>
        <function-ref name="toIdle" scoped="" ref="0x2b56c6a8a020"/>
        <function-ref name="isState" scoped="" ref="0x2b56c6a8a1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b56c6a8a340"/>
        <function-ref name="requestState" scoped="" ref="0x2b56c6a8a4d0"/>
        <function-ref name="forceState" scoped="" ref="0x2b56c6a8a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b56c6a8d690" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b56c6a8d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b56c6a8da10"/>
        <function-ref name="toIdle" scoped="" ref="0x2b56c6a8dba0"/>
        <function-ref name="isState" scoped="" ref="0x2b56c6a8dd30"/>
        <function-ref name="isIdle" scoped="" ref="0x2b56c6aca020"/>
        <function-ref name="requestState" scoped="" ref="0x2b56c6aca1b0"/>
        <function-ref name="forceState" scoped="" ref="0x2b56c6aca340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b56c6ac3950" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b56c6ac3950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6ac3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b56c6ac7aa0" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b56c6ac7aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6ac7e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b56c6ac3200" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b56c6ac3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6ac3580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b56c6abe3f0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b56c6abe3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6abe770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c6abfb70" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c6abfb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c6abe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b56c6ac2e30" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b56c6ac2e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6abf1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b56c6abea70" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c6abea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6abedf0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b56c6abd020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b56c6abd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b56c6abf570" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b56c6abf570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6abf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b56c6ae2020" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b56c6ae2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6ae23a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b56c6ae26b0" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b56c6ae26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6ae2a30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6ae2bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6ae2d50"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6ae1020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6ae11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b56c6ae6960" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b56c6ae6960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6ae6ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6ae6e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6ae5030"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6ae51c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6ae5350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b56c6ae5ca0" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2b56c6ae5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6ae40a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6ae4230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6ae43c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6ae4550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6ae46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b56c6ae55f0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b56c6ae55f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6ae5970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c6ae7cb0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c6ae7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c6ae60a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c6ae6230"/>
        <function-ref name="request" scoped="" ref="0x2b56c6ae63c0"/>
        <function-ref name="granted" scoped="" ref="0x2b56c6ae6550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c6ae66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b56c6ae4a50" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2b56c6ae4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6ae4dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b56c6ae3170" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x2b56c6ae3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c6ae34f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b56c6ae3680"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6ae3810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6ae39a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b56c6ae3b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b56c6ad7d70" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b56c6ad7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6ad6180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6ad6310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6ad64a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6ad6630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6ad67c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b56c6ad6b10" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b56c6ad6b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6ad5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2b56c6b4edb0" loc="180:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x2b56c6b4edb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c6b4d180"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c6b4d310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b56c6ad52f0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c6ad52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b56c6ad5670"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b56c6ad5800"/>
        <function-ref name="getRssi" scoped="" ref="0x2b56c6ad5990"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b56c6ad5b20"/>
        <function-ref name="getPower" scoped="" ref="0x2b56c6ad5cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b56c6ad5e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b56c6ad9a20" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2b56c6ad9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6ad9da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6ad8020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6ad81b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6ad8340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6ad84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b56c6ad4b70" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b56c6ad4b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b56c6ad3020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b56c6ad31b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b56c6ad3340"/>
        <function-ref name="dequeue" scoped="" ref="0x2b56c6ad34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b56c6ad4170" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c6ad4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6ad44f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b56c6ad4680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b56c6ad4810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b56c6ad9370" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b56c6ad9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6ad96f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b56c6adb7b0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b56c6adb7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c6adbb30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c6adbcc0"/>
        <function-ref name="request" scoped="" ref="0x2b56c6adbe50"/>
        <function-ref name="granted" scoped="" ref="0x2b56c6ada020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c6ada1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b56c6ada4d0" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b56c6ada4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6ada850"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6ada9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6adab70"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6adad00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6ad9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b56c6ad8840" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2b56c6ad8840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6ad8bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b56c6ad7020" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x2b56c6ad7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c6ad73a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b56c6ad7530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6ad76c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6ad7850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b56c6ad79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b56c6b2edd0" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b56c6b2edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b56c6b2d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b56c6b2d410" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b56c6b2d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b56c6b2d790"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b56c6b2d920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b56c6b2dab0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b56c6b2dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b56c6b76b80" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b56c6b76b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b56c6b75020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b56c6b751b0"/>
        <function-ref name="start" scoped="" ref="0x2b56c6b75340"/>
        <function-ref name="stop" scoped="" ref="0x2b56c6b754d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b56c6b74860" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b56c6b74860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6b74be0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6b74d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6b73020"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6b731b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6b73340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b56c6b73690" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b56c6b73690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6b73a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b56c6b26cf0" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b56c6b26cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6b770a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6b77230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6b773c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6b77550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6b776e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b56c6b76080" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b56c6b76080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b56c6b76400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b56c6b76590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b56c6b76720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b56c6b768b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2b56c6b75800" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x2b56c6b75800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b56c6b75b80"/>
        <function-ref name="toIdle" scoped="" ref="0x2b56c6b75d10"/>
        <function-ref name="isState" scoped="" ref="0x2b56c6b74020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b56c6b741b0"/>
        <function-ref name="requestState" scoped="" ref="0x2b56c6b74340"/>
        <function-ref name="forceState" scoped="" ref="0x2b56c6b744d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b56c6b73d90" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b56c6b73d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b56c6b72180"/>
        <function-ref name="stopDone" scoped="" ref="0x2b56c6b72310"/>
        <function-ref name="start" scoped="" ref="0x2b56c6b724a0"/>
        <function-ref name="stop" scoped="" ref="0x2b56c6b72630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b56c6b77980" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b56c6b77980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6b77d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b56c6b6f2d0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b56c6b6f2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b56c6b6f650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b56c6b6f7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b56c6b6f970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b56c6b6fb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b56c6b71580" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b56c6b71580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b56c6b71900"/>
        <function-ref name="toIdle" scoped="" ref="0x2b56c6b71a90"/>
        <function-ref name="isState" scoped="" ref="0x2b56c6b71c20"/>
        <function-ref name="isIdle" scoped="" ref="0x2b56c6b71db0"/>
        <function-ref name="requestState" scoped="" ref="0x2b56c6b66020"/>
        <function-ref name="forceState" scoped="" ref="0x2b56c6b661b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b56c6b61d70" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b56c6b61d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6b60180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6b60310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6b604a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6b60630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6b607c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b56c6b64350" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b56c6b64350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6b646d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6b64860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6b649f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6b64b80"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6b64d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b56c6b61020" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b56c6b61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b56c6b613a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b56c6b61530"/>
        <function-ref name="getRetries" scoped="" ref="0x2b56c6b616c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b56c6b61850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b56c6b619e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b56c6b5c1c0" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b56c6b5c1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b56c6b5c540"/>
        <function-ref name="noAck" scoped="" ref="0x2b56c6b5c6d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b56c6b5c860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b56c6b5f410" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b56c6b5f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b56c6b5f790"/>
        <function-ref name="setRetries" scoped="" ref="0x2b56c6b5f920"/>
        <function-ref name="getRetries" scoped="" ref="0x2b56c6b5fab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b56c6b5fc40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b56c6b5fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b56c6b91690" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b56c6b91690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6b91a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b56c6b93860" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b56c6b93860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6b93be0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6b93d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6b91020"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6b911b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6b91340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b56c6b8f610" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b56c6b8f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b56c6b8f990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b56c6b8fb20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b56c6b8fcb0"/>
        <function-ref name="syncDone" scoped="" ref="0x2b56c6b8fe40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b56c6b8e020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b56c6b8e1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b56c6b8e340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b56c6b8e4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b56c6b8e660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b56c6b8e7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b56c6b8e980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b56c6b8eb10"/>
        <function-ref name="sync" scoped="" ref="0x2b56c6b8eca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b56c6b8d020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b56c6b8d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b56c6b948b0" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b56c6b948b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b56c6b94c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b56c6b94dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b56c6b93020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b56c6b931b0"/>
        <function-ref name="setCca" scoped="" ref="0x2b56c6b93340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b56c6b934d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b56c6b95ce0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b56c6b95ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b56c6b940a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b56c6b8c1f0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x2b56c6b8c1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b56c6b8c570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b56c6b8c700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b56c6b8c890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b56c6b8ca20"/>
        <function-ref name="setCca" scoped="" ref="0x2b56c6b8cbb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b56c6b8cd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b56c6b96a80" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b56c6b96a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c6b96e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b56c6b95020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6b951b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6b95340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b56c6b954d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b56c6b9a020" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b56c6b9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6b9a3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6b9a530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6b9a6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6b9a850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6b9a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b56c6b98df0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b56c6b98df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6b971c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b56c6b91ce0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b56c6b91ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b56c6b900a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b56c6b90230"/>
        <function-ref name="getRssi" scoped="" ref="0x2b56c6b903c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b56c6b90550"/>
        <function-ref name="getPower" scoped="" ref="0x2b56c6b906e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b56c6b90870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b56c6b8d4d0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b56c6b8d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b56c6b8d950"/>
        <function-ref name="changed" scoped="" ref="0x2b56c6b8dae0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b56c6b8dc70"/>
        <function-ref name="setAddress" scoped="" ref="0x2b56c6b8de00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b56c6b90b70" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b56c6b90b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6b8f020"/>
        <function-ref name="getHeader" scoped="" ref="0x2b56c6b8f1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b56c6b8f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b56c6b98210" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b56c6b98210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6b98590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b56c6b8bd30" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b56c6b8bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b56c6b8a0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b56c6b8a270"/>
        <function-ref name="led1On" scoped="" ref="0x2b56c6b8a400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b56c6b8a590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b56c6b8a720"/>
        <function-ref name="get" scoped="" ref="0x2b56c6b8a8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b56c6b8aa40"/>
        <function-ref name="led2Off" scoped="" ref="0x2b56c6b891b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6b8abd0"/>
        <function-ref name="led0On" scoped="" ref="0x2b56c6b8ad60"/>
        <function-ref name="led2On" scoped="" ref="0x2b56c6b89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b56c6b97470" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b56c6b97470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b56c6b977f0"/>
        <function-ref name="source" scoped="" ref="0x2b56c6b97980"/>
        <function-ref name="address" scoped="" ref="0x2b56c6b97b10"/>
        <function-ref name="destination" scoped="" ref="0x2b56c6b97ca0"/>
        <function-ref name="setSource" scoped="" ref="0x2b56c6b97e30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b56c6b96020"/>
        <function-ref name="type" scoped="" ref="0x2b56c6b961b0"/>
        <function-ref name="setType" scoped="" ref="0x2b56c6b96340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b56c6b964d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b56c6b96660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b56c6b967f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2b56c6b8b0f0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x2b56c6b8b0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b56c6b8b470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b56c6b8b600"/>
        <function-ref name="request" scoped="" ref="0x2b56c6b8b790"/>
        <function-ref name="granted" scoped="" ref="0x2b56c6b8b920"/>
        <function-ref name="isOwner" scoped="" ref="0x2b56c6b8bab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b56c6c8b020" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="BuzzerAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b56c6c8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6c8b3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6c8b530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6c8b6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6c8b850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6c8b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b56c6c8bc30" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="BuzzerAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b56c6c8bc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c6c8a020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b56c6c8a1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6c8a340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6c8a4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b56c6c8a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b56c6c8a8b0" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="BuzzerAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b56c6c8a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b56c6c8ac30"/>
        <function-ref name="source" scoped="" ref="0x2b56c6c8adc0"/>
        <function-ref name="address" scoped="" ref="0x2b56c6c89020"/>
        <function-ref name="destination" scoped="" ref="0x2b56c6c891b0"/>
        <function-ref name="setSource" scoped="" ref="0x2b56c6c89340"/>
        <function-ref name="setDestination" scoped="" ref="0x2b56c6c894d0"/>
        <function-ref name="type" scoped="" ref="0x2b56c6c89660"/>
        <function-ref name="setType" scoped="" ref="0x2b56c6c897f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b56c6c89980"/>
        <function-ref name="setGroup" scoped="" ref="0x2b56c6c89b10"/>
        <function-ref name="localGroup" scoped="" ref="0x2b56c6c89ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b56c6c88020" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="BuzzerAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b56c6c88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b56c6c883a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b56c6c88530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b56c6c886c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b56c73ea850" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="BuzzerAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b56c73ea850"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c73eabd0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c73ead60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c73e9020"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c73e91b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c73e9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b56c73e9590" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="BuzzerAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b56c73e9590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c73e9910"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b56c73e9aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c73e9c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c73e9dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b56c73e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b56c73e7270" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="BuzzerAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b56c73e7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b56c73e75f0"/>
        <function-ref name="source" scoped="" ref="0x2b56c73e7780"/>
        <function-ref name="address" scoped="" ref="0x2b56c73e7910"/>
        <function-ref name="destination" scoped="" ref="0x2b56c73e7aa0"/>
        <function-ref name="setSource" scoped="" ref="0x2b56c73e7c30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b56c73e7dc0"/>
        <function-ref name="type" scoped="" ref="0x2b56c73e6020"/>
        <function-ref name="setType" scoped="" ref="0x2b56c73e61b0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b56c73e6340"/>
        <function-ref name="setGroup" scoped="" ref="0x2b56c73e64d0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b56c73e6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b56c73e68f0" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="BuzzerAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b56c73e68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b56c73e6c70"/>
        <function-ref name="noAck" scoped="" ref="0x2b56c73e6e00"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b56c73e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b56c73dc390" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BuzzerAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b56c73dc390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c73dc710"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c73dc8a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c73dca30"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c73dcbc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c73dcd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b56c73db060" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BuzzerAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b56c73db060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c73db3e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c73db570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c73db700"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c73db890"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c73dba20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b56c73dbc70" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BuzzerAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b56c73dbc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b56c73da020"/>
        <function-ref name="source" scoped="" ref="0x2b56c73da1b0"/>
        <function-ref name="address" scoped="" ref="0x2b56c73da340"/>
        <function-ref name="destination" scoped="" ref="0x2b56c73da4d0"/>
        <function-ref name="setSource" scoped="" ref="0x2b56c73da660"/>
        <function-ref name="setDestination" scoped="" ref="0x2b56c73da7f0"/>
        <function-ref name="type" scoped="" ref="0x2b56c73da980"/>
        <function-ref name="setType" scoped="" ref="0x2b56c73dab10"/>
        <function-ref name="isForMe" scoped="" ref="0x2b56c73daca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b56c73dae30"/>
        <function-ref name="localGroup" scoped="" ref="0x2b56c73d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b56c6c3a940" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b56c6c3a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6c3acc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6c3ae50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6c37020"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6c371b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6c37340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b56c6ca0400" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b56c6ca0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6ca07a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6ca0930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6ca0ac0"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6ca0c50"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6ca0de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b56c6ca14b0" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b56c6ca14b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b56c6ca1850"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6ca19e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6ca1b70"/>
        <function-ref name="cancel" scoped="" ref="0x2b56c6ca1d00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b56c6ca0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b56c6c9e720" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b56c6c9e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c6c9eaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b56c6c9ec30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6c9edc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6c9d020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b56c6c9d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b56c6c9d480" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b56c6c9d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c6c9d800"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c6c9d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b56c6c9dc60" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b56c6c9dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b56c6c9b020"/>
        <function-ref name="runTask" scoped="" ref="0x2b56c6c9b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b56c6c9f060" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b56c6c9f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b56c6c9f3e0"/>
        <function-ref name="source" scoped="" ref="0x2b56c6c9f570"/>
        <function-ref name="address" scoped="" ref="0x2b56c6c9f700"/>
        <function-ref name="destination" scoped="" ref="0x2b56c6c9f890"/>
        <function-ref name="setSource" scoped="" ref="0x2b56c6c9fa20"/>
        <function-ref name="setDestination" scoped="" ref="0x2b56c6c9fbb0"/>
        <function-ref name="type" scoped="" ref="0x2b56c6c9fd40"/>
        <function-ref name="setType" scoped="" ref="0x2b56c6c9e020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b56c6c9e1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b56c6c9e340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b56c6c9e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b56c6cd8020" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="BuzzerAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b56c6cd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b56c6cd83a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b56c6cd8530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b56c6cd86c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b56c6cd8850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b56c6cd89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b56c6cd9910" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="BuzzerAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b56c6cd9910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b56c6cd9c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b56c6cd8c30" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="BuzzerAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b56c6cd8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b56c6cd7020"/>
        <function-ref name="source" scoped="" ref="0x2b56c6cd71b0"/>
        <function-ref name="address" scoped="" ref="0x2b56c6cd7340"/>
        <function-ref name="destination" scoped="" ref="0x2b56c6cd74d0"/>
        <function-ref name="setSource" scoped="" ref="0x2b56c6cd7660"/>
        <function-ref name="setDestination" scoped="" ref="0x2b56c6cd77f0"/>
        <function-ref name="type" scoped="" ref="0x2b56c6cd7980"/>
        <function-ref name="setType" scoped="" ref="0x2b56c6cd7b10"/>
        <function-ref name="isForMe" scoped="" ref="0x2b56c6cd7ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b56c6cd7e30"/>
        <function-ref name="localGroup" scoped="" ref="0x2b56c6cd6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x2b56c6cd5630" loc="3:/opt/tinyos-2.1.2/tos/interfaces/SounderC.nc">
      <component-ref qname="SounderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x2b56c6cd5630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beepOff" scoped="" ref="0x2b56c6cd59b0"/>
        <function-ref name="beep" scoped="" ref="0x2b56c6cd5b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x2b56c6cd2630" loc="3:/opt/tinyos-2.1.2/tos/interfaces/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x2b56c6cd2630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beepOff" scoped="" ref="0x2b56c6cd29b0"/>
        <function-ref name="beep" scoped="" ref="0x2b56c6cd2b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SounderPin" ref="0x2b56c6cca520" loc="6:/opt/tinyos-2.1.2/tos/interfaces/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SounderPin" scoped="" ref="0x2b56c6cca520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b56c6cca8a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b56c6ccaa30"/>
        <function-ref name="toggle" scoped="" ref="0x2b56c6ccabc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b56c6ccad50"/>
        <function-ref name="get" scoped="" ref="0x2b56c6cc9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b56c6cc91b0"/>
        <function-ref name="set" scoped="" ref="0x2b56c6cc9340"/>
        <function-ref name="clr" scoped="" ref="0x2b56c6cc94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b56c6ccf020" loc="5:/opt/tinyos-2.1.2/tos/interfaces/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b56c6ccf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c6ccb630"/>
        <function-ref name="fired" scoped="" ref="0x2b56c6ccea60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b56c6ccd920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b56c6ccd4a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b56c6cca020"/>
        <function-ref name="gett0" scoped="" ref="0x2b56c6ccbab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c6ccd020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b56c6ccfc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b56c6ccb020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b56c6cce110"/>
        <function-ref name="stop" scoped="" ref="0x2b56c6cce5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b56c6cc1750" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="SounderC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b56c6cc1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b56c59407d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b56c5940b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b56c6cbec40"/>
        <function-ref name="fired" scoped="" ref="0x2b56c6cbf1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b56c6cbe020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b56c6cbfae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b56c6cbd590"/>
        <function-ref name="gett0" scoped="" ref="0x2b56c6cbd110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b56c6cbf660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b56c6cc0390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b56c6cbe630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b56c6cc0860"/>
        <function-ref name="stop" scoped="" ref="0x2b56c6cc0d30"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b56c59be6a0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b56c59bf2b0" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b56c59c6b70" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b56c59c68f0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b56c59c8070" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b56c59c8af0" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b56c59c8870" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b56c59c7630" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b56c59c73b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b56c59c6020" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b56c59dd0e0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b56c59dd810" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b56c59de2b0" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b56c59dc760" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b56c59de9b0" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b56c59dc020" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b56c59df4c0" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b56c59dfb90" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b56c58b50e0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b56c58be0e0" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b56c58b5850" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b56c58c0190" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b56c58c09e0" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b56c598a420" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b56c59a31f0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b56c59201b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b56c59a5390" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b56c5b85a00" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b56c5b9a1f0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b56c5b9a9d0" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b56c5b98940" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b56c5b96120" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b56c5b96930" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b56c5b98190" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b56c5b954c0" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b56c5b95240" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b56c5b85270" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b56c5b97190" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b56c5b97920" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b56c5c3c110" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b56c5c40e40" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b56c5c3b600" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b56c5c3b380" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b56c5c40460" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b56c5c3c960" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x2b56c5c1d2a0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c5c1d020" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b56c5c1c350" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c5c1c0d0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b56c5c18660" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c5c18060" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b56c5c18390" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b56c5c17750" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b56c5c197d0" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c5c19210" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b56c5c19540" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b56c5c322c0" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b56c5c16560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b56c5c34800" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b56c5c16560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b56c5c34b80" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b56c5c32020" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b56c5c46970" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c5c46370" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b56c5c466a0" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b56c5c45a60" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b56c5c31630" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c5c313b0" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b56c5c2fb80" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c5c2f5a0" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b56c5c2f8f0" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mts300Sounder" loc="1:/opt/tinyos-2.1.2/tos/interfaces/Mts300Sounder.nc">
      <function command="" provided="0" name="beepOff" ref="0x2b56c5c50960" loc="5:/opt/tinyos-2.1.2/tos/interfaces/Mts300Sounder.nc">
        <interfacedef-ref qname="Mts300Sounder"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="beep" ref="0x2b56c5c502a0" loc="3:/opt/tinyos-2.1.2/tos/interfaces/Mts300Sounder.nc">
        <interfacedef-ref qname="Mts300Sounder"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="length" ref="0x2b56c5c50020" loc="3:/opt/tinyos-2.1.2/tos/interfaces/Mts300Sounder.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b56c5c419c0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
              <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c5c41060" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b56c5c413b0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b56c5c416e0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b56c5c38040" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b56c5c16180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b56c5c39d90" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b56c5c2abe0" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b56c5c16560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b56c5c2a960" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b56c5c2e070" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b56c5c16560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b56c5c2eb30" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b56c5c16560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b56c5c2e8b0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b56c5c27600" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b56c5c16560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b56c5c27020" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b56c5c27370" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b56c5c16560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b56c5c29040" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b56c5c16560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b56c5c28a30" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b56c5c28d80" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b56c5c16560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b56c5c23ae0" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b56c5c23860" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b56c5c3ae60" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b56c5c3a8b0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b56c5c3abd0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b56c5bffd50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b56c5c24890" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b56c5c24610" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b56c5c37600" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b56c5c16180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b56c5c37020" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b56c5c37370" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b56c5c16180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b56c5c35490" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b56c5c16180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicSetting" loc="68:/opt/tinyos-2.1.2/tos/interfaces/MicSetting.nc">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/MicSetting.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo&#10;</long>
      </documentation>
      <function event="" provided="0" name="toneDetected" ref="0x2b56c5c6b7c0" loc="110:/opt/tinyos-2.1.2/tos/interfaces/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b56c5c6c790" loc="97:/opt/tinyos-2.1.2/tos/interfaces/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopMic" ref="0x2b56c5c6e750" loc="87:/opt/tinyos-2.1.2/tos/interfaces/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gainAdjust" ref="0x2b56c5c6f840" loc="77:/opt/tinyos-2.1.2/tos/interfaces/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b56c5c6f5c0" loc="77:/opt/tinyos-2.1.2/tos/interfaces/MicSetting.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readToneDetector" ref="0x2b56c5c6c020" loc="92:/opt/tinyos-2.1.2/tos/interfaces/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b56c5c6b020" loc="102:/opt/tinyos-2.1.2/tos/interfaces/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="muxSel" ref="0x2b56c5c61e80" loc="72:/opt/tinyos-2.1.2/tos/interfaces/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sel" ref="0x2b56c5c61c00" loc="72:/opt/tinyos-2.1.2/tos/interfaces/MicSetting.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startMic" ref="0x2b56c5c6e020" loc="82:/opt/tinyos-2.1.2/tos/interfaces/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x2b56c5c73d30" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b56c5c734d0" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x2b56c5c715b0" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b56c5c767f0" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b56c5c5f7d0" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b56c5c63db0" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b56c5c76020" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b56c5c75270" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x2b56c5c9d0e0" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <typedef name="addr_size" ref="0x2b56c5c9c070" loc="59:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x2b56c5c9c070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b56c5c9b690" loc="76:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2b56c5c64140"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b56c5c9c980" loc="76:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2b56c5c64140"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b56c5c9ccd0" loc="76:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b56c5c9b060" loc="76:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b56c5c9b3e0" loc="76:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b56c5c930e0" loc="112:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b56c5c943a0" loc="112:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b56c5c946f0" loc="112:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b56c5c94a40" loc="112:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b56c5c94dc0" loc="112:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b56c5c99650" loc="92:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2b56c5c64140"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b56c5c98830" loc="92:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2b56c5c64140"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b56c5c98b80" loc="92:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b56c5c99020" loc="92:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b56c5c993a0" loc="92:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b56c5c97430" loc="102:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b56c5c96720" loc="102:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b56c5c96a70" loc="102:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b56c5c96dc0" loc="102:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b56c5c97180" loc="102:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b56c5ca4d00" loc="68:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b56c5ca4540" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2b56c5ca6d90" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2b56c5ca64d0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b56c5c7e5d0" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b56c5c7e5d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b56c5c8f420" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b56c5c79d60" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b56c5c77b10" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b56c5c77540" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b56c5c77880" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b56c5c78d60" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b56c5c8d460" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b56c5c8fbb0" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b56c5c78570" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b56c5c7b2a0" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b56c5c7b020" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b56c5c90aa0" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b56c5c904d0" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b56c5c90810" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b56c5c7bd60" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b56c5c7bae0" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b56c5c79650" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b56c5d03020" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b56c5d02ac0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b56c5d04840" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2b56c5d022a0" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2b56c5d02020" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b56c5d040e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b56c5d037d0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b56c5d13a00" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b56c5dc80e0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b56c5dc8a10" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b56c5dbd0e0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b56c5dbe8a0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b56c5dc4020" loc="56:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b56c5dc30e0" loc="73:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b56c5dc56f0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b56c5dc4890" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b56c5dc3a10" loc="81:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b56c5dc0780" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b56c5dbf020" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b56c5dd12a0" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b56c5dd8270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b56c5dd1020" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b56c5dd8270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b56c5dd3270" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b56c5dd3d70" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b56c5dd8270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b56c5dd3af0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b56c5dd8270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b56c5dd2740" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b56c5dd8270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b56c5e3f270" loc="62:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b56c5e41120" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b56c5e41970" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x2b56c5e65d40" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x2b56c5ea65b0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x2b56c5ea6cd0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x2b56c5ea5e20" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b56c5ea5ba0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x2b56c5ea7e30" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x2b56c5ea1840" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2b56c5e9c760" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b56c5ea02a0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x2b56c5ea0020" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b56c5e990e0" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b56c5ea7020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x2b56c5e89c50" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x2b56c5ea1110" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x2b56c5ea2e30" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b56c5ea0b40" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x2b56c5ea4590" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b56c5e9eb50" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x2b56c5ea54c0" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b56c5e9c020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b56c5e9dc60" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b56c5e9b990" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b56c5e9b710" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x2b56c5e9e390" loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x2b56c5ea76f0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x2b56c5ea2020" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b56c5ea4c40" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x2b56c5e9d5c0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b56c5e9d340" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b56c5e9b020" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x2b56c5ea2750" loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b56c5f8f6d0" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b56c5f8f6d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b56c5f8c020" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b56c5fa1410" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b56c5fa1410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b56c5fa1650" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c5fa1650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b56c5f9f020" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c5fa1650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b56c5f9e120" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b56c5f9f8a0" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b56c5f9e880" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b56c5f89b20" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b56c5f89b20"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b56c5f89d60" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c5f89d60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b56c5f829c0" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c5f89d60"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b56c5f849b0" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b56c5f82020" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c5f89d60"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c5f89d60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b56c5f83a10" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c5f89d60"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b56c5f83d50" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c5f89d60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b56c5f831f0" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b56c5f811f0" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c5f89d60"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b56c5f86960" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c5f89d60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b56c5f866e0" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c5f89d60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b56c5f841f0" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b56c5fc1070" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c594de50"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b56c594c2b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b56c5fbe5e0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c5959850"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b56c5959c70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b56c5fbf350" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c595c020"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b56c595c440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b56c5fbfd80" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c595c020"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b56c595c440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b56c5fbfb00" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c595c020"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b56c595c440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b56c5fbd040" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c5959850"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b56c5959c70"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b56c5fbeda0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c5959850"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b56c5959c70"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b56c5fc1ac0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c594de50"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b56c594c2b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b56c5fc1840" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c594de50"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b56c594c2b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2b56c5fd57e0" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b56c5fd4030" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2b56c5fd5070" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b56c5fd4840" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b56c5fdad70" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c5953780"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b56c5953ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b56c5fd77e0" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c5953780"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b56c5953ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b56c5fd7560" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c5953780"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b56c5953ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b56c5fc3890" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c5fc3890"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b56c5fdd270" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b56c5fb9420" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b56c5fbb270" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c5fc3890"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b56c5fb9b90" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b56c5fdda30" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b56c5fbbc30" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c5fc3890"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b56c5fbb9b0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c5fc3890"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b56c5fb8350" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b56c5fb8aa0" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b56c5fa9020" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b56c5fa9020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b56c5fca920" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b56c5fa5970" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b56c5fa9950" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b56c5fa9020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b56c5fc8350" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b56c5fc80d0" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b56c5fc8b50" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b56c5fa62b0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b56c5fa7ae0" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b56c5fca190" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b56c5fa7350" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b56c5fa9020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b56c5fa70d0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b56c5fa9020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b56c5fa6a20" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b56c5fa51f0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b56c616e3b0" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b56c616ebc0" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b56c61b7020" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b56c61b7020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b56c61b7260" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c61b7260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b56c61b30b0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c61b7260"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c61b4e00" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b56c61b12a0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c61b1020" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b56c61b7e20" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c61b7ba0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b56c61b0610" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c61b7260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c61b0020" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b56c61b0380" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c61b7260"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b56c61d1680" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c61d1060" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b56c61d13f0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b56c61d0850" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c61d05d0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b56c61d3810" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b56c61d7d70" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b56c61d7af0" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b56c61bb3d0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c61bb150" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b56c61b95f0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c61b9370" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b56c61b8760" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c61b84e0" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2b56c62076e0" loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c6207460" loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2b56c6209940" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c62096c0" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2b56c61db020" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b56c61ddd40" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2b56c61dd4a0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b56c61dd220" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2b56c61dba50" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2b56c61db7d0" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2b56c6208860" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c62085e0" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b56c61fa020" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b56c5c16560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b56c61fb8b0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b56c5c16560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b56c61fbc30" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2b56c61e72b0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b56c61e8c50" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2b56c61e7020" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2b56c61e3980" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b56c61e3380" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2b56c61e36f0" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2b56c61e7d90" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2b56c4fbd290"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b56c61e7b10" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2b56c61e4880" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b56c61e4600" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2b56c61e8450" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b56c61e81d0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2b56c61e5990" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b56c61e5710" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b56c61ff830" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c61ff5b0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b56c62038f0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c62032d0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b56c6203660" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b56c6200810" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c6200590" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b56c6201d20" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c6201700" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b56c6201a90" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b56c61fe810" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c61fe590" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b56c61df3d0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c61df150" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b56c61f2a70" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c61f24b0" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b56c61f27e0" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b56c621c160" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c621dae0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b56c621de10" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b56c621d270" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b56c6220d90" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c6220b10" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b56c621e360" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c621fd10" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b56c621e0d0" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b56c622e900" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b56c622e340" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2b56c622e670" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b56c622dc10" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2b56c6229410" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b56c622a5e0" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b56c622ae20" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b56c6229170" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b56c622bdc0" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b56c622b7e0" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b56c622bb30" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2b56c622d3d0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2b56c622d150" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b56c6225820" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b56c6225020" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x2b56c624fae0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c624f820" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2b56c624f020" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2b56c5bcab30"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2b56c5bc84f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c6250be0" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2b56c624dde0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2b56c5bdc020"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2b56c5bdb8c0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c624dae0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2b56c62344c0" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2b56c6231570" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2b56c6233d50" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2b56c6238b70" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2b56c6235be0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2b56c6234d30" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2b56c6233580" loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2b56c6235420" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2b56c6247480" loc="71:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2b56c624aa80" loc="56:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2b56c6249c90" loc="66:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2b56c6249a10" loc="66:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2b56c6249270" loc="61:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2b56c624b730" loc="45:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b56c624b4b0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2b56c624a2a0" loc="51:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b56c624a020" loc="51:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2b56c62af020" loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2b56c62b09f0" loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2b56c62b0d40" loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2b56c62b1960" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2b56c62b1020" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2b56c62b3820" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2b56c62b3c00" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2b56c62862a0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b56c6286020" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2b56c62b0270" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2b56c6283d70" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b56c6283af0" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b56c62843e0" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b56c6284160" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2b56c62ae270" loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2b56c62b3020" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b56c6282c50" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2b56c62afa20" loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x2b56c6284b60" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b56c61d6ac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b56c61cd240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2b56c6283390" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2b56c6287850" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b56c62869f0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2b56c6282530" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b56c62adc60" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b56c62adc60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b56c62a9560" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b56c62a82f0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b56c62adc60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b56c62a9ce0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b56c62a8060" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b56c62adc60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b56c62baa70" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b56c5bcfd20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b56c62ba7f0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b56c62b95c0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b56c5bcfd20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b56c62b9340" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2b56c629c640" loc="48:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b56c61d6ac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b56c61cd240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b56c62c3420" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b56c5c16560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b56c62c1390" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b56c62c3c00" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b56c5c16180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b56c62c4b80" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b56c5c16180"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b56c5c16560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b56c62c45a0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b56c5c16180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b56c62c48f0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b56c5c16560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2b56c62b6c50" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b56c5bcfd20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b56c62bfc00" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b56c5bcfd20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b56c62c6d80" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b56c62bf610" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b56c62bf960" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b56c62bd3b0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b56c5bcfd20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b56c62be530" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b56c62beda0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b56c62bd110" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b56c6368af0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c597bc80"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b56c597a0d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x2b56c636b5a0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c5965e50"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b56c59632b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b56c636b320" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c5965e50"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b56c59632b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b56c6369840" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c5970770"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b56c5970b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x2b56c6371e10" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c595f750"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b56c595fb70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b56c63682e0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c5970770"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b56c5970b90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b56c6368060" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c5970770"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b56c5970b90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b56c6367560" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c597bc80"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b56c597a0d0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b56c63672e0" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c597bc80"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b56c597a0d0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x2b56c636c020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c596d3c0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b56c596d7e0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x2b56c636d6d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c5965e50"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b56c59632b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x2b56c636ca90" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c595f750"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b56c595fb70"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b56c636c810" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c595f750"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b56c595fb70"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x2b56c6369020" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c596d3c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b56c596d7e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b56c636bd60" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b56c596d3c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b56c596d7e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b56c636e3e0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c636e3e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2b56c63942a0" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2b56c6394020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b56c63950e0" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b56c636ed20" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c636e3e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b56c63972a0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c636e3e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b56c6397020" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c636e3e0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b56c6397a50" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b56c63958a0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b56c6399710" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c636e3e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b56c6399490" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b56c636e3e0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b56c63961f0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b56c6396940" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b56c6538190" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b56c6536350" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b56c6538b30" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b56c65388b0" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b56c653b900" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2b56c65752b0" loc="24:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2b56c6575b00" loc="31:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2b56c6574390" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2b56c65922b0" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b56c6593c60" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b56c6592020" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b56c658d610" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b56c658ebe0" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b56c658d020" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b56c658d370" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b56c6590e40" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b56c5bcfd20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b56c6590860" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b56c6590bb0" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2b56c6595e40" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b56c5bcfd20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b56c6595860" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b56c6595bb0" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b56c6591a10" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b56c65910d0" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b56c6591420" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b56c6591770" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b56c65b0990" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b56c65b0020" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b56c65b03b0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b56c65b06f0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b56c65ac020" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b56c65af1d0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b56c65af560" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b56c65af8a0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b56c4fbe5a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b56c65afc10" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b56c65b38f0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b56c65b3670" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b56c66592a0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b56c6659020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b56c6658680" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b56c6658400" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b56c6659b10" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b56c66572a0" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b56c6657020" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2b56c66430e0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2b56c6679070" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2b56c667ea00" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2b56c6679a90" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2b56c6679810" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2b56c66458f0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2b56c667c5c0" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2b56c667c340" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b56c663f020" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2b56c6641cf0" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b56c6642070" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2b56c66744e0" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b56c6674260" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b56c663f7c0" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2b56c6678c10" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2b56c6678990" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b56c6677b70" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2b56c667a8a0" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2b56c667a620" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2b56c6675b10" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2b56c667d3f0" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2b56c667d170" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b56c6642a50" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b56c66427d0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b56c667e2a0" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2b56c667e020" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2b56c667ce30" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2b56c6678270" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2b56c6677390" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b56c6675350" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2b56c667db70" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2b56c6643870" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b56c66414d0" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b56c6641250" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2b56c682a5e0" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b56c6873420" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2b56c6874a20" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2b56c6873190" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2b56c6874270" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2b56c6875a00" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b56c6875780" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b56c4fbf090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2b56c6840cb0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b56c4fbda90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c6840a30" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b56c6844ca0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b56c58b8020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c6844a20" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b56c6885c80" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c6885a00" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b56c6887ca0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b56c6887a20" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b56c5c200c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b56c5c1f6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b56c6a5a600" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b56c6a5a600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b56c6a572a0" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b56c58ba9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b56c6a5a600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b56c6a57020" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b56c6a5a600"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
